SELECT count(*) FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Stadium_ID JOIN concert ON concert.Stadium_ID = singer.Stadium_ID JOIN singer_in_concert ON singer_in_concert.Singer_ID = singer.Singer_ID WHERE singer.Is_male = 1 
SELECT count(*) FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Stadium_ID JOIN concert ON concert.Stadium_ID = singer.Stadium_ID JOIN singer_in_concert ON singer_in_concert.Singer_ID = singer.Singer_ID 
SELECT singer.Name,        singer.Country,        singer.Age FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Stadium_ID JOIN concert ON concert.Stadium_ID = singer.Stadium_ID JOIN singer_in_concert ON singer_in_concert.Singer_ID = singer.Singer_ID ORDER BY singer.Age DESC 
SELECT singer.Name,        singer.Country,        singer.Age FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Stadium_ID JOIN concert ON concert.Stadium_ID = singer.Stadium_ID JOIN singer_in_concert ON singer_in_concert.Singer_ID = singer.Singer_ID ORDER BY singer.Age DESC 
SELECT avg(singer.age),        min(singer.age),        max(singer.age) FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Stadium_ID JOIN concert ON concert.Stadium_ID = singer.Stadium_ID JOIN singer_in_concert ON singer_in_concert.Singer_ID = singer.Singer_ID WHERE singer.Country = "France" 
SELECT avg(singer.age),        min(singer.age),        max(singer.age) FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Stadium_ID JOIN concert ON concert.Stadium_ID = singer.Stadium_ID JOIN singer_in_concert ON singer_in_concert.Singer_ID = singer.Singer_ID WHERE singer.Country = "France" 
SELECT singer.Name,        concert.Year FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Stadium_ID JOIN concert ON concert.Stadium_ID = singer.Stadium_ID JOIN singer_in_concert ON singer_in_concert.Singer_ID = singer.Singer_ID WHERE singer.Is_male = 0 ORDER BY singer.Age ASC LIMIT 1 
SELECT singer.Name,        concert.Year FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Stadium_ID JOIN concert ON concert.Stadium_ID = singer.Stadium_ID JOIN singer_in_concert ON singer_in_concert.Singer_ID = singer.Singer_ID WHERE singer.Is_male = 0 ORDER BY singer.Age ASC LIMIT 1 
SELECT DISTINCT COUNT (DISTINCT singer.Country) FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON singer_in_concert.Singer_ID = stadium.Singer_ID WHERE singer.Is_male = 1   AND singer.Age > 20 
SELECT DISTINCT singer.Country FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Stadium_ID JOIN concert ON concert.Stadium_ID = stadium.Stadium_ID JOIN singer_in_concert ON singer_in_concert.Singer_ID = singer.Singer_ID WHERE singer.Age > 20 
SELECT COUNT(*),        country FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Stadium_ID JOIN concert ON concert.Stadium_ID = singer.Stadium_ID JOIN singer_in_concert ON singer_in_concert.Singer_ID = singer.Singer_ID WHERE singer.Is_male = 1 GROUP BY country 
SELECT singer.Country,        COUNT(*) FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Stadium_ID JOIN concert ON concert.Stadium_ID = singer.Stadium_ID JOIN singer_in_concert ON singer_in_concert.Singer_ID = singer.Singer_ID GROUP BY singer.Country 
SELECT singer.Song_Name FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Stadium_ID JOIN concert ON concert.Stadium_ID = stadium.Stadium_ID JOIN singer_in_concert ON singer_in_concert.Singer_ID = singer.Singer_ID WHERE singer.Age >     (SELECT avg(Age)      FROM singer) 
SELECT singer.Song_Name FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Stadium_ID JOIN concert ON concert.Stadium_ID = stadium.Stadium_ID JOIN singer_in_concert ON singer_in_concert.Singer_ID = singer.Singer_ID WHERE singer.Is_male = 0   AND singer.Age >   (SELECT avg(Age)    FROM singer) 
SELECT stadium.location,        stadium.name FROM stadium JOIN singer ON stadium.stadium_id = singer.singer_id JOIN concert ON concert.stadium_id = singer.singer_id WHERE singer.capacity BETWEEN 5000 AND 10000 
SELECT stadium.location,        stadium.name FROM stadium JOIN singer ON stadium.stadium_id = singer.singer_id JOIN concert ON concert.stadium_id = singer.singer_id JOIN singer_in_concert ON singer_in_concert.singer_id = singer.singer_id WHERE singer.capacity BETWEEN 5000 AND 10000 
SELECT max(stadium.capacity),        avg(stadium.capacity) FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Stadium_ID JOIN concert ON concert.Stadium_ID = singer.Stadium_ID JOIN singer_in_concert ON singer_in_concert.Singer_ID = singer.Singer_ID 
SELECT avg(capacity),        max(capacity) FROM stadium UNION SELECT avg(capacity),        max(capacity) FROM singer JOIN concert ON singer.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON singer_in_concert.Singer_ID = singer.Singer_ID 
SELECT stadium.name,        stadium.capacity FROM stadium JOIN singer ON stadium.stadium_id = singer.stadium_id JOIN concert ON concert.stadium_id = singer.stadium_id GROUP BY concert.stadium_id ORDER BY avg(concert.capacity) DESC LIMIT 1 
SELECT stadium.name,        stadium.capacity FROM stadium JOIN singer ON stadium.stadium_id = singer.stadium_id JOIN concert ON concert.stadium_id = singer.stadium_id GROUP BY concert.stadium_id ORDER BY avg(concert.capacity) DESC LIMIT 1 
SELECT count(*) FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON singer_in_concert.concert_ID = concert.concert_ID WHERE concert.year = 2014   OR concert.year = 2015 
SELECT count(*) FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Stadium_ID JOIN concert ON concert.Stadium_ID = singer.Stadium_ID JOIN singer_in_concert ON singer_in_concert.Singer_ID = singer.Singer_ID WHERE concert.Year = 2014   OR concert.Year = 2015 
SELECT stadium.name,        count(*) FROM stadium JOIN singer ON stadium.stadium_id = singer.stadium_id JOIN concert ON concert.stadium_id = singer.stadium_id JOIN singer_in_concert ON singer_in_concert.singer_id = singer.singer_id GROUP BY stadium.name 
SELECT stadium.name,        count(*) FROM stadium JOIN singer ON stadium.stadium_id = singer.singer_id JOIN concert ON concert.singer_id = singer.singer_id JOIN singer_in_concert ON singer_in_concert.singer_id = singer.singer_id WHERE stadium.capacity > 1000 GROUP BY stadium.name 
SELECT stadium.name,        stadium.capacity FROM stadium JOIN singer ON stadium.stadium_id = singer.stadium_id JOIN concert ON concert.stadium_id = singer.stadium_id JOIN singer_in_concert ON singer_in_concert.Singer_ID = singer.Singer_ID WHERE concert.year = 2014   OR concert.year > 2014 GROUP BY concert.year ORDER BY count(*) DESC LIMIT 1 
SELECT stadium.name,        stadium.capacity FROM stadium JOIN singer ON stadium.stadium_id = singer.stadium_id JOIN concert ON concert.stadium_id = singer.stadium_id JOIN singer_in_concert ON singer_in_concert.concert_id = concert.concert_id WHERE concert.year > 2013 GROUP BY stadium.stadium_id ORDER BY count(*) DESC LIMIT 1 
SELECT concert.year FROM stadium JOIN singer ON stadium.stadium_id = singer.stid JOIN concert ON concert.stadium_id = singer.stid GROUP BY concert.year ORDER BY count(*) DESC LIMIT 1 
SELECT concert.year FROM stadium JOIN singer ON stadium.stadium_id = singer.stid JOIN concert ON concert.stadium_id = singer.stid GROUP BY concert.year ORDER BY count(*) DESC LIMIT 1 
SELECT stadium.name FROM stadium JOIN singer ON stadium.stadium_id = singer.stadium_id JOIN concert ON concert.stadium_id = singer.stadium_id JOIN singer_in_concert ON singer_in_concert.concert_id = concert.concert_id WHERE singer.is_male = 0 
SELECT stadium.name FROM stadium JOIN singer ON stadium.stadium_id = singer.stadium_id JOIN concert ON concert.stadium_id = singer.stadium_id WHERE concert.concert_id = 0 
SELECT stadium.Location FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Stadium_ID JOIN concert ON concert.Stadium_ID = singer.Stadium_ID JOIN singer_in_concert ON singer_in_concert.Singer_ID = singer.Singer_ID WHERE singer.Age > 40 INTERSECT   SELECT stadium.Location   FROM stadium   JOIN singer ON stadium.Stadium_ID = singer.Stadium_ID   JOIN concert ON concert.Stadium_ID = singer.Stadium_ID   JOIN singer_in_concert ON singer_in_concert.Singer_ID = singer.Singer_ID WHERE singer.Age < 30 
SELECT stadium.name FROM stadium JOIN singer ON stadium.stadium_id = singer.stadium_id JOIN concert ON concert.stadium_id = singer.stadium_id WHERE concert.year = 2014 EXCEPT SELECT stadium.name FROM stadium JOIN singer ON stadium.stadium_id = singer.stadium_id JOIN concert ON concert.stadium_id = singer.stadium_id WHERE concert.year = 2014 
SELECT stadium.name FROM stadium JOIN singer ON stadium.stadium_id = singer.stadium_id JOIN concert ON concert.stadium_id = singer.stadium_id WHERE concert.year = 2014 EXCEPT SELECT stadium.name FROM stadium JOIN singer ON stadium.stadium_id = singer.stadium_id JOIN concert ON concert.stadium_id = singer.stadium_id WHERE concert.year = 2014 
SELECT concert.concert_name,        count(*) FROM stadium JOIN singer ON stadium.stadium_id = singer.stid JOIN concert ON concert.stadium_id = singer.stid JOIN singer_in_concert ON singer_in_concert.singer_id = singer.stid GROUP BY concert.concert_name 
SELECT concert.concert_name,        concert.theme,        count(*) FROM stadium JOIN singer ON stadium.stadium_id = singer.stid JOIN concert ON concert.stadium_id = singer.stid JOIN singer_in_concert ON singer_in_concert.singer_id = singer.stid GROUP BY concert.concert_name 
SELECT singer.Name,        count(*) FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Stadium_ID JOIN concert ON concert.Stadium_ID = stadium.Stadium_ID JOIN singer_in_concert ON singer_in_concert.Singer_ID = singer.Singer_ID GROUP BY singer.Name 
SELECT singer.Name,        count(*) FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Stadium_ID JOIN concert ON concert.Stadium_ID = stadium.Stadium_ID JOIN singer_in_concert ON singer_in_concert.Singer_ID = singer.Singer_ID GROUP BY singer.Name 
SELECT singer.Name FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Stadium_ID JOIN concert ON concert.Stadium_ID = stadium.Stadium_ID JOIN singer_in_concert ON singer_in_concert.Singer_ID = singer.Singer_ID WHERE concert.Year = 2014 
SELECT singer.Name FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Stadium_ID JOIN concert ON concert.Stadium_ID = stadium.Stadium_ID JOIN singer_in_concert ON singer_in_concert.Singer_ID = singer.Singer_ID WHERE concert.Year = 2014 
SELECT singer.Name,        singer.Country FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Stadium_ID JOIN concert ON concert.Stadium_ID = stadium.Stadium_ID JOIN singer_in_concert ON singer_in_concert.Singer_ID = singer.Singer_ID WHERE singer.Name LIKE "%Hey%" 
SELECT singer.Name,        singer.Country FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Stadium_ID JOIN concert ON concert.Stadium_ID = stadium.Stadium_ID JOIN singer_in_concert ON singer_in_concert.Singer_ID = singer.Singer_ID WHERE singer.Name LIKE '%Hey%' 
SELECT stadium.name,        stadium.location FROM stadium JOIN singer ON stadium.stadium_id = singer.singer_id JOIN concert ON concert.singer_id = singer.singer_id JOIN singer_in_concert ON singer_in_concert.singer_id = singer.singer_id WHERE concert.year = 2014 INTERSECT   SELECT stadium.name,          stadium.location   FROM stadium   JOIN singer ON stadium.stadium_id = singer.singer_id   JOIN concert ON concert.singer_id = singer.singer_id   JOIN singer_in_concert ON singer_in_concert.singer_id = singer.singer_id   WHERE concert.year = 2015 
SELECT stadium.name,        stadium.location FROM stadium JOIN singer ON stadium.stadium_id = singer.singer_id JOIN concert ON concert.singer_id = singer.singer_id JOIN singer_in_concert ON singer_in_concert.singer_id = singer.singer_id WHERE concert.year = 2014 INTERSECT   SELECT stadium.name,          stadium.location   FROM stadium   JOIN singer ON stadium.stadium_id = singer.singer_id   JOIN concert ON concert.singer_id = singer.singer_id   JOIN singer_in_concert ON singer_in_concert.singer_id = singer.singer_id   WHERE concert.year = 2015 
SELECT count(*) FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Stadium_ID JOIN concert ON concert.Stadium_ID = singer.Stadium_ID JOIN singer_in_concert ON singer_in_concert.Singer_ID = singer.Singer_ID WHERE singer.Highest =     (SELECT MAX (Highest)      FROM stadium)   AND concert.Highest =     (SELECT MAX (Highest)      FROM concert) 
SELECT count(*) FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Stadium_ID JOIN concert ON concert.Stadium_ID = singer.Stadium_ID JOIN singer_in_concert ON singer_in_concert.Singer_ID = singer.Singer_ID WHERE singer.Capacity =     (SELECT max(Capacity)      FROM stadium) 
SELECT count(*) FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.weight > 10 
SELECT count(*) FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.weight > 10 
SELECT pets.weight FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pet_type ON has_pet.pettype = pet_type.pettype WHERE student.age =     (SELECT min(student.age)      FROM student      JOIN has_pet ON student.stuid = has_pet.stuid      JOIN pet_type ON has_pet.pettype = pet_type.pettype      WHERE student.age =          (SELECT min(student.age)           FROM student           JOIN has_pet ON student.stuid = has_pet.stuid           JOIN pet_type ON has_pet.pettype = pet_type.pettype           WHERE student.age =               (SELECT min(student.age)                FROM student                JOIN has_pet ON student.stuid = has_pet.stuid                JOIN pet_type ON has_pet.pettype = pet_type.pettype                WHERE student.age =                    (SELECT min(student.age)                     FROM student                     JOIN has
SELECT pets.pet_age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.age =     (SELECT min(student.age)      FROM student      JOIN has_pet ON student.stuid = has_pet.stuid      JOIN pets ON has_pet.petid = pets.petid      WHERE student.age =          (SELECT min(student.age)           FROM student           JOIN has_pet ON student.stuid = has_pet.stuid           JOIN pets ON has_pet.petid = pets.petid           WHERE student.age =               (SELECT min(student.age)                FROM student                JOIN has_pet ON student.stuid = has_pet.stuid                JOIN pets ON has_pet.petid = pets.petid                WHERE student.age =                    (SELECT min(student.age)                     FROM student                     JOIN has_pet ON student.st
SELECT max(pet_age),        pettype FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid GROUP BY pettype 
SELECT max(pet_age),        pettype FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid GROUP BY pettype 
SELECT count(*) FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.age > 20 
SELECT count(*) FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.age > 20 
SELECT count(*) FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.sex = "F" 
SELECT count(*) FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.sex = "F" 
SELECT count(DISTINCT pet_type) FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid 
SELECT count(DISTINCT pet_type) FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid 
SELECT Fname FROM STUDENT WHERE StuID IN     (SELECT StuID      FROM Has_pet      JOIN Pets ON Has_pet.PetID = Pets.PetID      WHERE Pets.PetType = "Cat"        OR Pets.PetType = "Dog") 
SELECT DISTINCT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = "Cat"   OR pets.pettype = "Dog" 
SELECT Fname FROM STUDENT WHERE StuID IN     (SELECT Has_pet.StuID      FROM Has_pet      JOIN Pets ON Has_pet.PetID = Pets.PetID      WHERE Pets.PetType = "Cat" INTERSECT        SELECT Has_pet.StuID        FROM Has_pet        JOIN Pets ON Has_pet.PetID = Pets.PetID WHERE Pets.PetType = "Dog") 
SELECT Fname FROM STUDENT WHERE StuID IN     (SELECT Has_pet.StuID      FROM Has_pet      JOIN Pets ON Has_pet.PetID = Pets.PetID      WHERE Pets.PetType = "Cat" INTERSECT        SELECT Has_pet.StuID        FROM Has_pet        JOIN Pets ON Has_pet.PetID = Pets.PetID WHERE Pets.PetType = "Dog") 
SELECT major,        age FROM student EXCEPT SELECT student.major,        student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = "Cat" 
SELECT major,        age FROM student EXCEPT SELECT student.major,        student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = "Cat" 
SELECT StuID FROM Student EXCEPT SELECT StuID FROM Has_pet JOIN Pets ON Has_pet.PetID = Pets.PetID WHERE Pets.PetType = "Cat" 
SELECT StuID FROM Student EXCEPT SELECT StuID FROM Has_pet JOIN Pets ON Has_pet.PetID = Pets.PetID WHERE Pets.PetType = "Cat" 
SELECT DISTINCT student.fname,                 student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = "Dog" EXCEPT SELECT DISTINCT student.fname,                 student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = "Cat" 
SELECT DISTINCT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = "Dog" EXCEPT SELECT DISTINCT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = "Cat" 
SELECT pets.pet_type,        pets.weight FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.age =     (SELECT min(student.age)      FROM student      JOIN has_pet ON student.stuid = has_pet.stuid      JOIN pets ON has_pet.petid = pets.petid) 
SELECT pets.pet_type,        pet_age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid ORDER BY pet_age LIMIT 1 
SELECT pets.pet_id,        pets.weight FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.age > 1 
SELECT pets.pet_id,        pets.weight FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE has_pet.petid > 1 
SELECT avg(pet_age),        max(pet_age),        pets.pettype FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid GROUP BY pets.pettype 
SELECT avg(pet_age),        max(pet_age) FROM Student JOIN Has_pet ON Student.StuID = Has_pet.StuID JOIN Pets ON Has_pet.PetID = Pets.PetID WHERE Student.sex = "F" 
SELECT avg(pet_age),        pettype FROM Student JOIN Has_pet ON Student.StuID = Has_pet.StuID JOIN Pets ON Has_pet.PetID = Pets.PetID GROUP BY pettype 
SELECT avg(pet_age),        pettype FROM Student JOIN Has_pet ON Student.StuID = Has_pet.StuID JOIN Pets ON Has_pet.PetID = Pets.PetID GROUP BY pettype 
SELECT Student.Fname,        Student.Age FROM Student JOIN Has_pet ON Student.StuID = Has_pet.StuID JOIN Pets ON Has_pet.PetID = Pets.PetID 
SELECT DISTINCT Fname,                 Age FROM STUDENT JOIN HAS_PET ON STUDENT.StuID = HAS_PET.StuID JOIN PETS ON HAS_PET.PetID = PETS.PetID 
SELECT pet.pet_id FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.lname = "Smith" 
SELECT pets.pet_id FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.lname = "Smith" 
SELECT count(*),        student.StuID FROM student JOIN has_pet ON student.StuID = has_pet.StuID JOIN pets ON has_pet.PetID = pets.PetID GROUP BY student.StuID 
SELECT student.StuID,        count(*) FROM student JOIN has_pet ON student.StuID = has_pet.StuID JOIN pets ON has_pet.PetID = pets.PetID GROUP BY student.StuID 
SELECT Fname,        Sex FROM Student WHERE StuID IN     (SELECT StuID      FROM Has_pet      JOIN Pets ON Has_pet.PetID = Pets.PetID      GROUP BY StuID      HAVING count(*) > 1) 
SELECT Fname,        Sex FROM Student WHERE StuID IN     (SELECT StuID      FROM Has_pet      JOIN Pets ON Has_pet.PetID = Pets.PetID      GROUP BY StuID      HAVING count(*) > 1) 
SELECT LName FROM STUDENT WHERE StuID IN     (SELECT Has_pet.StuID      FROM Has_pet      JOIN Pets ON Has_pet.PetID = Pets.PetID      WHERE Pets.pet_age = 3) 
SELECT LName FROM STUDENT WHERE StuID IN     (SELECT Has_pet.StuID      FROM Has_pet      JOIN Pets ON Has_pet.PetID = Pets.PetID      WHERE Pets.pet_age = 3        AND Pets.species = "Cat") 
SELECT avg(student.age) FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE has_pet.stuid NOT IN     (SELECT student.stuid      FROM student      JOIN has_pet ON student.stuid = has_pet.stuid      JOIN pets ON has_pet.petid = pets.petid      WHERE pets.pettype = "dog") 
SELECT avg(student.age) FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE has_pet.stuid NOT IN     (SELECT student.stuid      FROM student      JOIN has_pet ON student.stuid = has_pet.stuid      JOIN pets ON has_pet.petid = pets.petid      WHERE pets.pettype = "dog") 
SELECT count(DISTINCT continents.continent) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON cars_data.id = model_list.id 
SELECT count(DISTINCT continents.continent) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON cars_data.id = model_list.id 
SELECT continents.Continent,        continents.Continent,        COUNT(*) FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON continents.Continent = car_makers.Continent JOIN model_list ON model_list.MakeId = car_makers.MakeId JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON cars_data.Id = car_names.MakeId GROUP BY continents.Continent 
SELECT continents.continent,        continents.countries,        COUNT(*) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON car_makers.id = continents.continent JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON car_names.model = model_list.model JOIN cars_data ON cars_data.id = car_names.id GROUP BY continents.continent 
SELECT count(DISTINCT countries.continent) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON cars_data.id = model_list.id 
SELECT count(DISTINCT continents.continent) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON cars_data.id = model_list.id 
SELECT car_makers.fullname,        count(*) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.id JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON cars_data.id = model_list.id GROUP BY car_makers.fullname 
SELECT car_makers.FullName,        count(*) FROM continents JOIN countries ON continents.ContId = countries.CountryId JOIN car_makers ON continents.Country = car_makers.Id JOIN model_list ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON cars_data.Id = model_list.Model GROUP BY car_makers.FullName 
SELECT model_list.model FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model GROUP BY model_list.model ORDER BY min(horsepower) LIMIT 1; 
SELECT model_list.model FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON cars_data.id = model_list.model ORDER BY cars_data.horsepower LIMIT 1 
SELECT model_list.model FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model WHERE car_names.weight <     (SELECT avg(weight)      FROM car_names) 
SELECT model_list.model FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model WHERE model_list.model <     (SELECT avg(model)      FROM car_names) 
SELECT car_makers.Maker FROM continents JOIN countries ON continents.ContId = countries.CountryId JOIN car_makers ON continents.Country = car_makers.Id JOIN model_list ON model_list.Maker = car_makers.Id JOIN cars_data ON cars_data.Id = model_list.Id WHERE model_list.Year = 1970 
SELECT DISTINCT car_makers.Maker FROM continents JOIN countries ON continents.ContId = countries.CountryId JOIN car_makers ON continents.Country = car_makers.Id JOIN model_list ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model WHERE model_list.Year = 1970 
SELECT car_names.Make,        cars_data.Year FROM continents JOIN countries ON continents.ContId = countries.CountryId JOIN car_makers ON continents.Country = car_makers.Country JOIN model_list ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Make JOIN cars_data ON cars_data.Id = car_names.MakeId ORDER BY cars_data.Year LIMIT 1 
SELECT car_makers.Maker,        model_list.Model FROM continents JOIN countries ON continents.ContId = countries.CountryId JOIN car_makers ON continents.Continent = car_makers.Id JOIN model_list ON model_list.Maker = car_makers.Id JOIN cars_data ON cars_data.Id = model_list.Id ORDER BY model_list.Model LIMIT 1 
SELECT DISTINCT model_list.model FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model WHERE model_list.year > 1980 
SELECT DISTINCT model_list.model FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model WHERE model_list.year > 1980 
SELECT continents.continent,        count(*) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON cars_data.id = model_list.id GROUP BY continents.continent 
SELECT continents.continent,        count(*) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.continent = car_makers.continent JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON cars_data.id = car_names.id GROUP BY continents.continent 
SELECT countries.continent FROM continents JOIN countries ON continents.continent = countries.contid JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model GROUP BY continents.continent ORDER BY count(*) DESC LIMIT 1; 
SELECT countries.continent FROM continents JOIN countries ON continents.continent = countries.contid JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model GROUP BY continents.continent ORDER BY count(*) DESC LIMIT 1 
SELECT model_list.maker,        count(*) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.id JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON cars_data.id = model_list.id GROUP BY model_list.maker 
SELECT count(*),        car_makers.maker FROM continents JOIN countries ON continents.continent = countries.countryid JOIN car_makers ON continents.countryid = car_makers.id JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON cars_data.id = car_names.id GROUP BY car_makers.id 
SELECT cars_data.Accelerate FROM continents JOIN countries ON continents.ContId = countries.CountryId JOIN car_makers ON continents.Country = car_makers.Country JOIN model_list ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model WHERE car_names.Make = "amc"   AND car_makers.FullName = "hornet sportabout" 
SELECT cars_data.Accelerate FROM continents JOIN countries ON continents.ContId = countries.CountryId JOIN car_makers ON continents.Country = car_makers.Country JOIN model_list ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model WHERE car_names.Make = "amc"   AND continents.Continent = "sw"   AND model_list.Model = "hornet sportabout" 
SELECT count(*) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model WHERE countries.country = "France" 
SELECT count(*) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model WHERE countries.country = "France" 
SELECT count(*) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model WHERE countries.country = "usa" GROUP BY car_names.model 
SELECT count(*) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model WHERE countries.country = "United States" 
SELECT avg(cars_data.mpg) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model WHERE car_makers.fullname = "Chevrolet"   AND car_names.make = "Corvette"   AND countries.country = "United States"   AND car_makers.country = "United States" GROUP BY car_names.make 
SELECT avg(cars_data.MPG) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model WHERE countries.continent = "Africa"   AND car_makers.Cylinders = 4 GROUP BY cars_data.id 
SELECT min(cars_data.Weight) FROM continents JOIN countries ON continents.Country = countries.Country JOIN car_makers ON continents.Continent = car_makers.Id JOIN model_list ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE car_makers.FullName = "BMW"   AND model_list.Model = "320i"   AND countries.Continent = "Europe"   AND continents.Continent = "Europe"   AND car_names.Year = 1974   AND cars_data.Cylinders = 8   AND cars_data.Accelerate = 0.5 
SELECT min(cars_data.Weight) FROM continents JOIN countries ON continents.Country = countries.Country JOIN car_makers ON continents.Continent = car_makers.Id JOIN model_list ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE car_makers.FullName = "BMW"   AND model_list.Model = "320i"   AND countries.Continent = "Europe"   AND cars_data.Year = 1974   AND continents.Continent = "Europe"; 
SELECT car_makers.Maker,        model_list.Model FROM continents JOIN countries ON continents.ContId = countries.CountryId JOIN car_makers ON continents.Continent = car_makers.Id JOIN model_list ON model_list.Maker = car_makers.Id JOIN cars_data ON cars_data.Id = model_list.Id 
SELECT car_makers.Maker,        model_list.Model FROM continents JOIN countries ON continents.ContId = countries.CountryId JOIN car_makers ON continents.Continent = car_makers.Id JOIN model_list ON model_list.Maker = car_makers.Id JOIN cars_data ON cars_data.Id = model_list.Id 
SELECT countries.continent,        car_makers.id FROM continents JOIN countries ON continents.continent = countries.countryid JOIN car_makers ON continents.country = car_makers.id GROUP BY car_makers.id HAVING count(*) >= 1 
SELECT countries.continent,        cars_data.id FROM continents JOIN countries ON continents.continent = countries.countryid JOIN car_makers ON cars_data.id = car_makers.id GROUP BY cars_data.id HAVING count(*) >= 1 
SELECT count(*) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON cars_data.id = car_names.id WHERE cars_data.horsepower > 150 
SELECT count(*) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON cars_data.id = car_names.id WHERE cars_data.horsepower > 150 
SELECT avg(cars_data.Weight) FROM continents JOIN countries ON continents.ContId = countries.CountryId JOIN car_makers ON continents.Country = car_makers.Country JOIN model_list ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE continents.Continent = "Africa" GROUP BY cars_data.Year 
SELECT avg(cars_data.Weight),        avg(cars_data.Year) FROM continents JOIN countries ON continents.ContId = countries.CountryId JOIN car_makers ON continents.Country = car_makers.Country JOIN model_list ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON cars_data.Id = car_names.MakeId GROUP BY cars_data.Year 
SELECT countries.continent FROM continents JOIN countries ON continents.continent = countries.contid JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model WHERE continents.continent = "europe" GROUP BY continents.continent HAVING count(*) >= 3 
SELECT countries.Continent FROM continents JOIN countries ON continents.ContId = countries.CountryId JOIN car_makers ON continents.Country = car_makers.Country JOIN model_list ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model WHERE continents.Continent = "Europe" GROUP BY continents.Continent HAVING count(*) >= 3 
SELECT max(cars_data.Horsepower),        car_names.Make FROM continents JOIN countries ON continents.ContId = countries.CountryId JOIN car_makers ON continents.Country = car_makers.Country JOIN model_list ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model WHERE countries.Continent = "Africa" GROUP BY car_names.Make 
SELECT max(cars_data.Horsepower),        car_names.Make FROM continents JOIN countries ON continents.ContId = countries.CountryId JOIN car_makers ON continents.Country = car_makers.Country JOIN model_list ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Make WHERE car_makers.FullName = "BMW"   AND countries.Country = "United States" GROUP BY car_names.Make ORDER BY max(cars_data.Horsepower) DESC LIMIT 1; 
SELECT model_list.model FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN cars_data ON cars_data.id = model_list.id WHERE car_makers.fullname = "Chevrolet" GROUP BY model_list.model ORDER BY max(cars_data.Accelerate) DESC LIMIT 1; 
SELECT model_list.model FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON cars_data.id = model_list.id GROUP BY model_list.model ORDER BY max(cars_data.Accelerate) DESC LIMIT 1; 
SELECT avg(cars_data.Horsepower) FROM continents JOIN countries ON continents.ContId = countries.CountryId JOIN car_makers ON countries.Country = car_makers.Country JOIN model_list ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model WHERE countries.Year < 1980 
SELECT avg(cars_data.Horsepower) FROM continents JOIN countries ON continents.ContId = countries.CountryId JOIN car_makers ON continents.Country = car_makers.Country JOIN model_list ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model WHERE countries.Year < 1980 
SELECT avg(edispl) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON cars_data.id = model_list.model WHERE car_names.make = "volvo" 
SELECT avg(edispl) FROM continents JOIN countries JOIN car_makers JOIN model_list JOIN car_names JOIN cars_data WHERE car_makers.FullName = "Volvo"   AND model_list.Model = "C30"   AND car_names.Make = "Volvo"   AND cars_data.Year = 2005; 
;
SELECT max(Accelerate) FROM continents JOIN countries JOIN car_makers JOIN model_list JOIN car_names JOIN cars_data WHERE continents.continent = car_makers.country   AND model_list.maker = car_makers.id   AND cars_data.cylinders = model_list.cylinders   AND cars_data.Accelerate = max(cars_data.Accelerate) 
SELECT model_list.model FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model GROUP BY model_list.model ORDER BY count(*) DESC LIMIT 1 
SELECT model_list.model FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON cars_data.id = model_list.id GROUP BY model_list.model ORDER BY count(*) DESC LIMIT 1 
SELECT count(*) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON cars_data.id = car_names.id WHERE car_makers.fullname LIKE "%Audi%"   AND car_makers.id NOT IN     (SELECT car_makers.id      FROM continents      JOIN countries ON continents.continent = countries.continent      JOIN car_makers ON continents.country = car_makers.country      JOIN model_list ON model_list.maker = car_makers.id      JOIN car_names ON model_list.model = car_names.model      JOIN cars_data ON cars_data.id = car_names.id      WHERE car_makers.fullname LIKE "%BMW%"        AND car_makers.id NOT
SELECT count(*) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON cars_data.id = car_names.id WHERE car_makers.fullname LIKE "%Audi%"   AND car_makers.id NOT IN     (SELECT car_makers.id      FROM continents      JOIN countries ON continents.country = countries.country      JOIN car_makers ON continents.continent = car_makers.country      JOIN model_list ON model_list.maker = car_makers.id      JOIN car_names ON model_list.model = car_names.model      JOIN cars_data ON cars_data.id = car_names.id      WHERE car_makers.fullname LIKE "%BMW%"        AND car_makers.id NOT IN
SELECT count(*) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model WHERE car_names.year = 1980 
SELECT count(*) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON car_makers.id = continents.countryid JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON car_names.model = model_list.model WHERE car_names.year = 1980 
SELECT count(*) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON cars_data.id = model_list.id WHERE car_makers.fullname = "American Motor Company" 
SELECT count(*) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON cars_data.id = model_list.id WHERE car_makers.name = "American Motor Company" 
SELECT car_makers.FullName,        cars_data.id FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.id JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model GROUP BY car_makers.id HAVING count(*) > 3 
SELECT car_makers.Maker,        cars_data.Id FROM continents JOIN countries ON continents.ContId = countries.CountryId JOIN car_makers ON continents.Country = car_makers.Id JOIN model_list ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model GROUP BY car_makers.Maker HAVING count(*) > 3 
SELECT DISTINCT model_list.model FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN cars_data ON cars_data.id = model_list.id WHERE car_makers.fullname = "General Motors"   OR model_list.weight > 3500 
SELECT DISTINCT model_list.model FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN cars_data ON cars_data.id = model_list.id WHERE car_makers.fullname = "General Motors"   OR model_list.model > 3500 
SELECT model_list.model FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN cars_data ON cars_data.id = model_list.id WHERE model_list.model LIKE "%3000%"   OR model_list.model LIKE "%4000%" 
SELECT DISTINCT cars_data.year FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON cars_data.id = car_names.id WHERE car_names.Horsepower < 3000   AND car_names.Horsepower > 4000 
SELECT cars_data.Horsepower FROM continents JOIN countries ON continents.ContId = countries.CountryId JOIN car_makers ON continents.Country = car_makers.Country JOIN model_list ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE car_names.Accelerate =     (SELECT max(Accelerate)      FROM cars_data) 
SELECT cars_data.Horsepower FROM continents JOIN countries ON continents.ContId = countries.CountryId JOIN car_makers ON continents.Country = car_makers.Country JOIN model_list ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON cars_data.Id = car_names.MakeId ORDER BY cars_data.Accelerate DESC LIMIT 1 
SELECT cars_data.Cylinders FROM continents JOIN countries ON continents.ContId = countries.CountryId JOIN car_makers ON continents.Country = car_makers.Country JOIN model_list ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model WHERE car_names.Make = "volvo" ORDER BY cars_data.Accelerate LIMIT 1; 
SELECT cars_data.Cylinders FROM continents JOIN countries ON continents.ContId = countries.CountryId JOIN car_makers ON continents.Country = car_makers.Country JOIN model_list ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model WHERE car_names.Make = "Volvo" ORDER BY cars_data.Accelerate LIMIT 1; 
SELECT count(*) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON cars_data.id = car_names.id WHERE car_names.Accelerate >     (SELECT max(Accelerate)      FROM cars_data) 
SELECT count(*) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON cars_data.id = car_names.id WHERE cars_data.Accelerate >     (SELECT max(Accelerate)      FROM cars_data) 
SELECT count(DISTINCT countries.continent) FROM continents JOIN countries ON continents.continent = countries.countryid JOIN car_makers ON continents.countryid = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON cars_data.id = model_list.id GROUP BY continents.continent HAVING count(DISTINCT countries.continent) > 2 
SELECT count(*) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model WHERE continents.country > 2 GROUP BY continents.country 
SELECT count(*) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON cars_data.id = car_names.id WHERE car_makers.fullname LIKE "%BMW%"   AND car_makers.id!= 1   AND car_makers.id!= 2   AND car_makers.id!= 3   AND car_makers.id!= 4   AND car_makers.id!= 5   AND car_makers.id!= 6   AND car_makers.id!= 7   AND car_makers.id!= 8   AND car_makers.id!= 9   AND car_makers.id!= 10   AND car_makers.id!= 11   AND car_m
SELECT count(*) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON cars_data.id = model_list.model WHERE car_makers.fullname = "BMW"   AND model_list.model = "3 Series"   AND car_names.make = "BMW"   AND car_names.model = "3 Series"   AND car_names.model = "3 Series"   AND car_names.model = "3 Series"   AND car_names.model = "3 Series"   AND car_names.model = "3 Series"   AND car_names.model = "3 Series"   AND car_names.model = "3 Series"   AND car_names.model = "3 Series"   AND car_names.model = "
SELECT model_list.model FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model WHERE countries.continent = "Africa"   AND car_makers.cylinders = 4 GROUP BY model_list.model ORDER BY max(car_names.horsepower) DESC LIMIT 1; 
SELECT model_list.model FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model WHERE car_makers.fullname = "Chevrolet" GROUP BY model_list.model ORDER BY sum(car_names.horsepower) DESC LIMIT 1; 
SELECT car_names.Make,        car_names.Make FROM continents JOIN countries ON continents.ContId = countries.CountryId JOIN car_makers ON continents.Country = car_makers.Country JOIN model_list ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Make WHERE car_names.Horsepower <     (SELECT min(Horsepower)      FROM cars_data) EXCEPT SELECT car_names.Make,        car_names.Make FROM continents JOIN countries ON continents.CountryId = countries.CountryId JOIN car_makers ON continents.Country = car_makers.Country JOIN model_list ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Make WHERE car_names.Horsepower <     (SELECT max(Horsepower)      FROM cars_data) 
SELECT car_names.Make,        car_names.Model FROM continents JOIN countries ON continents.ContId = countries.CountryId JOIN car_makers ON continents.Country = car_makers.Country JOIN model_list ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Make WHERE car_names.Horsepower < 4   AND continents.Continent!= "Europe" 
SELECT max(cars_data.MPG) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model WHERE countries.year < 1980   AND car_makers.fullname = "Chevrolet"   AND car_names.make = "Corvette"   AND car_makers.country = "United States"   AND model_list.cylinders = 8 
SELECT max(cars_data.mpg) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model WHERE countries.year < 1980   OR car_makers.cylinders = 8 
SELECT model_list.Model FROM continents JOIN countries ON continents.ContId = countries.CountryId JOIN car_makers ON continents.Country = car_makers.Country JOIN model_list ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model WHERE car_names.Make = 'Ford Motor Company' EXCEPT SELECT model_list.Model FROM continents JOIN countries ON continents.CountryId = countries.CountryId JOIN car_makers ON continents.Country = car_makers.Country JOIN model_list ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model WHERE car_names.Make = 'Ford Motor Company' 
SELECT DISTINCT model_list.model FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.maker = car_makers.id JOIN cars_data ON cars_data.id = model_list.id WHERE cars_data.Accelerate = 0.95   AND model_list.model!= "Ford Motor Company"   AND model_list.model!= "Ford"   AND model_list.model!= "Ford Mustang"   AND model_list.model!= "Ford Mustang GT"   AND model_list.model!= "Ford Mustang Shelby"   AND model_list.model!= "Ford Mustang GT350"   AND model_list.model!= "Ford Mustang GT350H"   AND model_list.model!= "Ford Mustang GT350H Shelby"   AND model_list.model!= "Ford
SELECT countries.continent FROM continents JOIN countries ON continents.continent = countries.contid WHERE countries.countryid NOT IN     (SELECT car_names.makeid      FROM car_names      JOIN cars_data ON car_names.id = cars_data.id      GROUP BY cars_data.id      HAVING count(*) = 1) 
SELECT countries.continent FROM continents JOIN countries ON continents.continent = countries.contid WHERE continents.continent = "Unknown" 
SELECT car_makers.id,        car_makers.maker FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.make = car_makers.id JOIN car_names ON model_list.model = car_names.model GROUP BY car_makers.id HAVING count(*) >= 2 EXCEPT SELECT car_makers.id,        car_makers.maker FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON continents.country = car_makers.country JOIN model_list ON model_list.make = car_makers.id JOIN car_names ON model_list.model = car_names.model GROUP BY car_makers.id HAVING count(*) >= 3 
SELECT car_names.MakeId,        car_makers.Maker FROM continents JOIN countries ON continents.ContId = countries.CountryId JOIN car_makers ON continents.Country = car_makers.Id JOIN model_list ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Make GROUP BY car_names.MakeId HAVING count(*) >= 2   AND count(*) > 3 
SELECT countries.continent,        car_makers.maker FROM continents JOIN countries ON continents.continent = countries.countryid JOIN car_makers ON continents.countryid = car_makers.id JOIN model_list ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model WHERE car_makers.maker NOT IN     (SELECT car_makers.maker      FROM continents      JOIN countries ON continents.continent = countries.countryid      JOIN car_makers ON continents.countryid = car_makers.id      JOIN model_list ON model_list.maker = car_makers.id      JOIN car_names ON model_list.model = car_names.model      WHERE car_names.make = 'fiat') GROUP BY continents.countryid HAVING count(*) > 3 
SELECT countries.Continent,        car_makers.FullName FROM continents JOIN countries ON continents.ContId = countries.CountryId JOIN car_makers ON continents.Country = car_makers.Id JOIN model_list ON model_list.MakeId = car_makers.MakeId JOIN cars_data ON cars_data.Id = model_list.ModelId GROUP BY car_makers.FullName HAVING count(*) > 3 UNION SELECT continents.Continent,        car_makers.FullName FROM continents JOIN countries ON continents.CountryId = countries.CountryId JOIN car_makers ON continents.Country = car_makers.Id JOIN model_list ON model_list.MakeId = car_makers.MakeId JOIN cars_data ON cars_data.Id = model_list.ModelId GROUP BY car_makers.FullName HAVING count(*) > 1 
SELECT airlines.country FROM airlines JOIN airports ON airports.airportcode = airlines.airportcode JOIN flights ON flights.destairport = airports.airportcode JOIN airlines ON airlines.uid = flights.airline WHERE airlines.abbreviation = "JetBlue Airways" 
SELECT airlines.country FROM airlines JOIN airports ON airports.airportcode = airlines.airportcode JOIN flights ON flights.destinationairport = airports.airportcode JOIN airlines ON airlines.uid = flights.airline WHERE airlines.airline = "Jetblue Airways" 
SELECT Abbreviation FROM airlines WHERE Airline = "JetBlue Airways" 
SELECT Abbreviation FROM airlines WHERE Airline = "Jetblue Airways" 
SELECT airlines.Airline,        airlines.Abbreviation FROM airlines JOIN airports ON airports.AirportCode = airlines.DestAirport JOIN flights ON flights.DestAirport = airports.AirportCode   AND flights.SourceAirport = airports.AirportCode WHERE airports.Country = "USA" 
SELECT airlines.Airline,        airlines.Abbreviation FROM airlines JOIN airports ON airports.AirportCode = airlines.DestAirport JOIN flights ON flights.DestAirport = airports.AirportCode   AND flights.SourceAirport = airports.AirportCode WHERE airports.Country = "USA" 
SELECT airports.city,        airports.airportname FROM airlines JOIN airports ON airlines.city = airports.city JOIN flights ON airlines.uid = flights.airline WHERE flights.destination = "Anthony" 
SELECT airports.city,        airports.airportname FROM airlines JOIN airports ON airlines.airportcode = airports.airportcode JOIN flights ON airlines.uid = flights.airline WHERE airports.city = "Anthony" 
SELECT count(*) FROM airlines 
SELECT count(*) FROM airlines UNION SELECT count(*) FROM flights 
SELECT count(DISTINCT airports.city) FROM airlines JOIN airports ON airlines.city = airports.city JOIN flights ON airlines.uid = flights.airline 
SELECT count(DISTINCT airports.city) FROM airlines JOIN airports ON airlines.city = airports.city JOIN flights ON airlines.uid = flights.airline 
SELECT count(*) FROM airlines JOIN airports ON airlines.AirportCode = airports.AirportCode JOIN flights ON airlines.Airline = flights.Airline WHERE airports.Country = "United States"   AND airlines.Country = "United States"; 
SELECT count(*) FROM airlines JOIN airports ON airlines.AirportCode = airports.AirportCode JOIN flights ON airlines.Airline = flights.Airline WHERE airports.Country = "United States"   AND airlines.Country = "United States"; 
SELECT airlines.Airline FROM airlines JOIN airports ON airports.AirportCode = airlines.AirportCode JOIN flights ON airports.AirportCode = flights.DestAirport WHERE airlines.Airline = "UAL" 
SELECT airlines.Airline FROM airlines JOIN airports ON airports.AirportCode = airlines.AirportCode JOIN flights ON airports.AirportCode = flights.DestAirport WHERE airlines.Abbreviation = "UAL" 
SELECT count(*) FROM airlines WHERE country = 'USA' 
SELECT count(*) FROM airlines WHERE country = 'USA' 
SELECT airports.city,        airports.country FROM airlines JOIN airports ON airlines.city = airports.city JOIN flights ON airlines.uid = flights.airline WHERE airports.city = "Alton"   AND airports.country = "United States"; 
SELECT airports.city,        airports.country FROM airlines JOIN airports ON airlines.airportcode = airports.airportcode JOIN flights ON airlines.uid = flights.airline WHERE airports.city = "Alton" 
SELECT airports.airportname FROM airlines JOIN airports ON airports.airportcode = airlines.airportcode WHERE airlines.airline = "AKO" 
SELECT airports.airportname FROM airlines JOIN airports ON airports.airportcode = airlines.airportcode WHERE airlines.abbreviation = "AKO" 
SELECT airports.City FROM airlines JOIN airports ON airports.City = airlines.City WHERE airlines.Airline = "Aberdeen" 
SELECT airports.City FROM airlines JOIN airports ON airports.AirportCode = airlines.AirportCode WHERE airlines.Country = "United Kingdom"   AND airports.City = "Aberdeen" 
SELECT count(*) FROM airlines JOIN airports ON airlines.AirportCode = airports.AirportCode JOIN flights ON airlines.Airline = flights.Airline WHERE airports.City = "APG" 
SELECT count(*) FROM airlines JOIN airports ON airlines.AirportCode = airports.AirportCode JOIN flights ON airlines.Airline = flights.Airline WHERE airports.City = "APG" 
SELECT count(*) FROM airlines JOIN airports ON airlines.AirportCode = airports.AirportCode JOIN flights ON airlines.Airline = flights.Airline WHERE flights.Destination = "ATO" 
SELECT count(*) FROM airlines JOIN airports ON airlines.AirportCode = airports.AirportCode JOIN flights ON airlines.Airline = flights.Airline WHERE airports.Country = "Australia"   AND airports.AirportName = "ATO" 
SELECT count(*) FROM airlines JOIN airports ON airlines.AirportCode = airports.AirportCode JOIN flights ON airlines.Airline = flights.Airline WHERE airports.City = "Aberdeen" 
SELECT count(*) FROM airlines JOIN airports ON airlines.AirportCode = airports.AirportCode JOIN flights ON airlines.Airline = flights.Airline WHERE airports.city = "Aberdeen"   AND flights.DestAirport = "Aberdeen"   AND airlines.abbreviation = "ABP"; 
SELECT count(*) FROM airlines JOIN airports ON airlines.AirportCode = airports.AirportCode JOIN flights ON airlines.Airline = flights.Airline WHERE airports.city = "Aberdeen" 
SELECT count(*) FROM airlines JOIN airports ON airlines.AirportCode = airports.AirportCode JOIN flights ON airlines.Airline = flights.Airline WHERE airports.city = "Aberdeen"   AND flights.DestAirport = "Aberdeen" 
SELECT count(*) FROM airlines JOIN airports ON airlines.AirportCode = airports.AirportCode JOIN flights ON airlines.uid = flights.Airline WHERE airports.city = 'Aberdeen'   AND flights.DestAirport = 'Ashley' 
SELECT count(*) FROM airlines JOIN airports ON airlines.AirportCode = airports.AirportCode JOIN flights ON airlines.Airline = flights.Airline WHERE airports.city = "Aberdeen"   AND flights.DestAirport = "Ashley" 
SELECT count(*) FROM airlines JOIN airports ON airports.airportcode = airlines.airportcode JOIN flights ON flights.destairport = airports.airportcode JOIN airlines ON airlines.airline = flights.sourceairport WHERE airlines.Airline = "JetBlue Airways" 
SELECT count(*) FROM airlines JOIN airports ON airlines.AirportCode = airports.AirportCode JOIN flights ON airlines.Airline = flights.Airline WHERE airlines.Airline = "Jetblue Airways" 
SELECT count(*) FROM airlines JOIN airports ON airlines.AirportCode = airports.AirportCode JOIN flights ON airlines.uid = flights.Airline WHERE airlines.Airline = "United Airlines"   AND airports.city = "ASY" 
SELECT count(*) FROM airlines JOIN airports ON airlines.AirportCode = airports.AirportCode JOIN flights ON airlines.uid = flights.Airline WHERE airlines.abbreviation = "United Airlines"   AND airports.city = "ASY" 
SELECT count(*) FROM airlines JOIN airports ON airlines.AirportCode = airports.AirportCode JOIN flights ON airlines.uid = flights.Airline WHERE airports.city = "AHD"   AND airlines.abbreviation = "United Airlines" 
SELECT count(*) FROM airlines JOIN airports ON airlines.AirportCode = airports.AirportCode JOIN flights ON airlines.uid = flights.Airline WHERE airports.country = "United States"   AND airports.city = "AHD"   AND airlines.abbreviation = "United Airlines" 
SELECT count(*) FROM airlines JOIN airports ON airlines.AirportCode = airports.AirportCode JOIN flights ON airlines.uid = flights.Airline WHERE airports.city = "Aberdeen"   AND airlines.abbreviation = "United" 
SELECT count(*) FROM airlines JOIN airports ON airlines.AirportCode = airports.AirportCode JOIN flights ON airlines.uid = flights.Airline WHERE airports.city = "Aberdeen"   AND airlines.abbreviation = "United Airlines" 
SELECT airports.city FROM airlines JOIN airports ON airports.city = airports.city JOIN flights ON airlines.Airline = flights.Airline GROUP BY airports.city ORDER BY count(*) DESC LIMIT 1 
SELECT airports.City FROM airlines JOIN airports ON airports.DestAirport = airlines.AirportCode GROUP BY airports.City ORDER BY count(*) DESC LIMIT 1 
SELECT airports.city FROM airlines JOIN airports ON airports.city = airports.city JOIN flights ON airlines.Airline = flights.Airline GROUP BY airports.city ORDER BY count(*) DESC LIMIT 1 
SELECT airports.City FROM airlines JOIN airports ON airports.City = airlines.City GROUP BY airports.City ORDER BY count(*) DESC LIMIT 1 
SELECT airports.airportcode FROM airlines JOIN airports ON airports.city = airlines.city JOIN flights ON airlines.uid = flights.destairport GROUP BY flights.destairport ORDER BY count(*) DESC LIMIT 1 
SELECT airports.airportcode FROM airlines JOIN airports ON airports.airportcode = airlines.airportcode GROUP BY airports.airportcode ORDER BY count(*) DESC LIMIT 1 
SELECT airports.airportcode FROM airlines JOIN airports ON airports.airportcode = airlines.airportcode GROUP BY airports.airportcode ORDER BY count(*) LIMIT 1 
SELECT airports.airportcode FROM airlines JOIN airports ON airports.airportcode = airlines.airportcode GROUP BY airports.airportcode ORDER BY count(*) LIMIT 1 
SELECT airlines.Airline FROM airlines JOIN airports ON airports.AirportCode = airlines.AirportCode JOIN flights ON airports.AirportCode = flights.DestAirport GROUP BY airlines.Airline ORDER BY count(*) DESC LIMIT 1 
SELECT airlines.Airline FROM airlines JOIN airports ON airports.AirportCode = airlines.AirportCode JOIN flights ON airports.AirportCode = flights.DestAirport GROUP BY airlines.Airline ORDER BY count(*) DESC LIMIT 1 
SELECT airlines.abbreviation,        airlines.country FROM airlines JOIN airports ON airports.airportcode = airlines.airportcode JOIN flights ON airports.airportcode = flights.DestAirport GROUP BY airlines.abbreviation ORDER BY count(*) LIMIT 1 
SELECT airlines.abbreviation,        airlines.country FROM airlines JOIN airports ON airports.airportcode = airlines.airportcode JOIN flights ON airports.airportcode = flights.DestAirport GROUP BY airlines.abbreviation ORDER BY count(*) LIMIT 1 
SELECT airlines.Airline FROM airlines JOIN airports ON airports.AirportCode = airlines.AirportCode WHERE airports.city = 'AHD' 
SELECT airlines.Airline FROM airlines JOIN airports ON airports.AirportCode = airlines.AirportCode JOIN flights ON airports.AirportCode = flights.SourceAirport WHERE airports.AirportName = "AHD" 
SELECT airlines.Airline FROM airlines JOIN airports ON airports.AirportCode = airlines.AirportCode JOIN flights ON airports.AirportCode = flights.DestAirport WHERE airports.AirportName = 'AHD' 
SELECT airlines.Airline FROM airlines JOIN airports ON airports.AirportCode = airlines.DestAirport JOIN flights ON flights.DestAirport = airports.AirportCode WHERE airports.AirportCode = "AHD" 
SELECT airlines.Airline FROM airlines JOIN airports ON airports.AirportCode = airlines.AirportCode JOIN flights ON airports.AirportCode = flights.DestAirport WHERE airports.Country = 'United States'   AND airports.Country = 'Canada'   AND airlines.Airline = 'American Airlines'   AND airlines.Airline = 'Delta Airlines' 
SELECT airlines.Airline FROM airlines JOIN airports ON airports.AirportCode = airlines.DestAirport JOIN flights ON airports.AirportCode = flights.DestAirport WHERE airports.Country = "United States"   AND airports.Country = "Canada"   AND flights.SourceAirport = "APG"   OR flights.SourceAirport = "CVO" 
SELECT airlines.Airline FROM airlines JOIN airports ON airports.AirportCode = airlines.AirportCode JOIN flights ON airports.AirportCode = flights.DestAirport WHERE airports.City = 'CVO' EXCEPT SELECT airlines.Airline FROM airlines JOIN airports ON airports.AirportCode = airlines.AirportCode JOIN flights ON airports.AirportCode = flights.DestAirport WHERE airports.City = 'APG' 
SELECT airlines.Airline FROM airlines JOIN airports ON airports.AirportCode = airlines.AirportCode JOIN flights ON airports.AirportCode = flights.DestAirport WHERE airlines.Airline = "CVO" EXCEPT SELECT airlines.Airline FROM airlines JOIN airports ON airports.AirportCode = airlines.AirportCode JOIN flights ON airports.AirportCode = flights.SourceAirport WHERE airlines.Airport = "APG" 
SELECT airlines.Airline FROM airlines JOIN airports ON airports.AirportCode = airlines.DestAirport JOIN flights ON airports.AirportCode = flights.DestAirport GROUP BY airlines.Airline HAVING count(*) >= 10 
SELECT airlines.Airline FROM airlines JOIN airports ON airports.AirportCode = airlines.AirportCode JOIN flights ON airports.AirportCode = flights.DestAirport GROUP BY airlines.Airline HAVING count(*) >= 10 
SELECT Airlines.Airline FROM Airlines JOIN Airports ON Airports.AirportCode = Airlines.DestAirport JOIN flights ON Airports.AirportCode = flights.DestAirport GROUP BY Airlines.Airline HAVING count(*) < 200 
SELECT Airlines.Airline FROM Airlines JOIN Airports ON Airports.AirportCode = Airlines.DestAirport JOIN flights ON Airports.AirportCode = flights.DestAirport GROUP BY Airlines.Airline HAVING count(*) < 200 
SELECT flights.flightno FROM airlines JOIN airports ON airports.airportcode = airlines.destinationairport JOIN flights ON airports.airportcode = flights.destinationairport WHERE airlines.airline = "United Airlines" 
SELECT flights.flightno FROM airlines JOIN airports ON airports.airportcode = airlines.airportcode JOIN flights ON airlines.uid = flights.uid WHERE airlines.abbreviation = "United Airlines" 
SELECT flights.flightno FROM airlines JOIN airports ON airports.airportcode = airlines.airportcode JOIN flights ON airports.airportcode = flights.destairport WHERE airports.country = "United States"   AND airports.city = "APG" 
SELECT flights.flightno FROM airlines JOIN airports ON airports.airportcode = airlines.airportcode JOIN flights ON airports.airportcode = flights.destairport WHERE airports.city = "APG" 
SELECT flights.flightno FROM airlines JOIN airports ON airports.airportcode = airlines.airportcode WHERE airports.country = "United States"   AND airports.city = "APG" 
SELECT flights.flightno FROM airlines JOIN airports ON airports.airportcode = airlines.airportcode JOIN flights ON airports.airportcode = flights.destairport WHERE airports.country = "United States"   AND airports.city = "Atlanta"   AND airlines.abbreviation = "APG"; 
SELECT flights.flightno FROM airlines JOIN airports ON airports.airportcode = airlines.airportcode JOIN flights ON airports.airportcode = flights.destairport WHERE airports.city = "Aberdeen" 
SELECT flights.flightno FROM airlines JOIN airports ON airports.airportcode = airlines.airportcode JOIN flights ON airports.airportcode = flights.destairport WHERE airports.city = "Aberdeen" 
SELECT flights.flightno FROM airlines JOIN airports ON airports.airportcode = airlines.airportcode JOIN flights ON airports.airportcode = flights.destairport WHERE airports.city = "Aberdeen" 
SELECT flights.flightno FROM airlines JOIN airports ON airports.airportcode = airlines.airportcode JOIN flights ON airports.airportcode = flights.destairport WHERE airports.city = "Aberdeen" 
SELECT count(*) FROM airlines JOIN airports ON airlines.AirportCode = airports.AirportCode JOIN flights ON airlines.uid = flights.Airline WHERE airports.city = "Aberdeen"   OR airports.city = "Abilene" 
SELECT count(*) FROM airlines JOIN airports ON airlines.AirportCode = airports.AirportCode WHERE airports.city = "Aberdeen"   OR airports.city = "Abilene" 
SELECT airports.City FROM airlines JOIN airports ON airlines.AirportCode = airports.AirportCode EXCEPT SELECT airports.City FROM airlines JOIN flights ON airlines.AirportCode = flights.DestAirport JOIN airports ON airports.AirportCode = flights.SourceAirport 
SELECT airports.City FROM airlines JOIN airports ON airlines.AirportCode = airports.AirportCode EXCEPT SELECT airports.City FROM airlines JOIN airports ON airlines.AirportCode = airports.AirportCode JOIN flights ON airlines.Airline = flights.Airline 
SELECT count(*) FROM employee 
SELECT count(*) FROM employee 
SELECT employee.name FROM employee JOIN shop ON employee.employee_id = shop.employee_id JOIN hiring ON hiring.employee_id = employee.employee_id JOIN evaluation ON evaluation.employee_id = employee.employee_id ORDER BY employee.age ASC 
SELECT employee.name,        employee.age FROM employee JOIN shop ON employee.shop_id = shop.shop_id JOIN hiring ON hiring.employee_id = employee.employee_id JOIN evaluation ON evaluation.employee_id = employee.employee_id ORDER BY employee.age ASC 
SELECT count(*),        city FROM employee JOIN shop ON employee.shop_id = shop.shop_id JOIN hiring ON hiring.employee_id = employee.employee_id JOIN evaluation ON evaluation.employee_id = employee.employee_id GROUP BY city 
SELECT count(*),        city FROM employee JOIN shop ON employee.employee_id = shop.employee_id JOIN hiring ON hiring.employee_id = employee.employee_id JOIN evaluation ON evaluation.employee_id = employee.employee_id GROUP BY city 
SELECT DISTINCT shop.name FROM employee JOIN shop ON employee.shop_id = shop.shop_id JOIN hiring ON hiring.employee_id = employee.employee_id JOIN evaluation ON evaluation.employee_id = employee.employee_id WHERE employee.age < 30 GROUP BY shop.name HAVING count(*) > 1 
SELECT DISTINCT shop.name FROM employee JOIN shop ON employee.shop_id = shop.shop_id JOIN hiring ON hiring.employee_id = employee.employee_id JOIN evaluation ON evaluation.employee_id = employee.employee_id WHERE employee.age < 30 GROUP BY shop.name HAVING count(*) > 1 
SELECT count(*),        LOCATION FROM employee JOIN shop ON employee.Shop_ID = shop.Shop_ID JOIN hiring ON hiring.Shop_ID = shop.Shop_ID JOIN evaluation ON hiring.Employee_ID = evaluation.Employee_ID GROUP BY LOCATION 
SELECT count(*),        LOCATION FROM employee JOIN shop ON employee.shop_id = shop.shop_id JOIN hiring ON hiring.shop_id = shop.shop_id JOIN evaluation ON hiring.employee_id = evaluation.employee_id GROUP BY LOCATION 
SELECT shop.name,        shop.district FROM employee JOIN shop ON employee.shop_id = shop.shop_id JOIN hiring ON employee.employee_id = hiring.employee_id JOIN evaluation ON hiring.employee_id = evaluation.employee_id GROUP BY shop.district ORDER BY count(*) DESC LIMIT 1 
SELECT shop.name,        shop.district FROM employee JOIN shop ON employee.shop_id = shop.shop_id JOIN hiring ON employee.employee_id = hiring.employee_id JOIN evaluation ON hiring.employee_id = evaluation.employee_id GROUP BY hiring.shop_id ORDER BY count(*) DESC LIMIT 1 
SELECT min(shop.number_products),        max(shop.number_products) FROM employee JOIN shop ON employee.shop_id = shop.shop_id JOIN hiring ON hiring.shop_id = shop.shop_id JOIN evaluation ON hiring.employee_id = evaluation.employee_id 
SELECT min(shop.number_products),        max(shop.number_products) FROM employee JOIN shop ON employee.shop_id = shop.shop_id JOIN hiring ON hiring.employee_id = employee.employee_id JOIN evaluation ON evaluation.employee_id = employee.employee_id 
SELECT shop.name,        shop.location,        shop.district FROM employee JOIN shop ON employee.shop_id = shop.shop_id JOIN hiring ON hiring.shop_id = shop.shop_id JOIN evaluation ON hiring.employee_id = evaluation.employee_id ORDER BY shop.number_products DESC 
SELECT shop.name,        shop.location,        shop.district FROM employee JOIN shop ON employee.shop_id = shop.shop_id JOIN hiring ON hiring.shop_id = shop.shop_id JOIN evaluation ON hiring.employee_id = evaluation.employee_id ORDER BY shop.number_products DESC 
SELECT shop.name FROM employee JOIN shop ON employee.shop_id = shop.shop_id JOIN hiring ON employee.employee_id = hiring.employee_id JOIN evaluation ON employee.employee_id = evaluation.employee_id GROUP BY shop.name HAVING avg(hiring.number_products) > 
SELECT shop.name FROM employee JOIN shop ON employee.shop_id = shop.shop_id GROUP BY employee.shop_id HAVING avg(shop.number_products) > 
SELECT employee.name FROM employee JOIN shop ON employee.employee_id = shop.employee_id JOIN hiring ON hiring.employee_id = employee.employee_id JOIN evaluation ON hiring.employee_id = evaluation.employee_id GROUP BY hiring.employee_id ORDER BY count(*) DESC LIMIT 1 
SELECT employee.name FROM employee JOIN shop ON employee.employee_id = shop.employee_id JOIN hiring ON hiring.employee_id = employee.employee_id JOIN evaluation ON hiring.employee_id = evaluation.employee_id GROUP BY hiring.employee_id ORDER BY count(*) DESC LIMIT 1 
SELECT employee.name FROM employee JOIN shop ON employee.employee_id = shop.employee_id JOIN hiring ON hiring.employee_id = employee.employee_id JOIN evaluation ON hiring.employee_id = evaluation.employee_id ORDER BY evaluation.bonus DESC LIMIT 1 
SELECT employee.name FROM employee JOIN shop ON employee.employee_id = shop.employee_id JOIN hiring ON hiring.employee_id = employee.employee_id JOIN evaluation ON hiring.employee_id = evaluation.employee_id WHERE evaluation.bonus =     (SELECT max(bonus)      FROM evaluation) 
SELECT name FROM employee EXCEPT SELECT employee.name FROM shop JOIN hiring ON shop.shop_id = hiring.shop_id JOIN evaluation ON hiring.employee_id = evaluation.employee_id 
SELECT name FROM employee WHERE employee_id NOT IN     (SELECT employee_id      FROM hiring      JOIN evaluation ON hiring.employee_id = evaluation.employee_id) 
SELECT shop.name FROM employee JOIN hiring ON employee.employee_id = hiring.employee_id JOIN evaluation ON employee.employee_id = evaluation.employee_id GROUP BY hiring.employee_id ORDER BY count(*) DESC LIMIT 1 
SELECT shop.name FROM employee JOIN shop ON employee.shop_id = shop.shop_id GROUP BY employee.shop_id ORDER BY count(*) DESC LIMIT 1 
SELECT name FROM employee EXCEPT SELECT shop.name FROM shop JOIN hiring ON shop.shop_id = hiring.shop_id JOIN evaluation ON hiring.employee_id = evaluation.employee_id 
SELECT name FROM shop EXCEPT SELECT shop.name FROM employee JOIN hiring ON employee.employee_id = hiring.shop_id JOIN evaluation ON employee.employee_id = evaluation.employee_id 
SELECT count(*),        shop.name FROM employee JOIN shop ON employee.shop_id = shop.shop_id JOIN hiring ON employee.employee_id = hiring.employee_id JOIN evaluation ON employee.employee_id = evaluation.employee_id GROUP BY shop.name 
SELECT count(*),        shop.name FROM employee JOIN shop ON employee.shop_id = shop.shop_id JOIN hiring ON hiring.shop_id = shop.shop_id JOIN evaluation ON hiring.employee_id = evaluation.employee_id GROUP BY shop.name 
SELECT sum(evaluation.Bonus) FROM employee JOIN shop ON employee.Employee_ID = shop.Employee_ID JOIN hiring ON hiring.Employee_ID = employee.Employee_ID JOIN evaluation ON hiring.Shop_ID = evaluation.Shop_ID 
SELECT sum(evaluation.Bonus) FROM employee JOIN shop ON employee.Employee_ID = shop.Employee_ID JOIN hiring ON hiring.Employee_ID = employee.Employee_ID JOIN evaluation ON hiring.Shop_ID = evaluation.Shop_ID 
SELECT * FROM employee JOIN hiring ON employee.Employee_ID = hiring.Employee_ID JOIN evaluation ON hiring.Employee_ID = evaluation.Employee_ID 
SELECT * FROM employee JOIN hiring ON employee.Employee_ID = hiring.Employee_ID JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID 
SELECT shop.district FROM employee JOIN shop ON employee.shop_id = shop.shop_id JOIN hiring ON employee.employee_id = hiring.employee_id JOIN evaluation ON employee.employee_id = evaluation.employee_id WHERE shop.number_products < 3000 INTERSECT   SELECT shop.district   FROM employee   JOIN shop ON employee.shop_id = shop.shop_id   JOIN hiring ON employee.employee_id = hiring.employee_id   JOIN evaluation ON employee.employee_id = evaluation.employee_id WHERE shop.number_products > 10000 
SELECT shop.district FROM employee JOIN shop ON employee.shop_id = shop.shop_id JOIN hiring ON employee.employee_id = hiring.employee_id JOIN evaluation ON employee.employee_id = evaluation.employee_id WHERE hiring.shop_id IN     (SELECT shop_id      FROM shop      GROUP BY shop_id      HAVING count(*) < 3000)   AND hiring.shop_id IN     (SELECT shop_id      FROM shop      GROUP BY shop_id      HAVING count(*) > 10000) 
SELECT count(DISTINCT LOCATION) FROM employee JOIN shop ON employee.shop_id = shop.shop_id JOIN hiring ON hiring.shop_id = shop.shop_id JOIN evaluation ON hiring.employee_id = evaluation.employee_id 
SELECT count(DISTINCT shop.location) FROM employee JOIN shop ON employee.shop_id = shop.shop_id JOIN hiring ON hiring.shop_id = shop.shop_id JOIN evaluation ON hiring.employee_id = evaluation.employee_id 
SELECT count(*) FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID 
SELECT count(*) FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID 
SELECT Documents.Document_ID,        Documents.Document_Name,        Documents.Document_Description FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID 
SELECT Documents.Document_ID,        Documents.Document_Name,        Documents.Document_Description FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID 
SELECT Documents.document_name,        Templates.template_type_code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Documents.template_id = Templates.template_id WHERE Documents.document_name LIKE "%w%" 
SELECT Documents.Document_ID,        Templates.Template_Type_Code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Documents.Document_ID = Templates.Template_ID WHERE Documents.Document_Description LIKE "%w%" 
SELECT documents.document_id,        templates.template_type_code,        documents.document_name FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code JOIN documents ON documents.template_id = ref_template_types.template_type_code JOIN paragraphs ON documents.document_id = paragraphs.document_id WHERE documents.document_name = "Robbin CV" 
SELECT Documents.document_id,        Templates.template_type_code,        Documents.document_name FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Documents.template_id = Templates.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id WHERE Documents.document_name = "Robbin CV" 
SELECT count(DISTINCT TEMPLATES.template_type_code) FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code JOIN documents ON documents.template_id = templates.template_id JOIN paragraphs ON documents.document_id = paragraphs.document_id 
SELECT count(DISTINCT TEMPLATES.Template_Type_Code) FROM ref_template_types JOIN Templates ON ref_template_types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Documents.Document_Name LIKE "%Document%"; 
SELECT count(*) FROM Ref_template_types JOIN Templates ON Ref_template_types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id WHERE Ref_template_types.template_type_description = "PPT" 
SELECT count(*) FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Ref_Template_Types.Template_Type_Description = "PPT" 
SELECT Ref_Template_Types.Template_Type_Code,        count(*) FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Ref_Template_Types.Template_Type_Code 
SELECT Ref_Template_Types.Template_Type_Code,        count(*) FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Ref_Template_Types.Template_Type_Code 
SELECT templates.template_type_code,        ref_template_types.template_type_description FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code JOIN documents ON documents.template_id = templates.template_id JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY ref_template_types.template_type_code ORDER BY count(*) DESC LIMIT 1 
SELECT Templates.template_type_code,        Templates.template_type_description FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Documents.template_id = Templates.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id GROUP BY Templates.template_type_code ORDER BY count(*) DESC LIMIT 1 
SELECT Ref_Template_Types.template_type_code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id GROUP BY Ref_Template_Types.template_type_code HAVING count(*) > 1 
SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Ref_Template_Types.Template_Type_Code HAVING count(*) > 1 
SELECT template_type_code FROM Ref_template_types EXCEPT SELECT template_type_code FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID 
SELECT template_id FROM Ref_template_types EXCEPT SELECT document_id FROM Documents JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id 
SELECT count(*) FROM Ref_Template_Types UNION SELECT count(*) FROM Templates UNION SELECT count(*) FROM Documents UNION SELECT count(*) FROM Paragraphs 
SELECT count(*) FROM Ref_Template_Types UNION SELECT count(*) FROM Templates UNION SELECT count(*) FROM Documents UNION SELECT count(*) FROM Paragraphs 
SELECT Templates.template_id,        Templates.version_number,        Ref_Template_Types.template_type_code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Documents.template_id = Templates.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id 
SELECT Templates.Template_ID,        Templates.Date_Effective_From,        Templates.Date_Effective_To,        Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Documents.Template_ID = Templates.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID 
SELECT DISTINCT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID 
SELECT DISTINCT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID 
SELECT Templates.Template_ID FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = "PP"   OR Ref_Template_Types.Template_Type_Description = "PPT" 
SELECT Templates.Template_Type_Code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = "PP"   OR Ref_Template_Types.Template_Type_Description = "PPT" 
SELECT count(*) FROM Ref_template_types JOIN Templates ON Ref_template_types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id WHERE Ref_template_types.template_type_description = "CV" 
SELECT count(*) FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Ref_Template_Types.Template_Type_Description = "CV" 
SELECT Templates.Template_Type_Code,        Templates.Date_Effective_From FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code WHERE Templates.Date_Effective_From > 5 
SELECT Templates.template_type_code,        Templates.version_number FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Documents.template_id = Templates.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id WHERE Paragraphs.version_number > 5 
SELECT Ref_Template_Types.Template_Type_Code,        count(*) FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Ref_Template_Types.Template_Type_Code 
SELECT Ref_Template_Types.Template_Type_Code,        count(*) FROM Ref_Template_Types JOIN Templates ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code JOIN Documents ON Documents.Template_ID = Templates.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Ref_Template_Types.Template_Type_Code 
SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Ref_Template_Types.Template_Type_Code ORDER BY count(*) DESC LIMIT 1 
SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Ref_Template_Types.Template_Type_Code ORDER BY count(*) DESC LIMIT 1 
SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Ref_Template_Types.Template_Type_Code HAVING count(*) < 3 
SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Ref_Template_Types.Template_Type_Code HAVING count(*) < 3 
SELECT min(Templates.Date_Effective_From),        Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Documents.Template_ID = Templates.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Ref_Template_Types.Template_Type_Code 
SELECT min(Templates.Date_Effective_From),        Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Ref_Template_Types.Template_Type_Code 
SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Documents.Document_Name = "Data base" 
SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Documents.Document_Name = "Data base" 
SELECT Documents.Document_Name FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Ref_Template_Types.Template_Type_Description = "BK" 
SELECT Documents.Document_Name FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Ref_Template_Types.Template_Type_Description = "BK" 
SELECT Ref_Template_Types.Template_Type_Code,        count(*) FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Ref_Template_Types.Template_Type_Code 
SELECT Ref_Template_Types.Template_Type_Code,        count(*) FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Ref_Template_Types.Template_Type_Code 
SELECT Ref_Template_Types.template_type_code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id GROUP BY Ref_Template_Types.template_type_code ORDER BY count(*) DESC LIMIT 1 
SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Ref_Template_Types.Template_Type_Code ORDER BY count(*) DESC LIMIT 1 
SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Documents.Document_ID NOT IN     (SELECT Documents.Document_ID      FROM Documents      JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID      JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID      JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID      WHERE Documents.Document_ID NOT IN          (SELECT Documents.Document_ID           FROM Documents           JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID           JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID           JOIN Paragraphs ON Documents
SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Documents.Document_ID NOT IN     (SELECT Documents.Document_ID      FROM Documents      JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID      JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID      JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID      WHERE Documents.Document_ID NOT IN          (SELECT Documents.Document_ID           FROM Documents           JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID           JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID           JOIN Paragraphs ON Documents
SELECT Ref_Template_Types.Template_Type_Code,        Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types JOIN Templates ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code JOIN Documents ON Documents.Template_ID = Templates.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID 
SELECT Ref_Template_Types.Template_Type_Code,        Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types JOIN Templates ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code JOIN Documents ON Documents.Template_ID = Templates.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID 
SELECT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Ref_Template_Types.Template_Type_Description = "AD" 
SELECT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Ref_Template_Types.Template_Type_Code = "AD" 
SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Documents.Document_Description = "Book" 
SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Documents.Document_Description = "Book" 
SELECT DISTINCT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Documents.Document_ID IN     (SELECT Documents.Document_ID      FROM Documents      JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID      JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID      JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID      WHERE Documents.Document_ID IN          (SELECT Documents.Document_ID           FROM Documents           JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID           JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID           JOIN Paragraphs ON Document
SELECT DISTINCT documents.document_description FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code JOIN documents ON documents.template_id = templates.template_id JOIN paragraphs ON documents.document_id = paragraphs.document_id WHERE documents.document_id IN     (SELECT document_id      FROM documents      JOIN paragraphs ON documents.document_id = paragraphs.document_id      WHERE paragraphs.paragraph_text = "Paragraph 1") 
SELECT Templates.Template_Type_Code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = "Presentation" 
SELECT templates.template_id FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code WHERE ref_template_types.template_type_description = 'Presentation' 
SELECT count(*) FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID 
SELECT count(*) FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Ref_Template_Types.Template_Type_Description = "Paragraphs" 
SELECT count(*) FROM Ref_template_types JOIN Templates ON Ref_template_types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id WHERE Documents.document_name = "Summer Show" 
SELECT COUNT (DISTINCT paragraphs.paragraph_text) FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code JOIN documents ON documents.template_id = templates.template_id JOIN paragraphs ON documents.document_id = paragraphs.document_id WHERE documents.document_name = "Summer Show" 
SELECT paragraphs.paragraph_text FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code JOIN documents ON documents.template_id = templates.template_id JOIN paragraphs ON documents.document_id = paragraphs.document_id WHERE templates.template_type_description = "Korea" 
SELECT Documents.Other_Details FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Paragraphs.Paragraph_Text = "Korea" 
SELECT Paragraphs.Paragraph_ID,        Documents.Document_ID,        Paragraphs.Paragraph_Text FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Documents.Document_Name = "Welcome to NY" 
SELECT Documents.Document_ID,        Paragraphs.Paragraph_ID,        Paragraphs.Paragraph_Text FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Documents.Document_Name = "Welcome to NY" 
SELECT Paragraphs.Paragraph_Text FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Documents.Document_Name = "Customer reviews" 
SELECT Paragraphs.Paragraph_Text FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Documents.Document_Name = "Customer reviews" 
SELECT Documents.document_id,        count(*) FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id GROUP BY Documents.document_id ORDER BY Documents.document_id 
SELECT Documents.Document_ID,        Paragraphs.Document_ID,        count(*) FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID ORDER BY Documents.Document_ID 
SELECT Documents.document_id,        Documents.document_name,        count(*) FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id GROUP BY Documents.document_id 
SELECT Documents.Document_ID,        Documents.Document_Name,        Paragraphs.Paragraph_ID,        Paragraphs.Paragraph_Text,        count(*) FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID 
SELECT Documents.Document_ID FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID HAVING COUNT(*) >= 2 
SELECT Documents.Document_ID FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID HAVING COUNT(*) >= 2 
SELECT Documents.Document_ID,        Documents.Document_Name FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID ORDER BY count(*) DESC LIMIT 1 
SELECT documents.document_id,        documents.document_name FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code JOIN documents ON documents.template_id = templates.template_id JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id ORDER BY count(*) DESC LIMIT 1 
SELECT Documents.Document_ID FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID ORDER BY count(*) LIMIT 1 
SELECT documents.document_id FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code JOIN documents ON documents.template_id = templates.template_id JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id ORDER BY count(*) LIMIT 1 
SELECT Documents.Document_ID FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Ref_Template_Types.Template_Type_Description = "Paragraph 1"   OR Ref_Template_Types.Template_Type_Description = "Paragraph 2" 
SELECT Documents.Document_ID FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID HAVING Paragraphs.Paragraph_ID BETWEEN 1 AND 2 
SELECT Documents.Document_ID FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Paragraphs.Paragraph_Text = "Brazil" INTERSECT   SELECT Documents.Document_ID   FROM Ref_Template_Types   JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code   JOIN Documents ON Templates.Template_ID = Documents.Template_ID   JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID   WHERE Paragraphs.Paragraph_Text = "Ireland" 
SELECT documents.document_id FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code JOIN documents ON documents.template_id = templates.template_id JOIN paragraphs ON documents.document_id = paragraphs.document_id WHERE templates.template_type_description = "Brazil" INTERSECT   SELECT documents.document_id   FROM ref_template_types   JOIN templates ON ref_template_types.template_type_code = templates.template_type_code   JOIN documents ON documents.template_id = templates.template_id   JOIN paragraphs ON documents.document_id = paragraphs.document_id WHERE templates.template_type_description = "Ireland" 
SELECT count(DISTINCT teacher.Name) FROM course JOIN teacher ON course.Teacher_ID = teacher.Teacher_ID JOIN course_arrange ON course_arrange.Course_ID = course.Course_ID 
SELECT count(DISTINCT teacher.name) FROM course JOIN teacher ON course.teacher_id = teacher.teacher_id JOIN course_arrange ON course_arrange.course_id = course.course_id 
SELECT teacher.Name FROM course JOIN teacher ON course.Teacher_ID = teacher.Teacher_ID ORDER BY teacher.Age ASC 
SELECT teacher.Name FROM course JOIN teacher ON course.Teacher_ID = teacher.Teacher_ID ORDER BY teacher.Age ASC 
SELECT teacher.Age,        teacher.Hometown FROM course JOIN teacher ON course.Teacher_ID = teacher.Teacher_ID JOIN course_arrange ON course_arrange.Course_ID = course.Course_ID 
SELECT teacher.Age,        teacher.Hometown FROM course JOIN teacher ON course.Teacher_ID = teacher.Teacher_ID JOIN course_arrange ON course_arrange.Course_ID = course.Course_ID 
SELECT teacher.Name FROM course JOIN teacher ON course.Teacher_ID = teacher.Teacher_ID JOIN course_arrange ON course_arrange.Course_ID = course.Course_ID WHERE teacher.Hometown!= "Little Lever Urban District" 
SELECT DISTINCT teacher.Name FROM course JOIN teacher ON course.Teacher_ID = teacher.Teacher_ID JOIN course_arrange ON course_arrange.Course_ID = course.Course_ID WHERE teacher.Hometown!= "Little Lever Urban District" 
SELECT teacher.Name FROM course JOIN teacher ON course.Teacher_ID = teacher.Teacher_ID WHERE teacher.Age = 32   OR teacher.Age = 33 
SELECT teacher.Name FROM course JOIN teacher ON course.Teacher_ID = teacher.Teacher_ID WHERE teacher.Age = 32   OR teacher.Age = 33 
SELECT course.hometown FROM course JOIN teacher ON course.teacher_id = teacher.teacher_id ORDER BY teacher.age DESC LIMIT 1 
SELECT course.coursename FROM course JOIN teacher ON course.teacher_id = teacher.teacher_id JOIN course_arrange ON course_arrange.course_id = course.course_id WHERE teacher.age =     (SELECT min(age)      FROM teacher) 
SELECT course.hometown,        count(*) FROM course JOIN teacher ON course.teacher_id = teacher.teacher_id GROUP BY course.hometown 
SELECT count(*),        hometown FROM course JOIN teacher ON course.teacher_id = teacher.teacher_id JOIN course_arrange ON course.course_id = course_arrange.course_id GROUP BY hometown 
SELECT Teacher.Hometown FROM course JOIN teacher ON course.Teacher_ID = teacher.Teacher_ID GROUP BY Teacher.Hometown ORDER BY count(*) DESC LIMIT 1 
SELECT DISTINCT course.hometown FROM course JOIN teacher ON course.teacher_id = teacher.teacher_id GROUP BY course.hometown ORDER BY count(*) DESC LIMIT 1 
SELECT Hometown FROM course_arrange GROUP BY Hometown HAVING COUNT(*) >= 2 
SELECT DISTINCT course.hometown FROM course JOIN teacher ON course.teacher_id = teacher.teacher_id JOIN course_arrange ON course_arrange.course_id = course.course_id GROUP BY course.hometown HAVING count(*) >= 2 
SELECT teacher.Name,        course.Course FROM course JOIN teacher ON course.Teacher_ID = teacher.Teacher_ID JOIN course_arrange ON course.Course_ID = course_arrange.Course_ID 
SELECT teacher.Name,        course.Course FROM course JOIN teacher ON course.Teacher_ID = teacher.Teacher_ID JOIN course_arrange ON course.Course_ID = course_arrange.Course_ID 
SELECT teacher.Name,        course.Course FROM course JOIN teacher ON course.Teacher_ID = teacher.Teacher_ID ORDER BY teacher.Name ASC 
SELECT course.Course,        teacher.Name FROM course JOIN teacher ON course.Teacher_ID = teacher.Teacher_ID ORDER BY teacher.Name ASC 
SELECT teacher.Name FROM course JOIN teacher ON course.Teacher_ID = teacher.Teacher_ID JOIN course_arrange ON course_arrange.Course_ID = course.Course_ID WHERE course.Course = "Math" 
SELECT teacher.Name FROM course JOIN teacher ON course.Teacher_ID = teacher.Teacher_ID WHERE course.Course = "Math" 
SELECT teacher.Name,        count(*) FROM course JOIN teacher ON course.Teacher_ID = teacher.Teacher_ID GROUP BY course.Teacher_ID 
SELECT teacher.Name,        count(*) FROM course JOIN teacher ON course.Teacher_ID = teacher.Teacher_ID GROUP BY course.Teacher_ID 
SELECT teacher.Name FROM course JOIN teacher ON course.Teacher_ID = teacher.Teacher_ID GROUP BY course.Teacher_ID HAVING count(*) >= 2 
SELECT teacher.Name FROM course JOIN teacher ON course.Teacher_ID = teacher.Teacher_ID GROUP BY course.Teacher_ID HAVING count(*) >= 2 
SELECT Name FROM course EXCEPT SELECT Teacher_ID FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID 
SELECT name FROM course EXCEPT SELECT teacher.name FROM course_arrange JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id 
SELECT count(*) FROM museum JOIN visitor ON museum.museum_id = visitor.museum_id JOIN visit ON museum.museum_id = visit.museum_id WHERE visitor.age < 30 
SELECT visit.visitor_id,        museum.name FROM museum JOIN visitor ON museum.museum_id = visitor.museum_id JOIN visit ON visit.museum_id = museum.museum_id WHERE visitor.level_of_membership > 4 ORDER BY visitor.level_of_membership 
SELECT avg(visitor.Age) FROM museum JOIN visitor ON museum.Museum_ID = visitor.Museum_ID JOIN visit ON museum.Museum_ID = visit.Museum_ID WHERE visitor.Level_of_membership!= 4 
SELECT museum.name,        visitor.level_of_membership FROM museum JOIN visitor ON museum.museum_id = visitor.museum_id JOIN visit ON visit.museum_id = museum.museum_id WHERE visitor.level_of_membership > 4 ORDER BY visitor.age 
SELECT museum.museum_id,        museum.name FROM museum JOIN visitor ON museum.museum_id = visitor.museum_id JOIN visit ON visit.museum_id = museum.museum_id GROUP BY museum.museum_id ORDER BY count(*) DESC LIMIT 1 
SELECT avg(num_of_staff) FROM museum WHERE open_year < 2009 
SELECT museum.open_year,        museum.num_of_staff FROM museum JOIN visitor ON museum.museum_id = visitor.museum_id JOIN visit ON visit.museum_id = museum.museum_id WHERE museum.name = "Plaza Museum" 
SELECT name FROM museum WHERE num_of_staff >     (SELECT min(num_of_staff)      FROM museum      WHERE open_year > 2010) 
SELECT museum.museum_id,        museum.name,        visitor.id,        visitor.age FROM museum JOIN visitor ON museum.museum_id = visitor.museum_id JOIN visit ON museum.museum_id = visit.museum_id GROUP BY visit.museum_id HAVING count(*) > 1 
SELECT museum.museum_id,        museum.name,        visitor.level_of_membership FROM museum JOIN visitor ON museum.museum_id = visitor.museum_id JOIN visit ON museum.museum_id = visit.museum_id GROUP BY visit.museum_id ORDER BY sum(visit.total_spent) DESC LIMIT 1 
SELECT museum.museum_id,        museum.name FROM museum JOIN visitor ON museum.museum_id = visitor.museum_id JOIN visit ON visit.museum_id = museum.museum_id GROUP BY visit.museum_id ORDER BY count(*) DESC LIMIT 1 
SELECT name FROM museum WHERE museum_id NOT IN     (SELECT museum_id      FROM visitor) 
SELECT visitor.Name,        visitor.Age FROM museum JOIN visitor ON museum.Museum_ID = visitor.Museum_ID JOIN visit ON museum.Museum_ID = visit.Museum_ID GROUP BY visit.Museum_ID ORDER BY count(*) DESC LIMIT 1 
SELECT avg(visit.Num_of_Ticket),        max(visit.Num_of_Ticket) FROM museum JOIN visitor ON museum.Museum_ID = visitor.Museum_ID JOIN visit ON museum.Museum_ID = visit.Museum_ID 
SELECT sum(visit.Total_spent) FROM museum JOIN visitor ON museum.Museum_ID = visitor.Museum_ID JOIN visit ON museum.Museum_ID = visit.Museum_ID WHERE visitor.Level_of_membership = 1 
SELECT visitor.Name FROM museum JOIN visitor ON museum.Museum_ID = visitor.Museum_ID JOIN visit ON museum.Museum_ID = visit.Museum_ID WHERE visit.Num_of_Ticket > 0   AND visit.Num_of_Ticket < 1000   AND museum.Open_Year < 2009 UNION SELECT visitor.Name FROM museum JOIN visitor ON museum.Museum_ID = visitor.Museum_ID JOIN visit ON museum.Museum_ID = visit.Museum_ID WHERE visit.Num_of_Ticket > 1000   AND visit.Num_of_Ticket < 10000   AND museum.Open_Year > 2009 
SELECT count(*) FROM museum WHERE open_year < 2010 EXCEPT SELECT museum.name FROM museum JOIN visitor ON museum.museum_id = visitor.museum_id JOIN visit ON visit.museum_id = museum.museum_id WHERE visitor.age > 18 
SELECT count(*) FROM museum WHERE open_year > 2013   OR open_year < 2008 
SELECT count(*) FROM players 
SELECT count(*) FROM players 
SELECT count(*) FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.match_num = rankings.match_num WHERE players.first_name = "Jeremy"   AND players.last_name = "Holtzman" 
SELECT count(*) FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.match_num = rankings.match_num WHERE players.first_name = "Jeremy"   AND players.last_name = "Holtzman"   AND matches.tourney_id = 1   AND rankings.tours > 0; 
SELECT players.first_name,        players.birth_date FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.match_num = rankings.match_num WHERE players.country_code = "USA" 
SELECT players.first_name,        players.last_name,        players.birth_date FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.match_num = rankings.match_num WHERE players.country_code = "USA" 
SELECT avg(loser_age),        avg(winner_age) FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.match_num = rankings.match_num WHERE matches.tourney_id = 1   AND rankings.tourney_date = "2008-07-15" 
SELECT avg(loser_age),        avg(winner_age) FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.match_num = rankings.match_num GROUP BY players.player_id 
SELECT avg(rankings.ranking) FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.match_num = rankings.match_num WHERE matches.tourney_id = 1 
SELECT avg(rankings.ranking) FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.match_num = rankings.match_num WHERE matches.tourney_id = 1 
SELECT rankings.ranking FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.match_num = rankings.match_num GROUP BY rankings.ranking ORDER BY rankings.ranking DESC LIMIT 1 
SELECT rankings.ranking FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.match_num = rankings.match_num GROUP BY rankings.ranking ORDER BY rankings.ranking LIMIT 1 
SELECT count(DISTINCT country_code) FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.match_num = rankings.match_num WHERE players.country_code = "USA"   OR players.country_code = "England"   OR players.country_code = "Scotland"   OR players.country_code = "Wales" 
SELECT count(DISTINCT players.country_code) FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.match_num = rankings.match_num WHERE players.country_code = "USA"   OR players.country_code = "England"   OR players.country_code = "Scotland"   OR players.country_code = "Wales" GROUP BY players.country_code 
SELECT count(DISTINCT players.loser_name) FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.match_num = rankings.match_num WHERE players.player_id IN     (SELECT loser_id      FROM matches      JOIN rankings ON matches.match_num = rankings.match_num      WHERE rankings.ranking = 1) 
SELECT count(DISTINCT players.loser_name) FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.match_num = rankings.match_num WHERE players.player_id IN     (SELECT loser_id      FROM matches      JOIN rankings ON matches.match_num = rankings.match_num      WHERE rankings.ranking = 1) 
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*) > 10 
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*) > 10 
SELECT players.player_name FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.match_num = rankings.match_num WHERE matches.year = 2013 INTERSECT   SELECT players.player_name   FROM players   JOIN matches ON players.player_id = matches.winner_id   JOIN rankings ON matches.match_num = rankings.match_num WHERE matches.year = 2016 
SELECT players.player_name FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.match_num = rankings.match_num WHERE matches.year = 2013 INTERSECT   SELECT players.player_name   FROM players   JOIN matches ON players.player_id = matches.winner_id   JOIN rankings ON matches.match_num = rankings.match_num WHERE matches.year = 2016 
SELECT count(*) FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.match_num = rankings.match_num WHERE rankings.year = 2013   OR rankings.year = 2016 
SELECT count(*) FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.match_num = rankings.match_num WHERE matches.year = 2013   OR matches.year = 2016 
SELECT players.country_code,        players.first_name FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.match_num = rankings.match_num WHERE rankings.tourney_id = 1   AND matches.tourney_id = 2 
SELECT players.first_name,        players.last_name,        players.country_code FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.match_num = rankings.match_num WHERE matches.tourney_id = 1   AND rankings.ranking = 1   AND players.country_code = "Australia"   AND players.country_code = "United States" 
SELECT players.first_name,        players.country_code FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.match_num = rankings.match_num ORDER BY rankings.tours DESC LIMIT 1 
SELECT players.first_name,        players.country_code FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.match_num = rankings.match_num ORDER BY rankings.tours DESC LIMIT 1 
SELECT players.first_name,        players.last_name FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.match_num = rankings.match_num ORDER BY players.birth_date 
SELECT players.first_name,        players.last_name FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.match_num = rankings.match_num ORDER BY players.birth_date 
SELECT players.first_name,        players.last_name FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.match_num = rankings.match_num WHERE players.hand = "L" ORDER BY players.birth_date 
SELECT players.first_name,        players.last_name FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.id = rankings.id WHERE players.first_name = "Left"   AND players.last_name = "Hand" ORDER BY rankings.tours DESC 
SELECT players.first_name,        players.country_code FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.match_num = rankings.match_num GROUP BY players.player_id ORDER BY count(*) DESC LIMIT 1 
SELECT players.first_name,        players.country_code FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.match_num = rankings.match_num GROUP BY players.player_id ORDER BY count(*) DESC LIMIT 1 
SELECT tourney_year FROM matches JOIN rankings ON matches.loser_id = rankings.player_id GROUP BY tourney_year ORDER BY count(*) DESC LIMIT 1 
SELECT tourney_year FROM matches JOIN rankings ON matches.tourney_id = rankings.tourney_id GROUP BY tourney_year ORDER BY count(*) DESC LIMIT 1 
SELECT players.player_name,        rankings.rank_points FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.match_num = rankings.match_num GROUP BY players.player_id ORDER BY count(*) DESC LIMIT 1 
SELECT players.player_name,        rankings.ranking_points FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.winner_id = rankings.player_id GROUP BY players.player_name ORDER BY count(*) DESC LIMIT 1 
SELECT players.player_name FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.match_num = rankings.match_num WHERE rankings.tours = 1   AND matches.tourney_id = 1   AND players.tourney_name = "Australian Open"   AND players.tourney_rank = 1   AND players.tourney_rank_points =     (SELECT max(players.tourney_rank_points)      FROM players      JOIN matches ON players.player_id = matches.loser_id      JOIN rankings ON matches.match_num = rankings.match_num      WHERE rankings.tours = 1        AND matches.tourney_id = 1        AND players.tourney_name = "Australian Open") 
SELECT players.player_name FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.match_num = rankings.match_num WHERE rankings.ranking =     (SELECT max(rankings.ranking)      FROM rankings      JOIN players ON rankings.player_id = players.player_id      JOIN matches ON matches.match_num = rankings.match_num      JOIN rankings ON matches.match_num = rankings.match_num      WHERE rankings.ranking_points =          (SELECT max(rankings.ranking_points)           FROM rankings           JOIN players ON rankings.player_id = players.player_id           JOIN matches ON matches.match_num = rankings.match_num           WHERE rankings.ranking_points =               (SELECT max(rankings.ranking_points)                FROM rankings                JOIN players ON rankings.player_id = players.player_id                JOIN matches ON matches.match_num = rankings.match_num 
SELECT players.player_name,        players.player_name FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.match_num = rankings.match_num ORDER BY rankings.tours DESC LIMIT 1 
SELECT players.player_name,        players.player_name FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.match_num = rankings.ranking_date ORDER BY rankings.tours DESC LIMIT 1 
SELECT players.first_name,        avg(rankings.ranking) FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.match_num = rankings.match_num GROUP BY players.first_name 
SELECT players.first_name,        avg(rankings.ranking) FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.match_num = rankings.match_num GROUP BY players.player_id 
SELECT players.first_name,        sum(rankings.ranking_points) FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.match_num = rankings.match_num GROUP BY players.first_name 
SELECT players.first_name,        players.rankings.ranking_points FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.loser_id = rankings.player_id 
SELECT count(*),        country_code FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.match_num = rankings.match_num GROUP BY country_code 
SELECT players.country_code,        count(*) FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.match_num = rankings.match_num GROUP BY players.country_code 
SELECT country_code FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.loser_id = rankings.player_id GROUP BY country_code ORDER BY count(*) DESC LIMIT 1 
SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1 
SELECT country_code FROM players GROUP BY country_code HAVING count(*) > 50 
SELECT country_code FROM players GROUP BY country_code HAVING count(*) > 50 
SELECT sum(tours),        ranking_date FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.match_num = rankings.match_num GROUP BY ranking_date 
SELECT sum(tours),        rankings.ranking_date FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.loser_id = rankings.player_id GROUP BY rankings.ranking_date 
SELECT count(*),        YEAR FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.match_num = rankings.match_num GROUP BY YEAR 
SELECT count(*),        YEAR FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.match_num = rankings.match_num GROUP BY YEAR 
SELECT players.player_name,        rankings.ranking FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.winner_id = rankings.player_id ORDER BY rankings.tours DESC LIMIT 3 
SELECT players.player_name,        rankings.ranking FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.winner_id = rankings.player_id ORDER BY rankings.tours DESC LIMIT 3 
SELECT count(DISTINCT players.winner_id) FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.match_num = rankings.match_num WHERE players.player_id IN     (SELECT players.player_id      FROM players      JOIN matches ON players.player_id = matches.loser_id      JOIN rankings ON matches.match_num = rankings.match_num      WHERE rankings.tourney_name = "WTA Championships"        AND players.player_id NOT IN          (SELECT players.player_id           FROM players           JOIN matches ON players.player_id = matches.loser_id           JOIN rankings ON matches.match_num = rankings.match_num           WHERE rankings.tourney_name = "WTA Championships"))   OR players.player_id IN     (SELECT players.player_id      FROM players      JOIN matches ON players.player_id = matches.winner_id      JOIN rankings ON matches.match_num =
SELECT count(*) FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.match_num = rankings.match_num WHERE players.first_name = "Left"   AND players.last_name = "Hand"   AND matches.tourney_name = "WTA Championships" 
SELECT players.first_name,        players.country_code,        players.birth_date FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.match_num = rankings.match_num WHERE rankings.ranking =     (SELECT max(ranking)      FROM rankings) 
SELECT players.first_name,        players.country_code,        players.birth_date FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.match_num = rankings.match_num GROUP BY players.player_id ORDER BY sum(rankings.ranking_points) DESC LIMIT 1 
SELECT count(*),        hand FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.loser_id = rankings.player_id GROUP BY hand 
SELECT count(*),        first_name,        last_name FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON matches.loser_id = rankings.player_id WHERE players.hand = "Left" GROUP BY first_name,          last_name 
SELECT count(*) FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON death.caused_by_ship_id = ship.id WHERE battle.result = "Captured" 
SELECT ship.name,        ship.tonnage FROM battle JOIN ship ON battle.id = ship.lost_in_battle ORDER BY ship.name DESC 
SELECT battle.name,        battle.date,        battle.result FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON death.caused_by_ship_id = ship.id 
SELECT max(death.killed),        min(death.killed) FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON death.caused_by_ship_id = ship.id GROUP BY ship.id 
SELECT avg(injured),        battle.id FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON death.caused_by_ship_id = ship.id GROUP BY battle.id 
SELECT death.killed,        death.injured FROM battle JOIN ship ON battle.id = ship.id JOIN death ON death.caused_by_ship_id = ship.id WHERE ship.tonnage = 't' 
SELECT battle.name,        battle.result FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON death.caused_by_ship_id = ship.id WHERE ship.bulgarian_commander!= 'Boril' 
SELECT battle.id,        battle.name FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON death.caused_by_ship_id = ship.id WHERE ship.ship_type = 'Brig' 
SELECT battle.id,        battle.name FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON death.caused_by_ship_id = ship.id GROUP BY battle.id HAVING sum(death.killed) > 10 
SELECT ship.id,        ship.name FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON death.caused_by_ship_id = ship.id GROUP BY ship.id ORDER BY sum(injured) DESC LIMIT 1 
SELECT DISTINCT battle.name FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON death.caused_by_ship_id = ship.id WHERE ship.bulgarian_commander = 'Kaloyan'   OR ship.latin_commander = 'Baldwin I' 
SELECT count(DISTINCT result) FROM battle 
SELECT count(*) FROM battle WHERE id NOT IN     (SELECT lost_in_battle      FROM ship      JOIN death ON ship.id = death.caused_by_ship_id      WHERE ship.tonnage = '225') 
SELECT battle.name,        battle.date FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON death.caused_by_ship_id = ship.id WHERE ship.name = 'Lettice' INTERSECT   SELECT battle.name,          battle.date   FROM battle   JOIN ship ON battle.id = ship.lost_in_battle   JOIN death ON death.caused_by_ship_id = ship.id WHERE ship.name = 'HMS Atalanta' 
SELECT battle.name,        battle.result,        ship.name FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON death.caused_by_ship_id = ship.id WHERE battle.name NOT IN     (SELECT battle.name      FROM battle      JOIN ship ON battle.id = ship.lost_in_battle      JOIN death ON death.caused_by_ship_id = ship.id      WHERE battle.name = "English Channel") 
SELECT death.note FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON death.caused_by_ship_id = ship.id WHERE ship.ship_type LIKE '%East%' 
SELECT addresses.line_1,        addresses.line_2 FROM addresses JOIN courses ON addresses.department_id = courses.department_id JOIN degrees_programs ON courses.course_id = degrees_programs.course_id JOIN semesters ON semesters.semester_id = degrees_programs.semester_id JOIN students ON students.student_id = semesters.student_id JOIN student_enrolment ON students.student_id = student_enrolment.student_id JOIN student_enrolment_courses ON student_enrolment.student_id = student_enrolment_courses.student_id JOIN transcripts ON student_enrolment_courses.transcript_id = transcripts.transcript_id JOIN transcript_contents ON transcripts.transcript_id = transcript_contents.transcript_id WHERE addresses.line_1 = "address_1"   AND addresses.line_2 = "address_2"   AND courses.course_name = "course_1
SELECT addresses.line_1,        addresses.line_2 FROM addresses JOIN courses ON addresses.department_id = courses.department_id JOIN degrees_programs ON courses.degree_summary_id = degrees_programs.degree_summary_id JOIN semesters ON semesters.semester_id = degrees_programs.semester_id JOIN students ON students.student_id = semesters.student_id JOIN student_enrolment ON students.student_id = student_enrolment.student_id JOIN student_enrolment_courses ON student_enrolment.student_id = student_enrolment_courses.student_id JOIN transcripts ON student_enrolment_courses.course_id = transcripts.course_id JOIN transcript_contents ON transcripts.transcript_id = transcript_contents.transcript_id GROUP BY transcripts.transcript_id 
SELECT count(*) FROM addresses JOIN courses ON addresses.department_id = courses.department_id JOIN degrees_programs ON degrees_programs.degree_summary_id = courses.degree_summary_id JOIN student_enrolment ON student_enrolment.student_id = degrees_programs.student_id JOIN student_enrolment_courses ON student_enrolment_courses.student_course_id = degrees_programs.student_course_id JOIN transcripts ON transcripts.transcript_id = student_enrolment.transcript_id JOIN transcript_contents ON transcripts.transcript_id = student_enrolment_courses.transcript_id WHERE addresses.city = "San Francisco"   AND courses.course_name = "Introduction to Statistics"   AND degrees_programs.degree_summary_name = "Bachelor of Science"   AND student_enrolment.semester_id = 1   AND student_enrolment_courses.course_id =
SELECT count(*) FROM addresses JOIN courses ON addresses.department_id = courses.department_id JOIN degrees_programs ON degrees_programs.department_id = addresses.department_id JOIN student_enrolment ON student_enrolment.student_id = degrees_programs.student_id JOIN student_enrolment_courses ON student_enrolment_courses.student_course_id = degrees_programs.student_course_id JOIN transcripts ON student_enrolment_courses.course_id = transcripts.course_id JOIN transcript_contents ON transcripts.student_course_id = transcript_contents.student_course_id WHERE addresses.city = "San Francisco"   AND courses.course_name = "Introduction to Statistics"   AND degrees_programs.degree_summary_name = "Bachelor of Science"   AND student_enrolment.semester_id = 1   AND student_enrolment.student_id = 1   AND student_en
SELECT DISTINCT Transcript_Contents.transcript_contents.course_name FROM Addresses JOIN Courses ON Addresses.department_id = Courses.department_id JOIN Degree_Programs ON Degree_Programs.degree_summary_id = Courses.degree_summary_id JOIN Sections ON Sections.course_id = Courses.course_id JOIN Semesters ON Sections.semester_id = Semesters.semester_id JOIN Students ON Students.student_id = Sections.student_id JOIN Student_Enrolment ON Student_Enrolment.student_id = Students.student_id JOIN Student_Enrolment_Courses ON Student_Enrolment_Courses.student_course_id = Students.student_course_id JOIN Transcripts ON Transcripts.student_enrolment_id = Student_Enrolment.student_enrolment_id AND Transcripts.transcript_id = Student_Enrolment_Courses.transcript_id
SELECT DISTINCT Transcript_Contents.transcript_contents.course_name FROM Addresses JOIN Courses ON Addresses.department_id = Courses.department_id JOIN Degree_Programs ON Degree_Programs.degree_summary_id = Courses.degree_summary_id JOIN SEMSTERS ON SEMSTERS.semester_id = Courses.semester_id JOIN STUDENT_ENROLLMENT ON STUDENT_ENROLLMENT.student_id = SEMSTERS.student_id JOIN STUDENT_ENROLLMENT_COURSES ON STUDENT_ENROLLMENT_COURSES.student_enrolment_id = SEMSTERS.student_enrolment_id JOIN TRANSCRIPTS ON TRANSCRIPTS.transcript_id = STUDENT_ENROLLMENT_COURSES.transcript_id JOIN TRANSCRIPT_CONTENTS ON TRANSCRIPTS.transcript_id = TRANSCRIPT_
SELECT addresses.zip_postcode FROM addresses JOIN courses ON addresses.department_id = courses.department_id JOIN degrees_programs ON courses.degree_summary_id = degrees_programs.degree_summary_id JOIN semesters ON semesters.semester_id = degrees_programs.semester_id JOIN students ON students.student_id = semesters.student_id JOIN student_enrolment ON students.student_id = student_enrolment.student_id JOIN student_enrolment_courses ON student_enrolment.student_id = student_enrolment_courses.student_id JOIN transcripts ON student_enrolment_courses.course_id = transcripts.course_id JOIN transcript_contents ON transcripts.transcript_id = transcript_contents.transcript_id WHERE student_enrolment_courses.student_id.city = "Port Chelsea" 
SELECT addresses.zip_postcode FROM addresses JOIN courses ON addresses.department_id = courses.department_id JOIN degrees_programs ON courses.course_id = degrees_programs.course_id JOIN semesters ON semesters.semester_id = degrees_programs.semester_id JOIN students ON students.student_id = semesters.student_id JOIN student_enrolment ON students.student_id = student_enrolment.student_id JOIN student_enrolment_courses ON student_enrolment.student_id = student_enrolment_courses.student_id JOIN transcripts ON student_enrolment_courses.course_id = transcripts.course_id JOIN transcript_contents ON transcripts.student_course_id = transcript_contents.student_course_id WHERE transcripts.transcript_date = "2010-01-01"   AND transcript_contents.student_course_id = 1   AND transcripts.trans
SELECT DISTINCT departments.department_name,                 departments.department_id FROM addresses JOIN courses ON addresses.department_id = courses.department_id JOIN degrees_programs ON degrees_programs.department_id = courses.department_id JOIN student_enrolment_courses ON student_enrolment_courses.student_enrolment_id = degrees_programs.student_enrolment_id JOIN transcripts ON student_enrolment_courses.course_id = transcripts.course_id JOIN transcript_contents ON student_enrolment_courses.course_id = transcripts.student_course_id GROUP BY departments.department_name ORDER BY count(*) DESC LIMIT 1; 
SELECT DISTINCT departments.department_name,                 departments.department_id FROM addresses JOIN courses ON addresses.department_id = courses.department_id JOIN degrees_programs ON courses.course_id = degrees_programs.course_id JOIN semesters ON semesters.semester_id = courses.semester_id JOIN students ON students.student_id = semesters.student_id JOIN student_enrolment ON students.student_id = student_enrolment.student_id JOIN student_enrolment_courses ON student_enrolment.student_id = student_enrolment_courses.student_id JOIN transcripts ON student_enrolment_courses.transcript_id = transcripts.transcript_id JOIN transcript_contents ON transcripts.transcript_id = transcript_contents.transcript_id GROUP BY departments.department_name ORDER BY count(*) DESC LIMIT 1 
SELECT count(DISTINCT departments.department_name) FROM addresses JOIN courses ON addresses.department_id = courses.department_id JOIN degrees_programs ON degrees_programs.degree_summary_id = courses.degree_summary_id JOIN student_enrolment ON student_enrolment.student_id = student_enrolment_courses.student_id JOIN transcripts ON student_enrolment.transcript_id = transcripts.transcript_id JOIN transcript_contents ON transcripts.transcript_id = transcript_contents.transcript_id WHERE student_enrolment.degree_program_id IN     (SELECT degree_programs.degree_summary_id      FROM degrees_programs      JOIN student_enrolment ON student_enrolment.student_id = student_enrolment_courses.student_id      JOIN transcripts ON student_enrolment.transcript_id = transcripts.transcript_id      JOIN transcript_contents ON transcript
SELECT count(DISTINCT Degree_Programs.department_id) FROM addresses JOIN courses ON addresses.department_id = courses.department_id JOIN degrees ON addresses.department_id = degrees.department_id JOIN student_enrolment ON student_enrolment.student_id = degrees.student_id JOIN student_enrolment_courses ON student_enrolment_courses.student_course_id = degrees.student_course_id JOIN transcripts ON student_enrolment_courses.course_id = transcripts.course_id JOIN transcript_contents ON transcripts.student_course_id = transcript_contents.student_course_id WHERE Degree_Programs.degree_summary_description = "Bachelor"   AND courses.course_name = "Mathematics"   AND transcripts.transcript_date = "2000-01-01"   AND transcript_contents.student_course_id = transcripts.student_course
SELECT count(DISTINCT Degree_Programs.degree_summary_name) FROM addresses JOIN courses ON addresses.department_id = courses.department_id JOIN degree_programs ON addresses.department_id = degree_programs.department_id JOIN students ON students.student_id = degree_programs.student_id JOIN student_enrolment ON students.student_id = student_enrolment.student_id JOIN transcripts ON student_enrolment.student_id = transcripts.student_id JOIN transcript_contents ON student_enrolment.student_id = transcripts.student_id WHERE transcripts.transcript_date = "2010-01-01" GROUP BY Degree_Programs.degree_summary_name 
SELECT count(DISTINCT degree_programs.degree_summary_name) FROM addresses JOIN courses ON addresses.department_id = courses.department_id JOIN degree_programs ON courses.degree_program_id = degree_programs.degree_program_id JOIN students ON students.student_id = students.student_id JOIN student_enrolment ON students.student_id = student_enrolment.student_id JOIN student_enrolment_courses ON student_enrolment.student_id = student_enrolment_courses.student_id JOIN transcripts ON student_enrolment_courses.transcript_id = transcripts.transcript_id JOIN transcript_contents ON transcripts.transcript_id = transcript_contents.transcript_id WHERE degree_programs.degree_summary_name = "Bachelor" GROUP BY degree_programs.degree_summary_name 
SELECT count(DISTINCT Degree_Programs.degree_summary_name) FROM addresses JOIN courses ON addresses.department_id = courses.department_id JOIN degree_programs ON degree_programs.department_id = courses.department_id WHERE courses.course_name = "Engineering" GROUP BY Degree_Programs.degree_summary_name 
SELECT count(DISTINCT degree_programs.degree_summary_name) FROM addresses JOIN courses ON addresses.department_id = courses.department_id JOIN degree_programs ON courses.degree_summary_id = degree_programs.degree_summary_id WHERE department_id = 1 GROUP BY degree_programs.degree_summary_name 
SELECT Sections.section_name,        Sections.section_description FROM Addresses JOIN Courses ON Addresses.department_id = Courses.department_id JOIN Degree_Programs ON Degree_Programs.degree_summary_id = Courses.degree_summary_id JOIN Sections ON Sections.course_id = Courses.course_id JOIN Student_Enrolment ON Student_Enrolment.student_id = Sections.student_id JOIN Student_Enrolment_Courses ON Student_Enrolment_Courses.student_course_id = Sections.student_course_id JOIN Transcripts ON Transcripts.student_course_id = Sections.student_course_id JOIN Transcript_Contents ON Transcripts.transcript_id = Transcript_Contents.transcript_id WHERE Student_Enrolment.student_id = 1 
SELECT DISTINCT Sections.section_name,                 Sections.section_description FROM Addresses JOIN Courses ON Addresses.department_id = Courses.department_id JOIN Degree_Programs ON Degree_Programs.degree_summary_id = Courses.degree_summary_id JOIN Sections ON Sections.course_id = Courses.course_id JOIN Student_Enrolment ON Student_Enrolment.student_id = Sections.student_id JOIN Student_Enrolment_Courses ON Student_Enrolment_Courses.student_course_id = Sections.student_course_id JOIN Transcripts ON Transcripts.student_course_id = Sections.student_course_id JOIN Transcript_Contents ON Transcripts.transcript_id = Transcript_Contents.transcript_id 
SELECT DISTINCT Courses.course_name,                 Courses.course_id FROM Addresses JOIN Courses ON Addresses.department_id = Courses.department_id JOIN Degree_Programs ON Degree_Programs.degree_program_id = Courses.degree_summary_id JOIN Sections ON Sections.course_id = Courses.course_id JOIN Student_Enrolment ON Student_Enrolment.student_id = Sections.student_id JOIN Student_Enrolment_Courses ON Student_Enrolment_Courses.student_course_id = Sections.course_id GROUP BY Courses.course_name HAVING count(*) <= 2 
SELECT DISTINCT Courses.course_name,                 Courses.course_id FROM Addresses JOIN Courses ON Addresses.department_id = Courses.department_id JOIN Degree_Programs ON Degree_Programs.degree_program_id = Courses.degree_summary_id JOIN Sections ON Sections.course_id = Courses.course_id JOIN Student_Enrolment ON Student_Enrolment.student_id = Sections.student_id JOIN Student_Enrolment_Courses ON Student_Enrolment_Courses.student_course_id = Sections.student_course_id GROUP BY Courses.course_id HAVING count(*) < 2 
SELECT SECTIONS.section_name FROM ADDRESSES JOIN Courses ON ADDRESSES.department_id = Courses.department_id JOIN Degree_Programs ON Degree_Programs.degree_summary_id = ADDRESSES.degree_summary_id JOIN SECTIONS ON SECTIONS.course_id = Courses.course_id JOIN STUDENT_ENROLLMENT ON STUDENT_ENROLLMENT.student_id = SECTIONS.student_id JOIN STUDENT_ENROLLMENT_COURSES ON STUDENT_ENROLLMENT_COURSES.student_course_id = SECTIONS.student_course_id JOIN TRANSCRIPTS ON TRANSCRIPTS.transcript_id = TRANSCRIPT_CONTENTS.transcript_id JOIN TRANSCRIPT_CONTENTS ON TRANSCRIPTS.transcript_id = TRANSCRIPT_CONTENTS.transcript_id ORDER BY TRANSCRIPT_CONTENT
SELECT SECTIONS.section_name FROM AREAS JOIN DEPARTMENTS ON AREAS.department_id = DEPARTMENTS.department_id JOIN Degree_Programs ON DEPARTMENTS.department_id = Degree_Programs.department_id JOIN SECTIONS ON DEPARTMENTS.department_id = SECTIONS.department_id ORDER BY SECTIONS.section_name DESC 
SELECT DISTINCT Semesters.semester_name,                 Students.student_id FROM Addresses JOIN Courses ON Addresses.department_id = Courses.department_id JOIN Degree_Programs ON Degree_Programs.degree_summary_id = Courses.degree_summary_id JOIN Sections ON Sections.course_id = Courses.course_id JOIN Semesters ON Sections.semester_id = Semesters.semester_id JOIN Students ON Students.student_id = Sections.student_id JOIN Student_Enrolment ON Student_Enrolment.student_id = Students.student_id JOIN Student_Enrolment_Courses ON Student_Enrolment_Courses.student_course_id = Students.student_course_id GROUP BY Semesters.semester_name ORDER BY count(*) DESC LIMIT 1 
SELECT DISTINCT semesters.semester_name,                 semesters.semester_id,                 students.student_id,                 student_enrolment.student_enrolment_id,                 student_enrolment.other_details FROM addresses JOIN courses ON addresses.department_id = courses.department_id JOIN degrees_programs ON degrees_programs.degree_summary_id = courses.course_id JOIN semesters ON semesters.semester_id = courses.semester_id JOIN student_enrolment ON student_enrolment.student_id = semesters.student_id JOIN student_enrolment_courses ON student_enrolment_courses.student_course_id = semesters.student_course_id JOIN transcripts ON transcripts.transcript_id = student_enrolment.transcript_id JOIN transcript_contents ON transcripts.transcript_id = student_enrolment_courses.transcript_id GROUP BY semesters.semester_id 
SELECT DISTINCT departments.department_name FROM addresses JOIN courses ON addresses.department_id = courses.department_id JOIN degrees_programs ON degrees_programs.department_id = courses.department_id JOIN student_enrolment_courses ON student_enrolment_courses.student_enrolment_id = student_enrolment.student_id JOIN transcripts ON student_enrolment_courses.course_id = transcripts.course_id JOIN transcript_contents ON transcripts.student_course_id = transcript_contents.student_course_id WHERE departments.department_name LIKE '%the computer%' 
SELECT DISTINCT departments.department_description FROM addresses JOIN courses ON addresses.department_id = courses.department_id JOIN degrees_programs ON degrees_programs.course_id = courses.course_id JOIN semesters ON semesters.semester_id = courses.semester_id JOIN students ON students.student_id = semesters.student_id JOIN student_enrolment ON student_enrolment.student_id = semesters.student_id JOIN student_enrolment_courses ON student_enrolment_courses.student_course_id = semesters.student_id JOIN transcripts ON transcripts.student_course_id = semesters.student_id JOIN transcript_contents ON transcripts.student_course_id = semesters.student_id WHERE departments.department_name = "Computer Science" 
SELECT DISTINCT Students.first_name,                 Students.middle_name,                 Students.last_name,                 Students.student_id,                 Degree_Programs.degree_summary_name,                 Degree_Programs.degree_summary_description,                 Transcripts.other_details,                 Transcript_Contents.student_course_id FROM Addresses JOIN Courses ON Addresses.course_id = Courses.course_id JOIN Departments ON Courses.department_id = Departments.department_id JOIN Degree_Programs ON Degree_Programs.degree_summary_id = Courses.degree_summary_id JOIN Transcripts ON Transcripts.transcript_id = Degree_Programs.transcript_id JOIN Transcript_Contents ON Transcripts.student_course_id = Transcript_Contents.student_course_id WHERE Transcripts.semester_id = 1   AND Degree_Programs.semester_
SELECT DISTINCT students.first_name,                 students.middle_name,                 students.last_name,                 students.student_id,                 students.semester_id,                 students.degree_program_id,                 students.id FROM addresses JOIN courses ON addresses.department_id = courses.department_id JOIN degrees_programs ON degrees_programs.degree_summary_id = courses.course_id JOIN student_enrolment ON student_enrolment.student_id = students.student_id JOIN student_enrolment_courses ON student_enrolment_courses.student_course_id = students.student_id JOIN transcripts ON transcripts.student_course_id = students.student_id JOIN transcript_contents ON transcripts.student_course_id = students.student_id WHERE transcripts.transcript_date = "2015-01-01"   AND degrees_programs.semester_id = 1   AND student_en
SELECT DISTINCT students.first_name,                 students.middle_name,                 students.last_name FROM addresses JOIN courses ON addresses.department_id = courses.department_id JOIN degrees_programs ON degrees_programs.degree_summary_id = courses.course_id JOIN student_enrolment ON student_enrolment.student_id = students.student_id JOIN student_enrolment_courses ON student_enrolment_courses.student_enrolment_id = students.student_enrolment_id JOIN transcripts ON transcripts.student_course_id = student_enrolment_courses.course_id JOIN transcript_contents ON transcripts.transcript_id = transcript_contents.transcript_id WHERE degrees_programs.degree_summary_name = "Bachelor"   AND student_enrolment_courses.course_id = transcripts.course_id   AND student_enrolment_courses.student_id = students.student_
SELECT DISTINCT students.first_name,                 students.middle_name,                 students.last_name FROM addresses JOIN courses ON addresses.department_id = courses.department_id JOIN degrees_programs ON degrees_programs.degree_summary_id = courses.course_id JOIN semesters ON semesters.semester_id = courses.semester_id JOIN students ON students.student_id = semesters.student_id JOIN student_enrolment ON students.student_id = student_enrolment.student_id JOIN student_enrolment_courses ON student_enrolment.student_id = student_enrolment_courses.student_id JOIN transcripts ON student_enrolment_courses.transcript_id = transcripts.transcript_id JOIN transcript_contents ON transcripts.transcript_id = transcript_contents.transcript_id WHERE degrees_programs.degree_summary_name = "Bachelor"   AND courses.course_name = "
SELECT DISTINCT Degree_Programs.degree_summary_description FROM Courses JOIN Departments ON Courses.department_id = Departments.department_id JOIN Degree_Programs ON Courses.course_id = Degree_Programs.course_id WHERE Departments.department_name = "Mathematics" GROUP BY Degree_Programs.degree_summary_description ORDER BY count(*) DESC LIMIT 1 
SELECT Degree_Programs.degree_summary_name FROM Courses JOIN Departments ON Courses.department_id = Departments.department_id JOIN Degree_Programs ON Courses.course_id = Degree_Programs.course_id JOIN Sections ON Sections.course_id = Courses.course_id JOIN Student_Enrolment ON Student_Enrolment.student_id = Sections.student_id JOIN Student_Enrolment_Courses ON Student_Enrolment_Courses.student_course_id = Sections.student_course_id JOIN Transcripts ON Transcripts.student_course_id = Sections.student_course_id JOIN Transcript_Contents ON Transcripts.transcript_id = Transcript_Contents.transcript_id GROUP BY Degree_Programs.degree_summary_name ORDER BY count(*) DESC LIMIT 1 
SELECT DISTINCT Transcripts.transcript_id,                 Degree_Programs.degree_summary_name FROM Addresses JOIN Courses ON Addresses.department_id = Courses.department_id JOIN Degree_Programs ON Degree_Programs.degree_summary_id = Courses.degree_summary_id JOIN Transcripts ON Transcripts.transcript_id = Degree_Programs.transcript_id JOIN Transcript_Contents ON Transcripts.transcript_id = Transcript_Contents.transcript_id GROUP BY Transcripts.transcript_id ORDER BY count(*) DESC LIMIT 1 
SELECT Degree_Programs.degree_summary_name,        Degree_Programs.degree_summary_description FROM Courses JOIN Departments ON Courses.department_id = Departments.department_id JOIN Degree_Programs ON Degree_Programs.degree_program_id = Courses.course_id JOIN SEMSTERS ON SEMSTERS.semester_id = Courses.semester_id JOIN STUDENTS ON STUDENTS.student_id = SEMSTERS.student_id JOIN STUDENT_ENROLLMENT ON STUDENT_ENROLLMENT.student_id = STUDENTS.student_id JOIN STUDENT_ENROLLMENT_COURSES ON STUDENT_ENROLLMENT.student_id = STUDENT_ENROLLMENT_COURSES.student_id JOIN TRANSCRIPTS ON TRANSCRIPTS.transcript_id = TRANSCRIPT_CONTENTS.transcript_id J
SELECT students.student_id,        count(*) FROM addresses JOIN courses ON addresses.department_id = courses.department_id JOIN degrees_programs ON degrees_programs.degree_summary_id = courses.course_id JOIN semesters ON semesters.semester_id = courses.semester_id JOIN students ON students.student_id = semesters.student_id JOIN student_enrolment ON students.student_id = student_enrolment.student_id JOIN student_enrolment_courses ON student_enrolment.student_id = student_enrolment_courses.student_id JOIN transcripts ON student_enrolment_courses.transcript_id = transcripts.transcript_id JOIN transcript_contents ON transcripts.transcript_id = transcript_contents.transcript_id GROUP BY students.student_id ORDER BY count(*) DESC LIMIT 1 
SELECT Student_Enrolment.student_id,        Student_Enrolment.semester_id,        Student_Enrolment.student_enrolment_id,        Degree_Programs.degree_summary_name,        Degree_Programs.degree_summary_description,        Sections.section_name,        Sections.section_description,        Semesters.semester_name,        Semesters.semester_description,        Students.first_name,        Students.middle_name,        Students.last_name,        Student_Enrolment.student_enrolment_id,        Student_Enrolment_Courses.student_course_id,        Transcripts.transcript_id,        Transcripts.transcript_date FROM Degree_Programs JOIN Sections ON Degree_Programs.section_id = Sections.section_id JOIN Semesters ON Degree_Programs.semester_id = Semesters.semester_id JOIN
SELECT Semesters.semester_name FROM Addresses JOIN Courses ON Addresses.department_id = Courses.department_id JOIN Degree_Programs ON Degree_Programs.degree_summary_id = Courses.degree_summary_id JOIN Sections ON Sections.course_id = Courses.course_id JOIN Semesters ON Sections.semester_id = Semesters.semester_id JOIN Students ON Students.student_id = Sections.student_id JOIN Student_Enrolment ON Student_Enrolment.student_id = Students.student_id JOIN Student_Enrolment_Courses ON Student_Enrolment_Courses.student_course_id = Students.student_course_id WHERE Addresses.semester_id NOT IN     (SELECT semester_id      FROM Semesters) 
SELECT semesters.semester_name FROM addresses JOIN courses ON addresses.department_id = courses.department_id JOIN degrees_programs ON degrees_programs.degree_summary_id = courses.course_id JOIN student_enrolment ON student_enrolment.student_id = degrees_programs.student_id JOIN student_enrolment_courses ON student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id JOIN transcripts ON student_enrolment_courses.course_id = transcripts.course_id JOIN transcript_contents ON transcripts.transcript_id = transcript_contents.transcript_id WHERE transcript_contents.student_course_id NOT IN     (SELECT student_course_id      FROM student_enrolment_courses      JOIN transcripts ON student_enrolment_courses.course_id = transcripts.course_id      JOIN transcript_contents ON transcripts.trans
SELECT DISTINCT Courses.course_name FROM Addresses JOIN Courses ON Addresses.department_id = Courses.department_id JOIN Degree_Programs ON Degree_Programs.degree_program_id = Courses.degree_summary_id JOIN Sections ON Sections.course_id = Courses.course_id JOIN Semesters ON Sections.semester_id = Semesters.semester_id JOIN Students ON Students.student_id = Sections.student_id JOIN Student_Enrolment ON Student_Enrolment.student_id = Students.student_id JOIN Student_Enrolment_Courses ON Student_Enrolment_Courses.student_course_id = Students.student_course_id JOIN Transcripts ON Transcripts.student_course_id = Students.student_course_id JOIN Transcript_Contents ON Transcripts.student_course_id = Students.student_course_id WHERE Students.student_id IN     (
SELECT DISTINCT Courses.course_name FROM Addresses JOIN Courses ON Addresses.department_id = Courses.department_id JOIN Degree_Programs ON Degree_Programs.degree_program_id = Courses.degree_program_id JOIN SEMSTERS ON SEMSTERS.semester_id = Courses.semester_id JOIN STUDENTS ON STUDENTS.student_id = SEMSTERS.student_id JOIN STUDENT_ENROLLMENT ON STUDENT_ENROLLMENT.student_id = STUDENTS.student_id JOIN STUDENT_ENROLLMENT_COURSES ON STUDENT_ENROLLMENT_COURSES.student_enrolment_id = STUDENT_ENROLLMENT.student_enrolment_id JOIN TRANSCRIPTS ON TRANSCRIPTS.transcript_id = STUDENT_ENROLLMENT_COURSES.transcript_id JOIN TRANSC
SELECT DISTINCT Courses.course_name FROM Addresses JOIN Courses ON Addresses.department_id = Courses.department_id JOIN Degree_Programs ON Degree_Programs.degree_program_id = Courses.degree_program_id JOIN SEMSTERS ON SEMSTERS.semester_id = Courses.semester_id JOIN STUDENT_ENROLLMENT ON STUDENT_ENROLLMENT.student_id = SEMSTERS.student_id JOIN STUDENT_ENROLLMENT_COURSES ON STUDENT_ENROLLMENT_COURSES.student_enrolment_id = STUDENT_ENROLLMENT.student_enrolment_id JOIN TRANSCRIPTS ON TRANSCRIPTS.transcript_id = STUDENT_ENROLLMENT_COURSES.transcript_id JOIN TRANSCRIPT_CONTENTS ON TRANSCRIPTS.transcript_id = TRANSCRIPT_CONTENTS
SELECT DISTINCT Courses.course_name FROM Addresses JOIN Courses ON Addresses.department_id = Courses.department_id JOIN Degree_Programs ON Degree_Programs.degree_program_id = Courses.degree_program_id JOIN Sections ON Sections.course_id = Courses.course_id JOIN Semesters ON Sections.semester_id = Semesters.semester_id JOIN Students ON Students.student_id = Sections.student_id JOIN Student_Enrolment ON Student_Enrolment.student_id = Students.student_id JOIN Student_Enrolment_Courses ON Student_Enrolment_Courses.student_course_id = Students.student_course_id JOIN Transcripts ON Transcripts.student_course_id = Students.student_course_id JOIN Transcript_Contents ON Transcripts.student_course_id = Students.student_course_id GROUP BY Courses.course_name ORDER BY
SELECT DISTINCT students.last_name FROM addresses JOIN courses ON addresses.department_id = courses.department_id JOIN degrees_programs ON degrees_programs.degree_summary_id = courses.course_id JOIN semesters ON semesters.semester_id = courses.semester_id JOIN students ON students.student_id = semesters.student_id WHERE addresses.state_province_county = "North Carolina" EXCEPT SELECT DISTINCT students.last_name FROM addresses JOIN courses ON addresses.department_id = courses.department_id JOIN degrees_programs ON degrees_programs.degree_summary_id = courses.course_id JOIN semesters ON semesters.semester_id = courses.semester_id JOIN students ON students.student_id = semesters.student_id WHERE addresses.state_province_county = "North Carolina"   AND courses.course_name = "Introduction to Psychology"   AND courses.course_description = "Introduction to
SELECT DISTINCT students.last_name FROM addresses JOIN courses ON addresses.department_id = courses.department_id JOIN degrees_programs ON degrees_programs.degree_summary_id = courses.course_id JOIN semesters ON semesters.semester_id = courses.semester_id JOIN students ON students.student_id = semesters.student_id WHERE addresses.state_province_county = "North Carolina" EXCEPT SELECT DISTINCT students.last_name FROM addresses JOIN courses ON addresses.department_id = courses.department_id JOIN degrees_programs ON degrees_programs.degree_summary_id = courses.course_id JOIN semesters ON semesters.semester_id = courses.semester_id JOIN students ON students.student_id = semesters.student_id WHERE addresses.state_province_county = "North Carolina"   AND courses.course_name = "Introduction to Psychology"   AND courses.course_description = "Introduction to
SELECT Transcripts.transcript_date,        Transcripts.transcript_id FROM Addresses JOIN Courses ON Addresses.department_id = Courses.department_id JOIN Degree_Programs ON Degree_Programs.degree_program_id = Courses.degree_summary_id JOIN Sections ON Sections.course_id = Courses.course_id JOIN Semesters ON Sections.semester_id = Semesters.semester_id JOIN Students ON Students.student_id = Sections.student_id JOIN Student_Enrolment ON Student_Enrolment.student_id = Students.student_id JOIN Student_Enrolment_Courses ON Student_Enrolment_Courses.student_course_id = Students.student_course_id JOIN Transcripts ON Transcripts.transcript_id = Student_Enrolment_Courses.transcript_id GROUP BY Transcripts.transcript_id HAVING count(*) >= 2 
SELECT Transcripts.transcript_date,        Transcripts.transcript_id FROM Addresses JOIN Courses ON Addresses.department_id = Courses.department_id JOIN Degree_Programs ON Degree_Programs.degree_summary_id = Courses.degree_summary_id JOIN Sections ON Sections.course_id = Courses.course_id JOIN Semesters ON Sections.semester_id = Semesters.semester_id JOIN Students ON Students.student_id = Sections.student_id JOIN Student_Enrolment ON Student_Enrolment.student_id = Students.student_id JOIN Student_Enrolment_Courses ON Student_Enrolment_Courses.student_course_id = Students.student_course_id GROUP BY Transcripts.transcript_id HAVING count(*) >= 2 
SELECT phone_number FROM students JOIN student_enrolment ON students.student_id = student_enrolment.student_id JOIN student_enrolment_courses ON student_enrolment.student_id = student_enrolment_courses.student_id JOIN transcripts ON student_enrolment_courses.course_id = transcripts.course_id JOIN transcript_contents ON transcripts.transcript_id = transcript_contents.transcript_id WHERE students.first_name = "Timmothy"   AND students.last_name = "Ward" 
SELECT student_enrolment.cell_mobile_number FROM addresses JOIN courses ON addresses.department_id = courses.department_id JOIN degrees_programs ON degrees_programs.degree_summary_id = courses.degree_summary_id JOIN student_enrolment ON student_enrolment.student_id = degrees_programs.student_id JOIN student_enrolment_courses ON student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id JOIN transcripts ON transcripts.student_course_id = student_enrolment_courses.course_id JOIN transcript_contents ON transcripts.transcript_id = transcript_contents.transcript_id WHERE student_enrolment_courses.student_id =     (SELECT student_enrolment.student_id      FROM addresses      JOIN courses ON addresses.department_id = courses.department_id      JOIN degrees_programs ON degrees_programs.degree
SELECT DISTINCT Students.first_name,                 Students.middle_name,                 Students.last_name FROM Addresses JOIN Courses ON Addresses.address_id = Courses.course_id JOIN Departments ON Courses.department_id = Departments.department_id JOIN Degree_Programs ON Degree_Programs.degree_summary_id = Courses.course_id JOIN Sections ON Sections.course_id = Courses.course_id JOIN Semesters ON Sections.semester_id = Semesters.semester_id JOIN Students ON Students.student_id = Students.student_id JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id JOIN Student_Enrolment_Courses ON Student_Enrolment.student_id = Student_Enrolment_Courses.student_id JOIN Transcripts ON Student_Enrolment_Courses.transcript_id = Transcripts.transcript_id 
SELECT DISTINCT STUDENTS.first_name,                 STUDENTS.middle_name,                 STUDENTS.last_name FROM ADDRESSES JOIN Courses ON ADDRESSES.address_id = Courses.department_id JOIN DEPARTMENTS ON Courses.department_id = DEPARTMENTS.department_id JOIN Degree_Programs ON DEPARTMENTS.department_id = Degree_Programs.department_id JOIN SEMESTERS ON SEMESTERS.semester_id = Degree_Programs.semester_id JOIN STUDENTS ON STUDENTS.student_id = SEMESTERS.student_id JOIN TRANSCRIPTS ON TRANSCRIPTS.student_course_id = STUDENTS.student_course_id JOIN TRANSCRIPT_CONTENTS ON TRANSCRIPTS.transcript_id = TRANSCRIPT_CONTENTS.transcript_id WHERE TRANSCRIPT_CONTENTS.
SELECT DISTINCT students.first_name,                 students.middle_name,                 students.last_name FROM addresses JOIN courses ON addresses.department_id = courses.department_id JOIN degrees_programs ON degrees_programs.degree_summary_id = courses.degree_summary_id JOIN student_enrolment ON student_enrolment.student_id = students.student_id JOIN student_enrolment_courses ON student_enrolment_courses.student_enrolment_id = students.student_enrolment_id JOIN transcripts ON student_enrolment_courses.course_id = transcripts.course_id JOIN transcript_contents ON transcripts.transcript_id = transcript_contents.transcript_id WHERE transcript_contents.student_course_id = students.student_id ORDER BY transcripts.transcript_date LIMIT 1; 
SELECT DISTINCT STUDENTS.first_name,                 STUDENTS.middle_name,                 STUDENTS.last_name FROM ADDRESSES JOIN Courses ON ADDRESSES.department_id = Courses.department_id JOIN Degree_Programs ON Degree_Programs.degree_summary_id = Courses.degree_summary_id JOIN SEMESTERS ON SEMESTERS.semester_id = Courses.semester_id JOIN STUDENT_ENROLLMENT ON STUDENT_ENROLLMENT.student_id = SEMESTERS.student_id JOIN STUDENT_ENROLLMENT_COURSES ON STUDENT_ENROLLMENT_COURSES.student_enrolment_id = STUDENT_ENROLLMENT.student_enrolment_id JOIN TRANSCRIPTS ON TRANSCRIPTS.transcript_id = STUDENT_ENROLLMENT_COURSES.transcript_id JOIN
SELECT DISTINCT students.first_name FROM addresses JOIN courses ON addresses.department_id = courses.department_id JOIN degrees_programs ON degrees_programs.degree_summary_id = courses.degree_summary_id JOIN student_enrolment ON student_enrolment.student_id = students.student_id JOIN student_enrolment_courses ON student_enrolment_courses.student_enrolment_id = students.student_enrolment_id JOIN transcripts ON transcripts.student_course_id = student_enrolment_courses.course_id JOIN transcript_contents ON transcripts.transcript_id = transcript_contents.transcript_id WHERE students.permanent_address_id!= students.student_id 
SELECT DISTINCT students.first_name FROM addresses JOIN courses ON addresses.department_id = courses.department_id JOIN degrees_programs ON degrees_programs.degree_summary_id = courses.degree_summary_id JOIN student_enrolment ON student_enrolment.student_id = students.student_id JOIN student_enrolment_courses ON student_enrolment_courses.student_enrolment_id = students.student_enrolment_id JOIN transcripts ON transcripts.student_course_id = student_enrolment_courses.course_id JOIN transcript_contents ON transcripts.transcript_id = transcript_contents.transcript_id WHERE addresses.address_id = students.current_address_id   AND addresses.address_id!= students.permanent_address_id 
SELECT addresses.address_id,        addresses.line_1,        addresses.line_2,        addresses.line_3,        addresses.city,        addresses.zip_postcode,        addresses.state_province_county,        addresses.country FROM addresses JOIN courses ON addresses.address_id = courses.address_id JOIN degrees_programs ON courses.course_id = degrees_programs.course_id JOIN student_enrolment ON student_enrolment.student_id = degrees_programs.student_id JOIN student_enrolment_courses ON student_enrolment_courses.student_course_id = degrees_programs.student_course_id JOIN transcripts ON student_enrolment_courses.transcript_id = transcripts.transcript_id JOIN transcript_contents ON transcripts.transcript_id = transcript_contents.transcript_id GROUP BY addresses.address_id ORDER BY count(*) DESC LIMIT 1 
SELECT addresses.address_id,        addresses.line_1,        addresses.line_2 FROM addresses JOIN courses ON addresses.department_id = courses.department_id JOIN degrees_programs ON courses.course_id = degrees_programs.course_id JOIN semesters ON semesters.semester_id = degrees_programs.semester_id JOIN students ON students.student_id = semesters.student_id JOIN student_enrolment ON students.student_id = student_enrolment.student_id JOIN student_enrolment_courses ON student_enrolment.student_id = student_enrolment_courses.student_id JOIN transcripts ON student_enrolment_courses.transcript_id = transcripts.transcript_id JOIN transcript_contents ON transcripts.transcript_id = transcript_contents.transcript_id GROUP BY addresses.address_id ORDER BY count(*) DESC LIMIT 1 
SELECT avg(transcripts.transcript_date) FROM addresses JOIN courses ON addresses.department_id = courses.department_id JOIN degrees_programs ON degrees_programs.degree_summary_id = courses.course_id JOIN student_enrolment ON student_enrolment.student_id = student_enrolment_courses.student_id JOIN transcripts ON transcripts.transcript_id = student_enrolment.transcript_id JOIN transcript_contents ON transcripts.transcript_id = student_enrolment_courses.transcript_id WHERE addresses.city = "San Francisco"   AND courses.course_name = "Introduction to Statistics"   AND degrees_programs.degree_summary_name = "Bachelor of Science"   AND student_enrolment.semester_id = 1   AND student_enrolment_courses.semester_id = 1 GROUP BY avg(transcripts.transcript_date) 
SELECT avg(transcript_date) FROM addresses JOIN courses ON addresses.department_id = courses.department_id JOIN degrees_programs ON degrees_programs.degree_summary_id = courses.course_id JOIN student_enrolment ON student_enrolment.student_id = degrees_programs.student_id JOIN student_enrolment_courses ON student_enrolment_courses.student_course_id = degrees_programs.student_course_id JOIN transcripts ON student_enrolment_courses.course_id = transcripts.course_id JOIN transcript_contents ON transcripts.student_course_id = transcript_contents.student_course_id WHERE student_enrolment.student_id IN     (SELECT student_id      FROM student_enrolment      JOIN student_enrolment_courses ON student_enrolment_courses.student_course_id = student_enrolment.student_course_id      JOIN transcripts ON student_enrol
SELECT Transcripts.transcript_date,        Transcripts.other_details FROM Addresses JOIN Courses ON Addresses.department_id = Courses.department_id JOIN Degree_Programs ON Degree_Programs.degree_summary_id = Courses.degree_summary_id JOIN Semesters ON Semesters.semester_id = Courses.semester_id JOIN Students ON Students.student_id = Courses.student_id JOIN Student_Enrolment ON Student_Enrolment.student_id = Students.student_id JOIN Student_Enrolment_Courses ON Student_Enrolment_Courses.student_course_id = Students.student_course_id JOIN Transcripts ON Transcripts.transcript_id = Student_Enrolment_Courses.transcript_id WHERE Transcripts.student_course_id = Courses.course_id   AND Courses.semester_id = Semesters.semester_id   AND Semesters.year =
SELECT Transcripts.transcript_date,        Transcript_Contents.other_details FROM Addresses JOIN Courses ON Addresses.department_id = Courses.department_id JOIN Degree_Programs ON Degree_Programs.degree_summary_id = Courses.degree_summary_id JOIN Semesters ON Semesters.semester_id = Courses.semester_id JOIN Students ON Students.student_id = Courses.student_id JOIN Student_Enrolment ON Student_Enrolment.student_id = Students.student_id JOIN Student_Enrolment_Courses ON Student_Enrolment_Courses.student_course_id = Students.student_course_id JOIN Transcripts ON Transcripts.transcript_id = Student_Enrolment_Courses.transcript_id JOIN Transcript_Contents ON Transcripts.transcript_id = Student_Enrolment_Courses.transcript_id WHERE Students.student_id = Transcripts.
SELECT count(*) FROM addresses JOIN courses ON addresses.department_id = courses.department_id JOIN degrees_programs ON degrees_programs.degree_summary_id = courses.degree_summary_id JOIN student_enrolment ON student_enrolment.student_id = degrees_programs.student_id JOIN student_enrolment_courses ON student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id JOIN transcripts ON student_enrolment_courses.course_id = transcripts.course_id JOIN transcript_contents ON transcripts.transcript_id = transcript_contents.transcript_id WHERE student_enrolment.semester_id = 1   AND student_enrolment.degree_program_id = 1   AND courses.course_name = "Introduction to Statistics"   AND degrees_programs.degree_summary_name = "Bachelor of Science"   AND student_enrol
SELECT count(*) FROM addresses JOIN courses ON addresses.department_id = courses.department_id JOIN degrees_programs ON degrees_programs.degree_summary_id = courses.degree_summary_id JOIN semesters ON semesters.semester_id = courses.semester_id JOIN students ON students.student_id = students.student_id JOIN student_enrolment ON student_enrolment.student_id = students.student_id JOIN student_enrolment_courses ON student_enrolment_courses.student_enrolment_id = students.student_id JOIN transcripts ON transcripts.transcript_id = student_enrolment.transcript_id JOIN transcript_contents ON transcripts.transcript_id = student_enrolment_courses.transcript_id WHERE student_enrolment.student_id = 1 
SELECT Transcripts.transcript_date FROM Addresses JOIN Courses ON Addresses.department_id = Courses.department_id JOIN Degree_Programs ON Degree_Programs.degree_summary_id = Courses.degree_summary_id JOIN Sections ON Sections.course_id = Courses.course_id JOIN Semesters ON Sections.semester_id = Semesters.semester_id JOIN Students ON Students.student_id = Sections.student_id JOIN Student_Enrolment ON Student_Enrolment.student_id = Students.student_id JOIN Student_Enrolment_Courses ON Student_Enrolment_Courses.student_course_id = Students.student_course_id JOIN Transcripts ON Transcripts.transcript_id = Student_Enrolment_Courses.transcript_id WHERE Degree_Programs.degree_summary_name = "Bachelor of Science"   AND Courses.course_name = "Introduction
SELECT Transcripts.transcript_date FROM Addresses JOIN Courses ON Addresses.department_id = Courses.department_id JOIN Degree_Programs ON Degree_Programs.degree_summary_id = Courses.degree_summary_id JOIN Sections ON Sections.course_id = Courses.course_id JOIN Semesters ON Sections.semester_id = Semesters.semester_id JOIN Students ON Students.student_id = Sections.student_id JOIN Student_Enrolment ON Student_Enrolment.student_id = Students.student_id JOIN Student_Enrolment_Courses ON Student_Enrolment_Courses.student_course_id = Students.student_course_id JOIN Transcripts ON Transcripts.transcript_id = Student_Enrolment_Courses.transcript_id JOIN Transcript_Contents ON Transcripts.transcript_id = Student_Enrolment_Courses.transcript_id WHERE Degree
SELECT count(*),        Transcripts.course_id FROM Addresses JOIN Courses ON Addresses.department_id = Courses.department_id JOIN Degree_Programs ON Degree_Programs.degree_summary_id = Courses.degree_summary_id JOIN Sections ON Sections.course_id = Courses.course_id JOIN Semesters ON Sections.semester_id = Semesters.semester_id JOIN Students ON Students.student_id = Sections.student_id JOIN Student_Enrolment ON Student_Enrolment.student_id = Students.student_id JOIN Student_Enrolment_Courses ON Student_Enrolment_Courses.student_course_id = Students.student_course_id JOIN Transcripts ON Transcripts.student_enrolment_id = Student_Enrolment.student_enrolment_id AND Transcripts.course_id = Student_Enrolment_Courses.course_id GROUP BY Transcripts
SELECT max(Transcripts.transcript_date),        Degree_Programs.degree_summary_name FROM Addresses JOIN Courses ON Addresses.department_id = Courses.department_id JOIN Degree_Programs ON Degree_Programs.degree_summary_id = Courses.degree_summary_id JOIN Transcripts ON Transcripts.student_course_id = Courses.course_id JOIN Transcript_Contents ON Transcripts.student_course_id = Transcript_Contents.student_course_id GROUP BY Degree_Programs.degree_summary_name 
SELECT Transcripts.transcript_date,        Transcript_Contents.student_course_id FROM Addresses JOIN Courses ON Addresses.department_id = Courses.department_id JOIN Degree_Programs ON Degree_Programs.degree_summary_id = Courses.degree_summary_id JOIN Semesters ON Semesters.semester_id = Courses.semester_id JOIN Students ON Students.student_id = Students.student_id JOIN Student_Enrolment ON Student_Enrolment.student_id = Students.student_id JOIN Student_Enrolment_Courses ON Student_Enrolment_Courses.student_course_id = Students.student_course_id JOIN Transcripts ON Transcripts.transcript_id = Student_Enrolment_Courses.transcript_id GROUP BY Transcripts.transcript_id ORDER BY count(*) LIMIT 1 
SELECT Transcripts.transcript_date,        Transcripts.transcript_id FROM Addresses JOIN Courses ON Addresses.department_id = Courses.department_id JOIN Degree_Programs ON Degree_Programs.degree_program_id = Courses.degree_summary_id JOIN Sections ON Sections.course_id = Courses.course_id JOIN Semesters ON Sections.semester_id = Semesters.semester_id JOIN Students ON Students.student_id = Sections.student_id JOIN Student_Enrolment ON Student_Enrolment.student_id = Students.student_id JOIN Student_Enrolment_Courses ON Student_Enrolment_Courses.student_course_id = Students.student_course_id JOIN Transcripts ON Transcripts.student_course_id = Students.student_course_id GROUP BY Transcripts.transcript_id ORDER BY count(*) LIMIT 1 
SELECT semesters.semester_id FROM addresses JOIN courses ON addresses.department_id = courses.department_id JOIN degrees_programs ON degrees_programs.degree_summary_id = courses.course_id JOIN student_enrolment ON student_enrolment.student_id = student_enrolment_courses.student_id JOIN transcripts ON transcripts.transcript_id = student_enrolment.transcript_id JOIN transcript_contents ON transcripts.transcript_id = student_enrolment_courses.transcript_id WHERE student_enrolment.degree_summary_name = "Master" INTERSECT   SELECT semesters.semester_id   FROM addresses   JOIN courses ON addresses.department_id = courses.department_id   JOIN degrees_programs ON degrees_programs.degree_summary_id = courses.course_id   JOIN student_enrolment ON student_enrolment.student_id = student_enrolment_courses.student_
SELECT semesters.semester_id FROM addresses JOIN courses ON addresses.department_id = courses.department_id JOIN degrees_programs ON degrees_programs.degree_summary_id = courses.course_id JOIN student_enrolment ON student_enrolment.student_id = student_enrolment_courses.student_id JOIN transcripts ON transcripts.transcript_id = student_enrolment.transcript_id JOIN transcript_contents ON transcripts.transcript_id = student_enrolment_courses.transcript_id WHERE degrees_programs.degree_summary_name = "Masters" INTERSECT   SELECT semesters.semester_id   FROM addresses   JOIN courses ON addresses.department_id = courses.department_id   JOIN degrees_programs ON degrees_programs.degree_summary_id = courses.course_id   JOIN student_enrolment ON student_enrolment.student_id = student_enrolment_courses.student_
SELECT count(DISTINCT addresses.address_id) FROM addresses JOIN courses ON addresses.department_id = courses.department_id JOIN degrees_programs ON courses.course_id = degrees_programs.course_id JOIN semesters ON semesters.semester_id = degrees_programs.semester_id JOIN students ON students.student_id = semesters.student_id JOIN student_enrolment ON students.student_id = student_enrolment.student_id JOIN student_enrolment_courses ON student_enrolment.student_id = student_enrolment_courses.student_id JOIN transcripts ON student_enrolment_courses.transcript_id = transcripts.transcript_id JOIN transcript_contents ON transcripts.transcript_id = transcript_contents.transcript_id WHERE students.first_name = "Amy"   AND students.last_name = "Smith"   AND courses.course_name = "Introduction to Coding"   AND
SELECT DISTINCT addresses.address_id FROM addresses JOIN courses ON addresses.department_id = courses.department_id JOIN degrees_programs ON courses.course_id = degrees_programs.course_id JOIN semesters ON semesters.semester_id = degrees_programs.semester_id JOIN students ON students.student_id = semesters.student_id JOIN student_enrolment ON student_enrolment.student_id = semesters.student_id JOIN student_enrolment_courses ON student_enrolment_courses.student_enrolment_id = semesters.student_id JOIN transcripts ON transcripts.transcript_id = student_enrolment.transcript_id JOIN transcript_contents ON transcripts.transcript_id = student_enrolment_courses.transcript_id WHERE student_enrolment.student_id IN     (SELECT student_enrolment.student_id      FROM student_enrolment      JOIN student_enrolment_
SELECT Students.first_name,        Students.middle_name,        Students.last_name,        Students.cell_mobile_number,        Students.email_address,        Students.ssn,        Students.date_first_registered,        Students.date_left FROM Addresses JOIN Courses ON Addresses.address_id = Courses.course_id JOIN Departments ON Courses.department_id = Departments.department_id JOIN Degree_Programs ON Degree_Programs.degree_summary_id = Courses.course_id JOIN Sections ON Sections.course_id = Courses.course_id JOIN Student_Enrolment ON Student_Enrolment.student_id = Sections.student_id JOIN Student_Enrolment_Courses ON Student_Enrolment_Courses.student_course_id = Sections.student_id JOIN Transcripts ON Transcripts.student_course_id = Sections.student_id J
SELECT DISTINCT Transcript_Contents.other_details FROM Addresses JOIN Courses ON Addresses.department_id = Courses.department_id JOIN Degree_Programs ON Degree_Programs.degree_summary_id = Courses.degree_summary_id JOIN SEMSTERS ON SEMSTERS.semester_id = Courses.semester_id JOIN STUDENT_ENROLLMENT ON STUDENT_ENROLLMENT.student_id = SEMSTERS.student_id JOIN STUDENT_ENROLLMENT_COURSES ON STUDENT_ENROLLMENT_COURSES.student_enrolment_id = STUDENT_ENROLLMENT.student_enrolment_id JOIN TRANSCRIPTS ON TRANSCRIPTS.transcript_id = STUDENT_ENROLLMENT_COURSES.transcript_id JOIN TRANSCRIPT_CONTENTS ON TRANSCRIPTS.transcript_id = TRANSCRIPT_CONT
SELECT SECTIONS.section_name FROM AREAS JOIN DEPARTMENTS ON AREAS.department_id = DEPARTMENTS.department_id JOIN Degree_Programs ON DEPARTMENTS.department_id = Degree_Programs.department_id JOIN SECTIONS ON DEPARTMENTS.department_id = SECTIONS.department_id WHERE DEPARTMENTS.department_name = "Courses"   AND SECTIONS.section_name = "h"; 
SELECT SECTION_DESCRIPTION FROM SECTION WHERE SECTION_NAME = "h" 
SELECT DISTINCT students.first_name FROM addresses JOIN courses ON addresses.department_id = courses.department_id JOIN degrees_programs ON degrees_programs.degree_summary_id = courses.degree_summary_id JOIN student_enrolment ON student_enrolment.student_id = degrees_programs.student_id JOIN student_enrolment_courses ON student_enrolment_courses.student_enrolment_id = degrees_programs.student_enrolment_id JOIN transcripts ON student_enrolment_courses.transcript_id = transcripts.transcript_id JOIN transcript_contents ON transcripts.transcript_id = transcript_contents.transcript_id WHERE degrees_programs.country = "Haiti"   OR student_enrolment.cell_mobile_number = "09700166582" 
SELECT DISTINCT students.first_name FROM addresses JOIN courses ON addresses.department_id = courses.department_id JOIN degrees_programs ON degrees_programs.degree_summary_id = courses.degree_summary_id JOIN student_enrolment ON student_enrolment.student_id = degrees_programs.student_id JOIN student_enrolment_courses ON student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id JOIN transcripts ON transcripts.transcript_id = student_enrolment_courses.transcript_id JOIN transcript_contents ON transcripts.transcript_id = student_enrolment_courses.transcript_id WHERE student_enrolment.student_id IN     (SELECT student_enrolment.student_id      FROM addresses      JOIN courses ON addresses.department_id = courses.department_id      JOIN degrees_programs ON degrees_programs.degree_summary
SELECT TV_series.Episode,        TV_channel.series_name FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN cartoon ON TV_series.id = cartoon.id ORDER BY cartoon.title 
SELECT TV_series.Episode,        TV_channel.series_name FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN cartoon ON TV_series.id = cartoon.id ORDER BY cartoon.title 
SELECT TV_series.Episode FROM TV_Channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN Cartoon ON TV_series.id = Cartoon.id WHERE Cartoon.directed_by = "Ben Jones" 
SELECT TV_series.Episode FROM TV_Channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN Cartoon ON TV_series.id = Cartoon.id WHERE Cartoon.directed_by = "Ben Jones" 
SELECT COUNT(*) FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.channel JOIN Cartoon ON TV_series.id = Cartoon.id WHERE Cartoon.directed_by = "Joseph Kuhr" 
SELECT COUNT(*) FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.channel JOIN Cartoon ON TV_series.id = Cartoon.id WHERE Cartoon.directed_by = "Joseph Kuhr" 
SELECT TV_series.Episode,        TV_channel.Directed_by,        TV_channel.Written_by FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN Cartoon ON TV_series.id = Cartoon.id ORDER BY Cartoon.Original_air_date 
SELECT TV_series.Episode,        TV_channel.Directed_by FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN Cartoon ON TV_series.id = Cartoon.id ORDER BY Cartoon.original_air_date 
SELECT TV_series.Episode FROM TV_Channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN Cartoon ON TV_series.id = Cartoon.id WHERE TV_channel.content = "Cartoon"   AND TV_series.directed_by = "Ben Jones"   OR TV_series.directed_by = "Brandon Vietti" 
SELECT TV_series.Episode FROM TV_Channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN Cartoon ON TV_series.id = Cartoon.id WHERE TV_channel.Country = "USA"   AND TV_series.Directed_by = "Ben Jones"   OR TV_series.Directed_by = "Brandon Vietti" 
SELECT TV_Channel.Country,        COUNT(*) FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel JOIN Cartoon ON TV_series.id = Cartoon.id GROUP BY TV_Channel.Country ORDER BY COUNT(*) DESC LIMIT 1; 
SELECT TV_Channel.Country,        COUNT(*) FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel JOIN Cartoon ON TV_series.id = Cartoon.id GROUP BY TV_Channel.Country ORDER BY COUNT(*) DESC LIMIT 1; 
SELECT count(DISTINCT TV_series.series_name),        count(TV_channel.series_name) FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN Cartoon ON TV_series.id = Cartoon.id GROUP BY TV_channel.id 
SELECT count(DISTINCT TV_series.series_name),        count(DISTINCT TV_channel.Content) FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN Cartoon ON TV_series.id = Cartoon.id GROUP BY TV_channel.id 
SELECT TV_Channel.Content FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.channel JOIN Cartoon ON TV_series.id = Cartoon.id WHERE TV_series.Title = "Sky Radio" 
SELECT TV_series.Content FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel JOIN TV_Channel ON TV_Channel.id = TV_series.Channel WHERE TV_Channel.series_name = "Sky Radio" 
SELECT TV_Channel.Package_Option FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.channel JOIN Cartoon ON TV_series.id = Cartoon.id WHERE TV_series.Title = "Sky Radio" 
SELECT TV_Channel.Package_Option FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel JOIN Cartoon ON TV_series.id = Cartoon.id WHERE TV_series.Title = "Sky Radio" 
SELECT count(*) FROM TV_Channel WHERE Language = "English" 
SELECT count(*) FROM TV_channel WHERE language = 'english' 
SELECT TV_Channel.Language,        COUNT(*) FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.channel JOIN Cartoon ON TV_series.id = Cartoon.id GROUP BY TV_Channel.Language ORDER BY COUNT(*) DESC LIMIT 1; 
SELECT TV_Channel.Language,        COUNT(*) FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.channel JOIN Cartoon ON TV_series.id = Cartoon.id GROUP BY TV_Channel.Language ORDER BY COUNT(*) LIMIT 1 
SELECT TV_Channel.Language,        COUNT(*) FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.channel JOIN Cartoon ON TV_series.id = Cartoon.id GROUP BY TV_Channel.Language 
SELECT TV_Channel.Language,        COUNT(*) FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.channel JOIN Cartoon ON TV_series.id = Cartoon.id GROUP BY TV_Channel.Language 
SELECT TV_Channel.series_name FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.channel JOIN Cartoon ON Cartoon.id = TV_series.id WHERE Cartoon.Title = "The Rise of the Blue Beetle!" 
SELECT TV_Channel.series_name FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.channel JOIN Cartoon ON TV_series.id = Cartoon.id WHERE Cartoon.title = "The Rise of the Blue Beetle" 
SELECT TV_series.Title FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel JOIN Cartoon ON TV_series.id = Cartoon.id WHERE TV_Channel.series_name = "Sky Radio" 
SELECT TV_Channel.series_name FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.channel JOIN Cartoon ON TV_series.id = Cartoon.id WHERE TV_Channel.id =     (SELECT Cartoon.channel      FROM Cartoon      JOIN TV_series ON Cartoon.id = TV_series.id      WHERE TV_series.title = "Sky Radio") 
SELECT TV_series.Episode FROM TV_Channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN Cartoon ON TV_series.id = Cartoon.id ORDER BY TV_series.Rating 
SELECT TV_series.Episode FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel JOIN Cartoon ON Cartoon.id = TV_series.id ORDER BY TV_series.Rating 
SELECT TV_series.Episode,        TV_series.Rating FROM TV_Channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN Cartoon ON TV_series.id = Cartoon.id ORDER BY TV_series.Rating DESC LIMIT 3; 
SELECT TV_series.Episode,        TV_channel.Content FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN cartoon ON TV_series.id = cartoon.id GROUP BY TV_series.id ORDER BY TV_series.rating DESC LIMIT 3; 
SELECT min(TV_series.Share),        max(TV_series.Share) FROM TV_Channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN Cartoon ON TV_series.id = Cartoon.id 
SELECT max(TV_series.share),        min(TV_series.share) FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN cartoon ON TV_series.id = cartoon.id 
SELECT TV_series.Air_Date FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel JOIN Cartoon ON Cartoon.id = TV_series.id WHERE TV_series.Title = "A Love of a Lifetime" 
SELECT TV_series.Air_Date FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel JOIN Cartoon ON TV_series.id = Cartoon.id WHERE Cartoon.Title = "A Love of a Lifetime" 
SELECT TV_series.Weekly_Rank FROM TV_Channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN Cartoon ON Cartoon.id = TV_series.id WHERE TV_series.Title = "A Love of a Lifetime" 
SELECT TV_series.Weekly_Rank FROM TV_Channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN Cartoon ON TV_series.id = Cartoon.id WHERE Cartoon.Title = "A Love of a Lifetime" 
SELECT TV_Channel.series_name FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.channel JOIN Cartoon ON TV_series.id = Cartoon.id WHERE Cartoon.Title = "A Love of a Lifetime" 
SELECT TV_series.Title FROM TV_Channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN Cartoon ON TV_series.id = Cartoon.id WHERE Cartoon.Title = "A Love of a Lifetime" 
SELECT TV_series.Episode FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel JOIN Cartoon ON Cartoon.id = TV_series.id WHERE TV_Channel.series_name = "Sky Radio" 
SELECT TV_series.Episode FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel JOIN Cartoon ON Cartoon.id = TV_series.id WHERE TV_series.Title = "Sky Radio" 
SELECT count(*),        TV_Channel.directed_by FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.channel JOIN Cartoon ON TV_series.id = Cartoon.id GROUP BY TV_Channel.directed_by 
SELECT TV_Channel.Content,        TV_series.Viewers_m FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel JOIN Cartoon ON TV_series.id = Cartoon.id GROUP BY TV_Channel.id HAVING TV_series.Directed_by = Cartoon.Directed_by 
SELECT TV_Channel.Production_code,        TV_Channel.Channel FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.channel JOIN Cartoon ON TV_series.id = Cartoon.id ORDER BY Cartoon.original_air_date DESC LIMIT 1 
SELECT TV_Channel.Production_code,        TV_Channel.Channel FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.channel JOIN Cartoon ON TV_series.id = Cartoon.id ORDER BY Cartoon.original_air_date DESC LIMIT 1 
SELECT TV_Channel.Package_Option,        TV_series.series_name FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel WHERE TV_series.Hight_definition_TV = 1 
SELECT TV_Channel.Package_Option,        TV_series.Title FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel WHERE TV_Channel.Hight_definition_TV = 1 
SELECT TV_Channel.Country FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel JOIN Cartoon ON TV_series.id = Cartoon.id WHERE Cartoon.Written_by = "Todd Casey" 
SELECT TV_Channel.Country FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.channel JOIN Cartoon ON TV_series.id = Cartoon.id WHERE Cartoon.Written_by = "Todd Casey" 
SELECT TV_Channel.Country FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel JOIN Cartoon ON TV_series.id = Cartoon.id WHERE Cartoon.Production_code!= "Todd Casey" 
SELECT TV_Channel.Country FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.channel JOIN Cartoon ON TV_series.id = Cartoon.id WHERE Cartoon.Production_code!= "Todd Casey" 
SELECT TV_Channel.series_name,        TV_Channel.country FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.channel JOIN Cartoon ON TV_series.id = Cartoon.id WHERE Cartoon.directed_by = "Ben Jones"   AND Cartoon.written_by = "Michael Chang" 
SELECT TV_Channel.series_name,        TV_Channel.Country FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel JOIN Cartoon ON TV_series.id = Cartoon.id WHERE Cartoon.directed_by = "Ben Jones"   OR Cartoon.directed_by = "Michael Chang" 
SELECT TV_Channel.Pixel_aspect_ratio_PAR,        TV_Channel.Country FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel JOIN Cartoon ON TV_series.id = Cartoon.id WHERE Cartoon.Production_code!= "English" 
SELECT TV_channel.Pixel_aspect_ratio_PAR,        TV_channel.Country FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel WHERE TV_series.original_air_date NOT LIKE "%English%" 
SELECT TV_Channel.id FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.channel JOIN Cartoon ON TV_series.id = Cartoon.id GROUP BY Cartoon.id HAVING COUNT(*) > 2 
SELECT TV_Channel.id FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.channel JOIN Cartoon ON TV_series.id = Cartoon.id GROUP BY TV_Channel.id HAVING count(*) > 2 
SELECT TV_Channel.id FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.channel JOIN Cartoon ON TV_series.id = Cartoon.id WHERE Cartoon.directed_by!= "Ben Jones" 
SELECT TV_Channel.id FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel JOIN Cartoon ON TV_series.id = Cartoon.id WHERE Cartoon.directed_by!= "Ben Jones" 
SELECT TV_channel.Package_Option FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN Cartoon ON TV_series.id = Cartoon.id WHERE TV_channel.id NOT IN     (SELECT TV_channel.id      FROM TV_channel      JOIN TV_series ON TV_channel.id = TV_series.channel      JOIN Cartoon ON TV_series.id = Cartoon.id      WHERE TV_series.directed_by = "Ben Jones") 
SELECT TV_channel.Package_Option FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN Cartoon ON TV_series.id = Cartoon.id WHERE Cartoon.directed_by!= "Ben Jones" 
SELECT count(*) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID 
SELECT count(*) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID 
SELECT Earnings FROM poker_player ORDER BY Earnings DESC 
SELECT Earnings FROM poker_player ORDER BY Earnings DESC 
SELECT poker_player.Final_Table_Made,        poker_player.Best_Finish FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID 
SELECT poker_player.Final_Table_Made,        poker_player.Best_Finish FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID 
SELECT avg(poker_player.Earnings) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID 
SELECT avg(poker_player.Earnings) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID 
SELECT poker_player.Money_Rank FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY people.Earnings DESC LIMIT 1 
SELECT poker_player.Money_Rank FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY people.Earnings DESC LIMIT 1 
SELECT max(poker_player.Final_Table_Made) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Earnings < 200000 
SELECT poker_player.Final_Table_Made FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Earnings < 200000 GROUP BY poker_player.People_ID ORDER BY max(Final_Table_Made) DESC LIMIT 1 
SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID 
SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID 
SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE poker_player.Earnings > 300000 
SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE poker_player.Earnings > 300000 
SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY Final_Table_Made ASC 
SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID GROUP BY poker_player.People_ID ORDER BY count(*) DESC 
SELECT people.Birth_Date FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY poker_player.Earnings LIMIT 1 
SELECT people.Birth_Date FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY poker_player.Earnings LIMIT 1 
SELECT poker_player.Money_Rank FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height =     (SELECT MAX (people.Height)      FROM people) 
SELECT poker_player.Money_Rank FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY people.Height DESC LIMIT 1 
SELECT avg(poker_player.Earnings) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height > 200 
SELECT avg(Earnings) FROM poker_player WHERE Height > 200 
SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY Earnings DESC 
SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY Earnings DESC 
SELECT people.Nationality,        count(*) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID GROUP BY people.Nationality 
SELECT people.Nationality,        count(*) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID GROUP BY people.Nationality 
SELECT people.Nationality FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID GROUP BY people.Nationality ORDER BY count(*) DESC LIMIT 1 
SELECT people.Nationality FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID GROUP BY people.Nationality ORDER BY count(*) DESC LIMIT 1 
SELECT people.Nationality FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID GROUP BY people.Nationality HAVING count(*) >= 2 
SELECT people.Nationality FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID GROUP BY people.Nationality HAVING count(*) >= 2 
SELECT people.Name,        people.Birth_Date FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY people.Name ASC 
SELECT people.Name,        people.Birth_Date FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY people.Name 
SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Nationality!= "Russia" 
SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Nationality!= 'Russia' 
SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE poker_player.People_ID!= people.People_ID 
SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE poker_player.People_ID = 0 
SELECT count(DISTINCT people.Nationality) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID 
SELECT count(DISTINCT people.Nationality) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID 
SELECT count(DISTINCT AREA_CODE_STATE.state) FROM AREA_CODE_STATE JOIN CONTESTANTS ON AREA_CODE_STATE.area_code = CONTESTANTS.area_code JOIN VOTES ON VOTES.contestant_number = CONTESTANTS.contestant_number 
SELECT CONTESTANTS.contestant_number,        CONTESTANTS.contestant_name FROM AREA_CODE_STATE JOIN CONTESTANTS ON AREA_CODE_STATE.area_code = CONTESTANTS.area_code JOIN VOTES ON VOTES.contestant_number = CONTESTANTS.contestant_number ORDER BY CONTESTANTS.contestant_name DESC 
SELECT VOTES.vote_id,        VOTES.phone_number,        AREA_CODE_STATE.state FROM AREA_CODE_STATE JOIN CONTESTANTS ON AREA_CODE_STATE.area_code = CONTESTANTS.area_code JOIN VOTES ON VOTES.contestant_number = CONTESTANTS.contestant_number 
SELECT max(area_code),        min(area_code) FROM AREA_CODE_STATE UNION SELECT max(contestantons.contestant_number),        min(contestantons.contestant_number) FROM CONTESTANTS JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number 
SELECT VOTES.created FROM AREA_CODE_STATE JOIN CONTESTANTS ON AREA_CODE_STATE.state = CONTESTANTS.state JOIN VOTES ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE AREA_CODE_STATE.state = "CA" 
SELECT CONTESTANTS.contestant_name FROM AREA_CODE_STATE JOIN CONTESTANTS ON AREA_CODE_STATE.area_code = CONTESTANTS.area_code JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number WHERE CONTESTANTS.contestant_name!= "Jessie Alloway" 
SELECT AREA_CODE_STATE.state,        VOTES.created FROM AREA_CODE_STATE JOIN CONTESTANTS ON AREA_CODE_STATE.area_code = CONTESTANTS.area_code JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number GROUP BY AREA_CODE_STATE.state 
SELECT CONTESTANTS.contestant_number,        CONTESTANTS.contestant_name FROM AREA_CODE_STATE JOIN CONTESTANTS ON AREA_CODE_STATE.area_code = CONTESTANTS.area_code JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number GROUP BY CONTESTANTS.contestant_number HAVING COUNT(*) >= 2 
SELECT CONTESTANTS.contestant_number,        CONTESTANTS.contestant_name FROM AREA_CODE_STATE JOIN CONTESTANTS ON AREA_CODE_STATE.area_code = CONTESTANTS.area_code JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number GROUP BY CONTESTANTS.contestant_number ORDER BY count(*) LIMIT 1 
SELECT COUNT(*) FROM AREA_CODE_STATE JOIN CONTESTANTS ON AREA_CODE_STATE.area_code = CONTESTANTS.area_code JOIN VOTES ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE AREA_CODE_STATE.state = "NY"   OR AREA_CODE_STATE.state = "CA" 
SELECT count(*) FROM AREA_CODE_STATE JOIN CONTESTANTS ON AREA_CODE_STATE.area_code = CONTESTANTS.area_code JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number WHERE VOTES.state = "NY"   AND CONTESTANTS.contestant_number NOT IN     (SELECT contestant_number      FROM VOTES) 
SELECT AREA_CODE_STATE.area_code FROM AREA_CODE_STATE JOIN CONTESTANTS ON AREA_CODE_STATE.area_code = CONTESTANTS.area_code JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number GROUP BY AREA_CODE_STATE.area_code ORDER BY COUNT(*) DESC LIMIT 1 
SELECT VOTES.create_date,        AREA_CODE_STATE.state,        CONTESTANTS.phone_number FROM AREA_CODE_STATE JOIN CONTESTANTS ON AREA_CODE_STATE.area_code = CONTESTANTS.area_code JOIN VOTES ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE CONTESTANTS.contestant_name = "Tabatha Gehling" 
SELECT AREA_CODE_STATE.area_code FROM AREA_CODE_STATE JOIN CONTESTANTS ON AREA_CODE_STATE.state = CONTESTANTS.state JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number WHERE CONTESTANTS.contestant_name = "Tabatha Gehling" INTERSECT   SELECT AREA_CODE_STATE.area_code   FROM AREA_CODE_STATE   JOIN CONTESTANTS ON AREA_CODE_STATE.state = CONTESTANTS.state   JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number   WHERE CONTESTANTS.contestant_name = "Kelly Clauss" 
SELECT CONTESTANTS.contestant_name FROM AREA_CODE_STATE JOIN CONTESTANTS ON AREA_CODE_STATE.area_code = CONTESTANTS.area_code JOIN VOTES ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE CONTESTANTS.contestant_name LIKE '%Al%' 
SELECT country.name FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code WHERE country.independent = 1950 
SELECT country.name FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code WHERE country.year > 1950 
SELECT count(*) FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code WHERE country.GovernmentForm = "Republic" 
SELECT count(*) FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code WHERE country.GovernmentForm = "Republic" 
SELECT sum(city.surfacearea) FROM city JOIN sqlite_sequence ON city.countrycode = country.code JOIN country ON country.code = city.countrycode WHERE country.region = "Caribbean" 
SELECT sum(city.surfacearea) FROM city JOIN sqlite_sequence ON city.countrycode = country.code JOIN country ON country.code = city.countrycode WHERE country.name = "Caribbean" 
SELECT country.Continent FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code WHERE city.Name = "Anguilla" 
SELECT country.Continent FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code WHERE city.Name = "Anguilla" 
SELECT country.Region FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code WHERE city.Name = "Kabul" 
SELECT country.Region FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code WHERE city.Name = "Kabul" 
SELECT countrylanguage.Language FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code WHERE country.Name = "Aruba" GROUP BY country.Name ORDER BY count(*) DESC LIMIT 1 
SELECT countrylanguage.Language FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code WHERE country.Name = "Aruba"   AND city.Language = "Dutch"   AND country.GovernmentForm = "Constitutional Monarchy"   AND country.Capital = "Oranje-Nassau"   AND country.Population > 1000000   AND country.LifeExpectancy > 70   AND country.GNP > 100000000   AND country.GNPOld > 100000000   AND country.GDP > 100000000   AND country.Area > 1000000   AND country.IndepYear > 1983   AND country.IndepYear = "1983"   AND country.IndepYear = "1983"   AND country.IndepYear = "1983
SELECT city.Population,        country.LifeExpectancy FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code WHERE country.Name = "Brazil" 
SELECT city.Population,        country.LifeExpectancy FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code WHERE country.Name = "Brazil"; 
SELECT country.region,        country.population FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code WHERE country.name = "Angola" 
SELECT country.region,        country.population FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code WHERE country.name = "Angola" 
SELECT avg(lifeexpectancy) FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code WHERE country.Region = "Central Africa" 
SELECT avg(lifeexpectancy) FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code WHERE country.name = "Central Africa"   AND country.continent = "Africa"   AND city.Population INTEGER   AND city.Population > 1000000; 
SELECT country.name FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code WHERE country.continent = "Asia" ORDER BY country.lifeexpectancy LIMIT 1; 
SELECT country.name FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code WHERE country.continent = "Asia" ORDER BY country.lifeexpectancy LIMIT 1; 
SELECT sum(city.population),        max(city.gnp) FROM city JOIN sqlite_sequence ON city.countrycode = country.code JOIN country ON country.code = city.countrycode WHERE country.continent = "Asia" GROUP BY city.countrycode 
SELECT city.Population,        country.GNP FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code WHERE country.Continent = "Asia" GROUP BY city.CountryCode ORDER BY city.Population DESC LIMIT 1 
SELECT avg(lifeexpectancy) FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name WHERE country.Continent = "Africa"   AND city.Region = "Republic" 
SELECT avg(lifeexpectancy) FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name WHERE country.Region = "Africa"   AND country.Continent = "Republic" 
SELECT sum(city.surfacearea) FROM city JOIN sqlite_sequence ON city.countrycode = country.code JOIN country ON country.code = city.countrycode WHERE country.continent = "Asia"   OR country.continent = "Europe" 
SELECT sum(city.population) FROM city JOIN sqlite_sequence ON city.countrycode = country.code JOIN country ON country.code = city.countrycode WHERE country.continent = "Asia"   OR country.continent = "Europe" 
SELECT count(*) FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE city.District = "Gelderland" 
SELECT sum(city.population) FROM city JOIN sqlite_sequence ON city.countrycode = country.code JOIN country ON country.code = city.countrycode JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE city.district = "Gelderland" 
SELECT avg(country.gnp),        sum(country.population) FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code WHERE country.continent = "US" GROUP BY country.code 
SELECT country.gnp,        country.population FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code WHERE country.name = "United States" 
SELECT count(DISTINCT countrylanguage.Language) FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code WHERE country.Continent = "World" 
SELECT COUNT (DISTINCT countrylanguage.Language) FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code WHERE country.Continent = "Europe"   AND city.Population > 1000000   AND city.Capital INTEGER 
SELECT count(DISTINCT country.governmentform) FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code WHERE country.continent = "Africa" 
SELECT count(DISTINCT country.governmentform) FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code WHERE country.continent = "Africa" 
SELECT sum(countrylanguage.percentage) FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code WHERE country.name = "Aruba" 
SELECT countrylanguage.percentage FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code WHERE country.name = "Aruba" 
SELECT countrylanguage.Percentage FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code WHERE country.Name = "Afghanistan"   AND country.Continent = "Asia"   AND country.GovernmentForm = "Republic"   AND country.Capital = "Kabul"   AND country.Language = "Dari"   AND country.Language = "Persian"   AND country.Language = "Pashto"   AND country.Language = "Urdu"; 
SELECT countrylanguage.Percentage FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code WHERE country.Name = "Afghanistan"   AND country.GovernmentForm = "Republic"   AND country.Capital = "Kabul"   AND city.Language = "Dari"   AND city.Language = "Persian"   AND city.Language = "Pashto"   AND city.Language = "Urdu"; 
SELECT country.name FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.name ORDER BY count(*) DESC LIMIT 1 
SELECT country.name FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.name ORDER BY sum(countrylanguage.percentage) DESC LIMIT 1 
SELECT country.Continent FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Continent ORDER BY count(*) DESC LIMIT 1 
SELECT country.Continent FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Continent ORDER BY count(*) DESC LIMIT 1 
SELECT count(*) FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.CountryCode = countrylanguage.CountryCode WHERE country.Name = "United States" INTERSECT   SELECT count(*)   FROM city   JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name   JOIN country ON city.CountryCode = country.Code   JOIN countrylanguage ON country.CountryCode = countrylanguage.CountryCode WHERE country.Name = "Netherlands" 
SELECT count(*) FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.CountryCode = countrylanguage.CountryCode WHERE countrylanguage.Language = "English" INTERSECT   SELECT count(*)   FROM city   JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name   JOIN country ON city.CountryCode = country.Code   JOIN countrylanguage ON country.CountryCode = countrylanguage.CountryCode WHERE countrylanguage.Language = "Dutch" 
SELECT country.name FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "English" INTERSECT   SELECT city.name   FROM city   JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name   JOIN country ON city.countrycode = country.code   JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "French" 
SELECT country.name FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "English" INTERSECT   SELECT city.name   FROM city   JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name   JOIN country ON city.countrycode = country.code   JOIN countrylanguage ON country.code = countrylanguage.countrycode   WHERE countrylanguage.language = "French" 
SELECT country.name FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "English" INTERSECT   SELECT city.name   FROM city   JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name   JOIN country ON city.countrycode = country.code   JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "French" 
SELECT country.name FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code WHERE country.name = "United States"   AND country.name = "France"   AND country.language = "English"   AND country.language = "French" 
SELECT count(DISTINCT country.continent) FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "Chinese" 
SELECT count(DISTINCT country.continent) FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "Chinese" 
SELECT country.Region FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = "English"   OR countrylanguage.Language = "Dutch" 
SELECT country.Region FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code WHERE country.Name = "Dutch"   OR country.Name = "English" 
SELECT country.name FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "English"   OR countrylanguage.language = "Dutch" 
SELECT country.name FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code WHERE country.name = "United States"   OR country.name = "Netherlands"   AND country.language = "English"   OR country.language = "Dutch" 
SELECT countrylanguage.Language FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code WHERE country.Continent = "Asia" GROUP BY country.Language ORDER BY count(*) DESC LIMIT 1 
SELECT countrylanguage.Language FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code WHERE country.Continent = "Asia" GROUP BY country.Language ORDER BY count(*) DESC LIMIT 1 
SELECT countrylanguage.Language FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code WHERE country.GovernmentForm = "Republic" GROUP BY countrylanguage.Language HAVING COUNT(*) = 1 
SELECT countrylanguage.Language FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code WHERE country.GovernmentForm = "Republic" 
SELECT city.name FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "English" GROUP BY city.name ORDER BY city.population DESC LIMIT 1; 
SELECT city.name FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code WHERE country.countryname = "United States"   AND city.cityname = citylanguage.language ORDER BY city.population DESC LIMIT 1; 
SELECT city.name,        city.population,        country.lifeexpectancy FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code WHERE country.continent = "Asia"   AND city.area =     (SELECT MAX (city.area)      FROM city      JOIN countrylanguage ON city.countrycode = countrylanguage.country      WHERE countrylanguage.language = "Chinese") 
SELECT city.name,        city.population,        city.lifeexpectancy FROM city JOIN sqlite_sequence ON city.countrycode = country.code JOIN country ON country.code = city.countrycode WHERE country.name = "Asia"   AND city.countrycode = country.capital ORDER BY city.population DESC LIMIT 1; 
SELECT avg(lifeexpectancy) FROM city WHERE countrycode IN     (SELECT countrycode      FROM country      WHERE language!= "English") 
SELECT avg(lifeexpectancy) FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.CountryCode WHERE country.Language!= "English" 
SELECT sum(city.population) FROM city JOIN sqlite_sequence ON city.countrycode = country.code JOIN country ON country.code = city.countrycode WHERE country.name!= "english" 
SELECT count(*) FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code WHERE country.Language = "English"   AND city.Population = 0 
SELECT countrylanguage.Language FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.HeadOfState = "Beatrix" 
SELECT countrylanguage.Language FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code WHERE country.HeadOfState = "Beatrix" 
SELECT sum(countrylanguage.percentage) FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code WHERE country.IndepYear < 1930 
SELECT sum(countrylanguage.percentage) FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code WHERE country.IndepYear < 1930 
SELECT country.name FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code WHERE country.surfacearea >     (SELECT max(surfacearea)      FROM city      JOIN country ON city.countrycode = country.code      WHERE country.continent = "Europe") 
SELECT country.name FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code WHERE country.area >     (SELECT max(area)      FROM country      JOIN countrylanguage ON country.code = countrylanguage.country      WHERE countrylanguage.language = "Europe") 
SELECT country.name FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code WHERE country.continent = "Africa"   AND city.population <     (SELECT min(city.population)      FROM city      JOIN country ON city.countrycode = country.code      WHERE country.continent = "Asia") 
SELECT city.name FROM city JOIN sqlite_sequence ON city.countrycode = country.code JOIN country ON country.code = city.countrycode WHERE country.continent = "Africa"   AND city.population <     (SELECT min(city.population)      FROM city      JOIN country ON city.countrycode = country.code      WHERE country.continent = "Asia") 
SELECT country.name FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code WHERE country.continent = "Asia"   AND city.population >   (SELECT max(city.population)    FROM city    JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode    WHERE countrylanguage.language = "Africa") 
SELECT country.name FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code WHERE country.continent = "Asia"   AND city.population >   (SELECT max(city.population)    FROM city    JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode    WHERE countrylanguage.language = "Africa") 
SELECT country.CountryCode FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code WHERE country.Name!= "English" 
SELECT country.CountryCode FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code WHERE country.Name!= "English" 
SELECT country.CountryCode FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code WHERE country.Language!= "English" 
SELECT country.CountryCode FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code WHERE country.Language!= "English" 
SELECT country.code FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code WHERE country.governmentform!= 'Republic'   AND city.language!= 'English' 
SELECT country.CountryCode FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code WHERE country.Name!= "English"   AND country.GovernmentForm!= "Republic" 
SELECT city.name FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code WHERE country.countryname = "Europe"   AND country.continent = "Europe"   AND countrylanguage.language!= "English" 
SELECT city.name FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name WHERE city.countrycode NOT IN     (SELECT countrycode      FROM country      JOIN countrylanguage ON country.countrycode = countrylanguage.countrycode      WHERE countrylanguage.language = "English") 
SELECT DISTINCT city.name FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code WHERE country.countryname = "Asia"   AND country.continent = "Asia"   AND country.linguainformation = "Chinese" 
SELECT DISTINCT city.name FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code WHERE country.name = "Asia"   AND country.continent = "Asia"   AND city.language = "Chinese" 
SELECT city.name,        city.population,        city.surfacearea FROM city JOIN sqlite_sequence ON city.countrycode = country.code JOIN country ON country.code = city.countrycode WHERE city.population =     (SELECT min(city.population)      FROM city      JOIN country ON city.countrycode = country.code      JOIN countrylanguage ON country.code = countrylanguage.countrycode      WHERE countrylanguage.language = "english") 
SELECT country.name,        country.year_in_reign,        country.surface_area FROM city JOIN sqlite_sequence ON city.country_code = sqlite_sequence.name JOIN country ON city.country_code = country.code WHERE country.population =     (SELECT min(population)      FROM city      JOIN country ON city.country_code = country.code      JOIN countrylanguage ON country.code = countrylanguage.country_code      WHERE countrylanguage.language = "English") 
SELECT city.population,        city.name,        country.name FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code WHERE country.surfacearea =     (SELECT MAX (surfacearea)      FROM city      JOIN country ON city.countrycode = country.code)   AND country.continent = "Europe"   AND country.name = "Germany"; 
SELECT country.name,        country.population,        country.head_of_state FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code WHERE country.surfacearea =     (SELECT MAX (surfacearea)      FROM city      JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name      JOIN country ON city.countrycode = country.code      WHERE country.name = "United States") 
SELECT country.name,        countrylanguage.percentage FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code WHERE country.region = "Europe" GROUP BY city.countrycode HAVING COUNT(*) >= 3 
SELECT country.name,        countrylanguage.percentage FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.name HAVING COUNT(*) > 2 
SELECT city.name,        count(*) FROM city JOIN sqlite_sequence ON city.countrycode = country.code JOIN country ON country.code = city.countrycode WHERE city.population >     (SELECT avg(city.population)      FROM city      JOIN country ON city.countrycode = country.code      WHERE country.name IN          (SELECT country.name           FROM country           JOIN countrylanguage ON country.code = countrylanguage.countrycode           WHERE countrylanguage.language = "english")) GROUP BY city.name 
SELECT city.name,        citylanguage.countrycode,        count(*) FROM city JOIN sqlite_sequence ON city.countrycode = country.code JOIN country ON country.code = city.countrycode JOIN countrylanguage ON country.code = citylanguage.countrycode WHERE city.population >     (SELECT avg(city.population)      FROM city      JOIN country ON city.countrycode = country.code      JOIN countrylanguage ON country.code = citylanguage.countrycode) GROUP BY city.countrycode 
SELECT country.governmentform,        avg(country.lifeexpectancy) FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.lifeexpectancy > 72 GROUP BY country.governmentform 
SELECT country.governmentform,        sum(city.population) FROM city JOIN sqlite_sequence ON city.countrycode = country.code JOIN country ON country.code = city.countrycode JOIN countrylanguage ON country.code = city.countrycode WHERE country.lifeexpectancy > 72 GROUP BY country.governmentform 
SELECT country.continent,        avg(country.lifeexpectancy),        sum(country.population) FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code WHERE country.lifeexpectancy < 72 GROUP BY country.continent 
SELECT country.Continent,        country.Population,        avg(country.LifeExpectancy) FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code WHERE country.LifeExpectancy < 72 GROUP BY country.Continent 
SELECT country.name,        country.area FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code ORDER BY country.area DESC LIMIT 5 
SELECT country.name,        country.surfacearea FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code WHERE country.surfacearea >     (SELECT MAX (surfacearea)      FROM city      JOIN country ON city.countrycode = country.code      JOIN countrylanguage ON country.code = countrylanguage.countrycode      WHERE countrylanguage.language = "english")   AND country.continent = "europe"; 
SELECT country.name FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode ORDER BY city.population DESC LIMIT 3 
SELECT country.name FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.name ORDER BY city.population DESC LIMIT 3; 
SELECT country.name FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code GROUP BY city.countrycode ORDER BY city.population LIMIT 3 
SELECT country.name FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code GROUP BY city.countrycode ORDER BY count(*) LIMIT 3 
SELECT count(*) FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code WHERE country.Continent = "Asia" 
SELECT count(*) FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code WHERE country.Continent = "Asia" 
SELECT country.name FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code WHERE country.continent = "Europe"   AND city.population = 80000 
SELECT country.name FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code WHERE country.continent = "Europe"   AND city.population = 80000 
SELECT sum(city.population),        avg(city.area) FROM city JOIN sqlite_sequence ON city.countrycode = country.code JOIN country ON country.code = city.countrycode WHERE country.continent = "North America"   AND city.area > 3000 GROUP BY city.countrycode 
SELECT country.Population,        country.SurfaceArea FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code WHERE country.SurfaceArea > 3000   AND country.Continent = "North America" 
SELECT city.name FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code WHERE city.population BETWEEN 160000 AND 900000 
SELECT city.name FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code WHERE city.population BETWEEN 160000 AND 900000 
SELECT countrylanguage.Language FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code GROUP BY country.Language ORDER BY count(*) DESC LIMIT 1 
SELECT countrylanguage.Language FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code GROUP BY country.Code ORDER BY count(*) DESC LIMIT 1 
SELECT country.name,        countrylanguage.language FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.name ORDER BY count(*) DESC LIMIT 1 
SELECT country.CountryCode,        countrylanguage.Language,        max(countrylanguage.Percentage) FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.CountryCode 
SELECT country.name FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.percentage =     (SELECT max(percentage)      FROM countrylanguage      WHERE language = "spanish") 
SELECT count(*) FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.CountryCode = countrylanguage.CountryCode WHERE countrylanguage.Language = "Spanish" 
SELECT country.code FROM city JOIN sqlite_sequence ON city.countrycode = sqlite_sequence.name JOIN country ON city.countrycode = country.code WHERE country.name = "Spain"   AND city.population / city.population * 100 =     (SELECT max(percentage)      FROM city      JOIN countrylanguage ON city.countrycode = countrylanguage.country      WHERE countrylanguage.language = "Spanish") 
SELECT country.CountryCode FROM city JOIN sqlite_sequence ON city.CountryCode = sqlite_sequence.name JOIN country ON city.CountryCode = country.Code WHERE country.Language = "Spanish" 
SELECT count(*) FROM conductor 
SELECT count(DISTINCT conductor.Name) FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID 
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID ORDER BY conductor.Age ASC 
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID ORDER BY conductor.Age 
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID WHERE orchestra.Nationality!= "USA" 
SELECT conductor.Name FROM conductor EXCEPT SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON performance.Orchestra_ID = orchestra.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID WHERE orchestra.Nationality = "USA" 
SELECT orchestra.Record_Company FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID ORDER BY orchestra.Record_Company DESC 
SELECT orchestra.Record_Company FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID ORDER BY orchestra.Record_Company DESC 
SELECT avg(show.Attendance) FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID WHERE conductor.Name = "John"   AND orchestra.Name = "Orchestra"   AND performance.If_first_show = 1 
SELECT avg(show.Attendance) FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID 
SELECT max(show.Share),        min(show.Share) FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID WHERE orchestra.Orchestra = "Live final"   AND show.Share!= "Live final" 
SELECT max(show.Share),        min(show.Share) FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID WHERE show.Type!= "Live final" 
SELECT count(DISTINCT conductor.Nationality) FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID 
SELECT COUNT(DISTINCT conductor.Nationality) FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID WHERE conductor.Nationality!= "United States" GROUP BY conductor.Nationality 
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID ORDER BY conductor.Year_of_Work DESC 
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID ORDER BY orchestra.Year_of_Work DESC 
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID GROUP BY conductor.Name ORDER BY count(*) DESC LIMIT 1 
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID GROUP BY conductor.Name ORDER BY count(*) DESC LIMIT 1 
SELECT conductor.Name,        orchestra.Orchestra FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON performance.Orchestra_ID = orchestra.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID 
SELECT conductor.Name,        orchestra.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON performance.Orchestra_ID = orchestra.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID 
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID GROUP BY conductor.Name HAVING count(*) > 1 
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID GROUP BY conductor.Name HAVING count(*) > 1 
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID GROUP BY conductor.Name ORDER BY count(*) DESC LIMIT 1 
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID GROUP BY conductor.Name ORDER BY count(*) DESC LIMIT 1 
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID WHERE orchestra.Year_of_Founded > 2008 
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID WHERE orchestra.Year_of_Founded > 2008 
SELECT orchestra.Record_Company,        count(*) FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID GROUP BY orchestra.Record_Company 
SELECT count(*),        orchestra.Record_Company FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID GROUP BY orchestra.Record_Company 
SELECT ORCHESTRAS.Major_Record_Format FROM CONDUCTOR JOIN ORCHESTRAS ON CONDUCTOR.Conductor_ID = ORCHESTRAS.Conductor_ID JOIN performance ON performance.Orchestra_ID = ORCHESTRAS.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID ORDER BY count(*) ASC 
SELECT ORCHESTRAS.Major_Record_Format FROM CONDUCTOR JOIN ORCHESTRAS ON CONDUCTOR.Conductor_ID = ORCHESTRAS.Conductor_ID JOIN performance ON performance.Orchestra_ID = ORCHESTRAS.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID GROUP BY ORCHESTRAS.Major_Record_Format ORDER BY COUNT(*) DESC 
SELECT orchestra.Record_Company FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID GROUP BY orchestra.Record_Company ORDER BY count(*) DESC LIMIT 1 
SELECT orchestra.Record_Company FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID GROUP BY orchestra.Record_Company ORDER BY count(*) DESC LIMIT 1 
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID WHERE performance.Performance_ID = 0 
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID WHERE orchestra.Orchestra = "None" 
SELECT orchestra.Record_Company FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID WHERE orchestra.Year_of_Founded < 2003   OR orchestra.Year_of_Founded > 2003 
SELECT orchestra.Record_Company FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID WHERE orchestra.Year_of_Founded < 2003 INTERSECT   SELECT orchestra.Record_Company   FROM conductor   JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID   JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID   JOIN show ON show.Performance_ID = performance.Performance_ID   WHERE orchestra.Year_of_Founded > 2003 
SELECT count(*) FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID WHERE orchestra.Major_Record_Format = "CD"   OR orchestra.Major_Record_Format = "DVD" 
SELECT count(*) FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID WHERE orchestra.Major_Record_Format = "CD"   OR orchestra.Major_Record_Format = "DVD" 
SELECT orchestra.Year_of_Founded FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID WHERE show.If_first_show = 1 GROUP BY orchestra.Year_of_Founded HAVING count(*) > 1 
SELECT orchestra.Year_of_Founded FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID GROUP BY orchestra.Orchestra_ID HAVING count(*) > 1 
SELECT count(*) FROM highschooler 
SELECT count(*) FROM highschooler 
SELECT highschooler.name,        highschooler.grade FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON friend.student_id = likes.student_id 
SELECT highschooler.name,        highschooler.grade FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON friend.student_id = likes.student_id 
SELECT DISTINCT highschooler.grade FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON friend.student_id = likes.student_id 
SELECT highschooler.grade FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON friend.student_id = likes.student_id 
SELECT highschooler.grade FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON friend.student_id = likes.student_id WHERE highschooler.name = "Kyle" 
SELECT highschooler.grade FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON friend.student_id = likes.student_id WHERE highschooler.name = "Kyle" 
SELECT name FROM highschooler WHERE grade = 10 
SELECT name FROM highschooler WHERE grade = 10 
SELECT highschooler.id FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON friend.student_id = likes.student_id WHERE highschooler.name = "Kyle" 
SELECT highschooler.id FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON friend.student_id = likes.student_id WHERE highschooler.name = "Kyle" 
SELECT count(*) FROM highschooler WHERE grade = 9   OR grade = 10 
SELECT count(*) FROM highschooler WHERE grade = 9   OR grade = 10 
SELECT count(*),        grade FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON highschooler.id = likes.liked_id GROUP BY grade 
SELECT count(*),        grade FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON highschooler.id = likes.liked_id GROUP BY grade 
SELECT highschooler.grade FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON friend.student_id = likes.student_id GROUP BY highschooler.grade ORDER BY count(*) DESC LIMIT 1 
SELECT highschooler.grade FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON friend.student_id = likes.student_id GROUP BY highschooler.id ORDER BY count(*) DESC LIMIT 1 
SELECT DISTINCT highschooler.grade FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON friend.student_id = likes.student_id GROUP BY highschooler.grade HAVING count(*) >= 4 
SELECT DISTINCT highschooler.grade FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON friend.student_id = likes.student_id GROUP BY highschooler.grade HAVING count(*) >= 4 
SELECT highschooler.ID,        count(*) FROM highschooler JOIN friend ON highschooler.ID = friend.friend_id JOIN likes ON friend.student_id = likes.student_id GROUP BY highschooler.ID 
SELECT count(*),        highschooler.name FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON friend.student_id = likes.student_id GROUP BY highschooler.name 
SELECT highschooler.name,        count(*) FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON friend.student_id = likes.student_id GROUP BY highschooler.id 
SELECT highschooler.name,        count(*) FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON friend.student_id = likes.student_id GROUP BY highschooler.id 
SELECT highschooler.name FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON friend.student_id = likes.student_id GROUP BY highschooler.id ORDER BY count(*) DESC LIMIT 1 
SELECT highschooler.name FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON friend.student_id = likes.student_id GROUP BY highschooler.id ORDER BY count(*) DESC LIMIT 1 
SELECT name FROM highschooler WHERE ID IN     (SELECT liked_id      FROM likes      GROUP BY liked_id      HAVING count(*) >= 3) 
SELECT name FROM highschooler WHERE ID IN     (SELECT friend_id      FROM friend      GROUP BY friend_id      HAVING count(*) >= 3) 
SELECT DISTINCT highschooler.name FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON friend.student_id = likes.student_id WHERE highschooler.name = "Kyle" 
SELECT DISTINCT FRIEND.name FROM HIGHSCHOOLER JOIN FRIEND ON HIGHSCHOOLER.ID = FRIEND.friend_id JOIN Likes ON Likes.student_id = HIGHSCHOOLER.ID WHERE HIGHSCHOOLER.name = "Kyle" 
SELECT count(*) FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON friend.student_id = likes.student_id WHERE highschooler.name = "Kyle" 
SELECT count(*) FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON likes.student_id = highschooler.id WHERE highschooler.name = "Kyle" 
SELECT DISTINCT ID FROM HIGHSCHOOLER WHERE ID NOT IN     (SELECT friend_id      FROM FRIEND      JOIN Likes ON FRIEND.student_id = Likes.student_id) 
SELECT DISTINCT highschooler.id FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON friend.student_id = likes.student_id WHERE friend.student_id NOT IN     (SELECT highschooler.id      FROM highschooler      JOIN friend ON highschooler.id = friend.friend_id      JOIN likes ON friend.student_id = likes.student_id      WHERE friend.student_id NOT IN          (SELECT highschooler.id           FROM highschooler           JOIN friend ON highschooler.id = friend.friend_id           JOIN likes ON friend.student_id = likes.student_id           WHERE friend.student_id NOT IN               (SELECT highschooler.id                FROM highschooler                JOIN friend ON highschooler.id = friend.friend_id                JOIN likes ON friend.student_id = likes.student_id                WHERE friend.student_id NOT IN                    (SELECT highschooler.id                     FROM highschool
SELECT name FROM highschooler WHERE id NOT IN     (SELECT friend_id      FROM friend      JOIN likes ON friend.id = likes.liked_id      WHERE likes.student_id = 1) 
SELECT name FROM highschooler WHERE id NOT IN     (SELECT friend_id      FROM friend      JOIN likes ON friend.id = likes.liked_id      WHERE likes.student_id = 1) 
SELECT highschooler.id FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON friend.student_id = likes.student_id WHERE friend.friend_id IN     (SELECT highschooler.id      FROM highschooler      JOIN friend ON highschooler.id = friend.friend_id      JOIN likes ON friend.student_id = likes.student_id      WHERE likes.liked_id IN          (SELECT highschooler.id           FROM highschooler           JOIN friend ON highschooler.id = friend.friend_id           JOIN likes ON friend.student_id = likes.student_id           WHERE friend.friend_id IN               (SELECT highschooler.id                FROM highschooler                JOIN friend ON highschooler.id = friend.friend_id                JOIN likes ON friend.student_id = likes.student_id                WHERE likes.liked_id IN                    (SELECT highschooler.id                     FROM highschooler                 
SELECT highschooler.id FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON friend.student_id = likes.student_id WHERE friend.friend_id IN     (SELECT highschooler.id      FROM highschooler      JOIN friend ON highschooler.id = friend.friend_id      JOIN likes ON friend.student_id = likes.student_id      WHERE friend.friend_id IN          (SELECT highschooler.id           FROM highschooler           JOIN friend ON highschooler.id = friend.friend_id           JOIN likes ON friend.student_id = likes.student_id           WHERE friend.student_id IN               (SELECT highschooler.id                FROM highschooler                JOIN friend ON highschooler.id = friend.friend_id                JOIN likes ON friend.student_id = likes.student_id                WHERE friend.student_id IN                    (SELECT highschooler.id                     FROM highschooler                     JOIN friend ON
SELECT DISTINCT highschooler.name FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON friend.student_id = likes.student_id 
SELECT highschooler.name FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON friend.student_id = likes.student_id 
SELECT count(*),        highschooler.id FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON friend.student_id = likes.student_id GROUP BY highschooler.id 
SELECT count(*),        highschooler.id FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON friend.student_id = likes.student_id GROUP BY highschooler.id 
SELECT highschooler.name,        COUNT(*) FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON friend.student_id = likes.student_id GROUP BY highschooler.id 
SELECT highschooler.name,        count(*) FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON friend.student_id = likes.student_id GROUP BY highschooler.id 
SELECT highschooler.name FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON friend.student_id = likes.student_id GROUP BY highschooler.id ORDER BY count(*) DESC LIMIT 1 
SELECT highschooler.name FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON friend.student_id = likes.student_id GROUP BY highschooler.id ORDER BY count(*) DESC LIMIT 1 
SELECT name FROM highschooler WHERE ID IN     (SELECT liked_id      FROM likes      GROUP BY liked_id      HAVING count(*) >= 2) 
SELECT name FROM highschooler WHERE ID IN     (SELECT liked_id      FROM likes      GROUP BY liked_id      HAVING count(*) >= 2) 
SELECT highschooler.name FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON friend.student_id = likes.student_id WHERE highschooler.grade > 5 GROUP BY highschooler.id HAVING count(*) >= 2 
SELECT highschooler.name FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON friend.student_id = likes.student_id WHERE highschooler.grade > 5 GROUP BY highschooler.id HAVING count(*) >= 2 
SELECT count(*) FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON likes.student_id = highschooler.id WHERE highschooler.name = "Kyle" 
SELECT count(DISTINCT likes.liked_id) FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON friend.student_id = likes.student_id WHERE highschooler.name = "Kyle" 
SELECT avg(grade) FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON likes.student_id = highschooler.id 
SELECT avg(grade) FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON likes.student_id = highschooler.id 
SELECT min(grade) FROM highschooler WHERE id NOT IN     (SELECT student_id      FROM friend      UNION      SELECT liked_id      FROM likes) 
SELECT min(grade) FROM highschooler WHERE id NOT IN     (SELECT friend_id      FROM friend      JOIN likes ON friend.id = likes.liked_id      WHERE likes.student_id = 1) 
SELECT state FROM Breeds UNION SELECT state FROM Treatments 
SELECT DISTINCT state FROM Breeds UNION SELECT DISTINCT state FROM Professionals 
SELECT avg(age) FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Professionals ON Treatments.professional_id = Professionals.professional_id WHERE Breeds.breed_name = "Labrador"   AND Charges.charge_amount > 0   AND Sizes.size_description = "Small"   AND Treatments.treatment_type_code = "Penicillin" 
SELECT avg(Dogs.age) FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Professionals ON Treatments.professional_id = Professionals.professional_id JOIN Treatments ON Treatments.treatment_id = Professionals.professional_id WHERE Breeds.breed_name = "Shih Tzu"   AND Charges.charge_amount > 0   AND Sizes.size_description = "Small"   AND Treatments.treatment_type_code = "Soft-top carpet cleaning" GROUP BY Dogs.dog_id 
SELECT Professionals.professional_id,        Professionals.last_name,        Professionals.cell_number FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Breeds.size_code = Sizes.size_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Professionals ON Treatments.professional_id = Professionals.professional_id WHERE Breeds.breed_name = "American Pit Bull Terrier"   AND Sizes.size_description = "Small"   AND Treatments.treatment_type_code = "Shampoo"   AND Treatments.date_of_treatment > "2018-01-01"   AND Treatments.date_of_treatment < "2018-02-01"   AND Professionals.state = "Indiana" UNION SELECT Professionals.professional
SELECT Professionals.professional_id,        Professionals.last_name,        Treatments.cell_phone FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Breeds.size_code = Sizes.size_code JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code JOIN Owners ON Owners.owner_id = Treatments.owner_id JOIN Professionals ON Professionals.professional_id = Owners.professional_id WHERE Owners.state = "Indiana"   OR Treatments.treatment_type_code = "Treatment 1"   OR Treatments.treatment_type_code = "Treatment 2"   OR Treatments.treatment_type_code = "Treatment 3"   OR Treatments.treatment_type_code
SELECT Dogs.name FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Professionals ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.cost_of_treatment > 1000 EXCEPT SELECT Dogs.name FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Professionals ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.cost_of_treatment < 1000 
SELECT Dogs.name FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Professionals ON Professionals.professional_id = Treatments.professional_id WHERE Professionals.first_name = "John"   AND Professionals.last_name = "Doe"   AND Treatments.cost_of_treatment > 1000 
SELECT DISTINCT professionals.first_name,                 dogs.first_name FROM breeds JOIN charges ON breeds.breed_code = charges.breed_code JOIN sizes ON breeds.size_code = sizes.size_code JOIN treatments ON treatments.dog_id = dogs.dog_id JOIN professionals ON professionals.owner_id = dogs.owner_id JOIN dogs ON dogs.dog_id = professionals.dog_id JOIN treatments ON treatments.dog_id = dogs.dog_id WHERE breeds.first_name NOT IN     (SELECT dogs.first_name      FROM breeds      JOIN charges ON breeds.breed_code = charges.breed_code      JOIN sizes ON breeds.size_code = sizes.size_code      JOIN treatments ON treatments.dog_id = breeds.dog_id      JOIN professionals ON professionals.owner_id = breeds.owner_id      JOIN dogs ON dogs.dog_id = professionals.dog_id      JOIN treatments ON
SELECT DISTINCT professionals.first_name,                 owners.first_name FROM breeds JOIN charges ON breeds.breed_code = charges.breed_code JOIN sizes ON charges.size_code = sizes.size_code JOIN treatments ON treatments.treatment_type_code = Treatment_Types.treatment_type_code JOIN dogs ON dogs.dog_id = treatments.dog_id JOIN professionals ON dogs.professional_id = professionals.professional_id JOIN owners ON dogs.owner_id = owners.owner_id WHERE professionals.first_name!= dogs.first_name   AND owners.first_name!= dogs.first_name 
SELECT Professionals.professional_id,        Professionals.role_code,        Professionals.email_address FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Breeds.size_code = Sizes.size_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Professionals ON Treatments.professional_id = Professionals.professional_id WHERE Breeds.breed_name = "Golden Retriever" EXCEPT SELECT Professionals.professional_id,        Professionals.role_code,        Professionals.email_address FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Breeds.size_code = Sizes.size_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Professionals ON Treatments.prof
SELECT professionals.professional_id,        professionals.role_code,        professionals.email_address FROM breeds JOIN charges ON breeds.charge_id = charges.charge_id JOIN sizes ON charges.size_code = sizes.size_code JOIN treatments ON treatments.dog_id = dogs.dog_id JOIN professionals ON treatments.professional_id = professionals.professional_id WHERE professionals.role_code = "none" 
SELECT OWNERS.owner_id,        OWNERS.first_name,        OWNERS.last_name FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Professionals ON Professionals.professional_id = Treatments.professional_id WHERE Breeds.breed_name = "Shih Tzu" GROUP BY OWNERS.owner_id ORDER BY count(*) DESC LIMIT 1; 
SELECT OWNERS.owner_id,        OWNERS.first_name,        OWNERS.last_name FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Professionals ON Professionals.professional_id = Treatments.professional_id GROUP BY OWNERS.owner_id ORDER BY count(*) DESC LIMIT 1 
SELECT Professionals.professional_id,        Professionals.role_code,        Professionals.first_name FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Breeds.size_code = Sizes.size_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Professionals ON Treatments.professional_id = Professionals.professional_id GROUP BY Professionals.professional_id HAVING COUNT(*) >= 2 
SELECT Professionals.professional_id,        Treatments.professional_id,        Professionals.first_name FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Breeds.size_code = Sizes.size_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Professionals ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id HAVING count(*) >= 2 
SELECT breeds.breed_name FROM breeds JOIN dogs ON breeds.breed_code = dogs.breed_code JOIN professionals ON dogs.owner_id = professionals.owner_id JOIN treatments ON treatments.dog_id = dogs.dog_id WHERE breeds.breed_name =     (SELECT breed_name      FROM breeds      GROUP BY breed_name      ORDER BY count(*) DESC      LIMIT 1) 
SELECT Breeds.breed_name FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Professionals ON Treatments.professional_id = Professionals.professional_id GROUP BY Breeds.breed_name ORDER BY count(*) DESC LIMIT 1; 
SELECT OWNERS.owner_id,        OWNERS.last_name FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Sizes.size_code = Charges.size_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Professionals ON Professionals.professional_id = Treatments.professional_id WHERE Breeds.breed_name = "Shih Tzu" GROUP BY OWNERS.owner_id ORDER BY sum(Treatments.cost_of_treatment) DESC LIMIT 1 
SELECT OWNERS.owner_id,        OWNERS.last_name FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Professionals ON Professionals.professional_id = Treatments.professional_id JOIN OWNERS ON OWNERS.owner_id = Professionals.professional_id WHERE Breeds.breed_name = "Shih Tzu" GROUP BY OWNERS.owner_id ORDER BY sum(Treatments.cost_of_treatment) DESC LIMIT 1 
SELECT Treatment_Types.treatment_type_description FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.treatment_type_code = Sizes.size_code JOIN Owners ON Treatments.owner_id = Owners.owner_id JOIN Professionals ON Treatments.professional_id = Professionals.professional_id WHERE Breeds.first_name = "Dog"   AND Breeds.last_name = "Brown"   AND Charges.amount =     (SELECT min(charges.amount)      FROM charges      JOIN sizes ON charges.size_code = sizes.size_code      JOIN treatments ON treatments.treatment_type_code = sizes.size_code      JOIN owners ON treatments.owner_id = owners.owner_id      JOIN professionals ON treatments.prof
SELECT Treatment_Types.treatment_type_description FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.treatment_type_code = Sizes.size_code JOIN Owners ON Treatments.owner_id = Owners.owner_id JOIN Professionals ON Treatments.professional_id = Professionals.professional_id GROUP BY Treatment_Types.treatment_type_description ORDER BY sum(Treatments.cost_of_treatment) LIMIT 1 
SELECT OWNERS.owner_id,        OWNERS.zip_code FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Professionals ON Professionals.professional_id = Treatments.professional_id WHERE Breeds.breed_name = "Labrador"   AND Charges.charge_amount =     (SELECT MAX (charge_amount)      FROM charges)   AND Sizes.size_description = "Small"   AND Treatments.treatment_type_code = "Vaccination" 
SELECT OWNERS.owner_id,        OWNERS.zip_code FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Professionals ON Professionals.professional_id = Treatments.professional_id JOIN OWNERS ON OWNERS.owner_id = Professionals.professional_id GROUP BY OWNERS.owner_id ORDER BY sum(Treatments.cost_of_treatment) DESC LIMIT 1 
SELECT Professionals.professional_id,        Professionals.cell_number FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Breeds.size_code = Sizes.size_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Professionals ON Treatments.professional_id = Professionals.professional_id GROUP BY Professionals.professional_id HAVING COUNT(*) >= 2 
SELECT Professionals.professional_id,        Treatments.cell_phone FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Breeds.size_code = Sizes.size_code JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code JOIN Owners ON Owners.owner_id = Treatments.owner_id JOIN Professionals ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id HAVING count(*) >= 2 
SELECT Professionals.first_name,        Professionals.last_name FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.treatment_type_code = Sizes.size_code JOIN Owners ON Treatments.dog_id = Owners.dog_id JOIN Professionals ON Professionals.professional_id = Owners.professional_id WHERE Treatments.cost_of_treatment <     (SELECT avg(cost_of_treatment)      FROM Treatments) 
SELECT Professionals.first_name,        Professionals.last_name FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.treatment_type_code = Sizes.size_code JOIN Professionals ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.first_name,          Professionals.last_name HAVING avg(Treatments.cost_of_treatment) < 
SELECT Treatments.date_of_treatment,        Professionals.first_name FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Professionals ON Treatments.professional_id = Professionals.professional_id WHERE Breeds.breed_name = "Shih Tzu"   AND Sizes.size_description = "Small" 
SELECT Treatments.date_of_treatment,        Professionals.first_name FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Professionals ON Treatments.professional_id = Professionals.professional_id WHERE Breeds.breed_name = "Shih Tzu"   AND Sizes.size_description = "Small"   AND Treatments.treatment_type_code = "Shampoo" 
SELECT Treatments.cost_of_treatment,        Treatment_Types.treatment_type_description FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.treatment_id = Treatments.treatment_id JOIN Owners ON Treatments.owner_id = Owners.owner_id JOIN Professionals ON Treatments.professional_id = Professionals.professional_id WHERE Breeds.breed_name = "Shih Tzu"   AND Sizes.size_description = "Small"   AND Treatments.treatment_type_code = "Soft-top carpet cleaning" 
SELECT Treatments.cost_of_treatment,        Treatment_Types.treatment_type_description FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.treatment_id = Treatments.treatment_id JOIN Owners ON Treatments.owner_id = Owners.owner_id JOIN Professionals ON Treatments.professional_id = Professionals.professional_id WHERE Breeds.breed_name = "Shih Tzu"   AND Sizes.size_description = "Small"   AND Treatments.treatment_type_code = "Soft-top carpet cleaning" 
SELECT OWNERS.first_name,        OWNERS.last_name,        Dogs.size_code FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Professionals ON Professionals.professional_id = Treatments.professional_id WHERE Breeds.breed_name = "Shih Tzu"   AND Sizes.size_description = "Small"   AND Treatments.treatment_type_code = "Soak" 
SELECT OWNERS.first_name,        OWNERS.last_name,        DOGS.size_code FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Professionals ON Professionals.professional_id = Treatments.professional_id WHERE Breeds.breed_name = "Shih Tzu"   AND Sizes.size_description = "Small" 
SELECT OWNERS.first_name,        DOGS.name FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.dog_id = DOGS.dog_id JOIN Professionals ON Treatments.professional_id = Professionals.professional_id WHERE Breeds.breed_name = "Shih Tzu"   AND Sizes.size_description = "Small"   AND Treatments.treatment_type_code = "Soak in Water" 
SELECT OWNERS.first_name,        Dogs.name FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Professionals ON Professionals.professional_id = Treatments.professional_id WHERE Breeds.breed_name = "Shih Tzu"   AND Charges.charge_amount > 0   AND Sizes.size_description = "Small"   AND Treatments.treatment_type_code = "Soak" 
SELECT dogs.name,        treatments.date_of_treatment FROM breeds JOIN dogs ON breeds.breed_code = dogs.breed_code JOIN professionals ON dogs.owner_id = professionals.owner_id JOIN treatments ON treatments.dog_id = dogs.dog_id WHERE breeds.breed_name = "Rare" GROUP BY dogs.name ORDER BY count(*) DESC LIMIT 1 
SELECT dogs.name,        treatments.date_of_treatment FROM breeds JOIN dogs ON breeds.breed_code = dogs.breed_code JOIN professionals ON dogs.owner_id = professionals.owner_id JOIN treatments ON treatments.dog_id = dogs.dog_id WHERE breeds.breed_name = "Rare" 
SELECT dogs.owner_first_name,        dogs.name FROM breeds JOIN charges ON breeds.breed_code = charges.breed_code JOIN sizes ON charges.size_code = sizes.size_code JOIN treatment_types ON charges.treatment_type_code = treatment_types.treatment_type_code JOIN dogs ON dogs.dog_id = treatment_types.dog_id JOIN professionals ON dogs.professional_id = professionals.professional_id WHERE professionals.city = "Virginia"   AND dogs.owner_first_name = "Bob"   AND dogs.owner_last_name = "Smith"; 
SELECT OWNERS.first_name,        DOGS.name FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.treatment_type_code = Treatments.treatment_type_code JOIN OWNERS ON OWNERS.owner_id = Treatments.owner_id WHERE OWNERS.state = "Virginia" 
SELECT Dogs.date_arrived,        Dogs.date_departed FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Professionals ON Treatments.professional_id = Professionals.professional_id WHERE Breeds.breed_name = "Labrador"   AND Sizes.size_description = "Small"   AND Treatments.treatment_type_code = "Shampoo" 
SELECT Dogs.date_arrived,        Dogs.date_departed FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Professionals ON Treatments.professional_id = Professionals.professional_id JOIN Dogs ON Professionals.dog_id = Dogs.dog_id WHERE Breeds.breed_name = "Shih Tzu"   AND Sizes.size_description = "Small"   AND Treatments.treatment_type_code = "Soft-top carpet cleaning" 
SELECT OWNERS.last_name FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Professionals ON Professionals.professional_id = Treatments.professional_id WHERE Dogs.age =     (SELECT min(age)      FROM Dogs)   AND Breeds.breed_name = "Shih Tzu"   AND Charges.charge_amount = 100   AND Sizes.size_description = "Small"   AND Treatments.treatment_type_code = "Pet Food"   AND Professionals.professional_id = 1 
SELECT dogs.owner_name FROM breeds JOIN charges ON breeds.breed_code = charges.breed_code JOIN sizes ON charges.size_code = sizes.size_code JOIN treatment_types ON charges.treatment_type_code = treatment_types.treatment_type_code JOIN dogs ON dogs.dog_id = treatment_types.dog_id WHERE dogs.age =     (SELECT min(age)      FROM dogs) 
SELECT Professionals.email_address FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Breeds.size_code = Sizes.size_code JOIN Treatments ON Treatments.treatment_type_code = Treatments.treatment_type_code JOIN Owners ON Treatments.owner_id = Owners.owner_id JOIN Professionals ON Professionals.professional_id = Treatments.professional_id WHERE Owners.state = "Hawaii"   OR Owners.state = "Wisconsin" 
SELECT Professionals.email_address FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Breeds.size_code = Sizes.size_code JOIN Treatments ON Treatments.treatment_type_code = Treatments.treatment_type_code JOIN Owners ON Treatments.owner_id = Owners.owner_id JOIN Professionals ON Professionals.professional_id = Treatments.professional_id WHERE Owners.state = "Hawaii"   OR Owners.state = "Wisconsin" 
SELECT DISTINCT dogs.date_arrived,                 dogs.date_departed FROM breeds JOIN charges ON breeds.breed_code = charges.breed_code JOIN sizes ON breeds.size_code = sizes.size_code JOIN treatments ON treatments.dog_id = dogs.dog_id JOIN professionals ON treatments.professional_id = professionals.professional_id JOIN dogs ON dogs.dog_id = treatments.dog_id JOIN professions ON dogs.professional_id = professions.professional_id WHERE breeds.breed_name = "Shih Tzu"   AND sizes.size_description = "Small"   AND treatments.treatment_type_code = "Soft-top carpet cleaning"   AND professionals.first_name = "Jane"   AND professionals.last_name = "Doe"; 
SELECT Dogs.date_arrived,        Dogs.date_departed FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Breeds.size_code = Sizes.size_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Professionals ON Professionals.professional_id = Treatments.professional_id WHERE Breeds.breed_name = "Labrador"   AND Sizes.size_description = "Small"   AND Treatments.treatment_type_code = "Shampoo" 
SELECT count(*) FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Professionals ON Treatments.professional_id = Professionals.professional_id JOIN Treatments ON Treatments.treatment_id = Treatments.treatment_id WHERE Breeds.breed_name = "Labrador"   AND Charges.charge_amount > 0   AND Sizes.size_description = "Small"   AND Treatments.treatment_type_code = "Soak in Water" 
SELECT count(*) FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.treatment_type_code = Treatments.treatment_type_code JOIN Owners ON Treatments.dog_id = Owners.dog_id JOIN Professionals ON Treatments.professional_id = Professionals.professional_id WHERE Breeds.breed_name = "Shih Tzu"   AND Charges.charge_amount > 0   AND Sizes.size_description = "Small"   AND Treatments.treatment_type_code = "Soft-food"   AND Owners.first_name = "Jane"   AND Owners.last_name = "Doe"   AND Professionals.first_name = "John"   AND Professionals.last_name = "Smith"; 
SELECT count(DISTINCT professionals.professionals_id) FROM breeds JOIN charges ON breeds.breed_code = charges.breed_code JOIN sizes ON charges.size_code = sizes.size_code JOIN treatments ON treatments.dog_id = dogs.dog_id JOIN professionals ON treatments.professional_id = professionals.professional_id JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code WHERE breeds.breed_name = "Shih Tzu"   AND sizes.size_description = "Small"   AND treatments.date_of_treatment > "2015-01-01"   AND treatments.cost_of_treatment > 0   AND professionals.first_name = "Jenny"   AND professionals.last_name = "Smith"; 
SELECT count(DISTINCT professionals.professional_id) FROM breeds JOIN charges ON breeds.breed_code = charges.breed_code JOIN sizes ON charges.size_code = sizes.size_code JOIN treatments ON treatments.dog_id = dogs.dog_id JOIN professionals ON treatments.professional_id = professionals.professional_id WHERE breeds.breed_name = "Shih Tzu"   AND sizes.size_description = "Small"   AND charges.charge_amount > 0   AND charges.charge_type = "Regular" GROUP BY professionals.professional_id 
SELECT Professionals.professionals.first_name,        Professionals.professionals.last_name,        Professionals.professionals.city,        Professionals.professionals.state FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Breeds.size_code = Sizes.size_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Professionals ON Professionals.professional_id = Treatments.professional_id WHERE Breeds.breed_name LIKE '%West%'   AND Professionals.professionals.city LIKE '%West%' 
SELECT professionals.first_name,        professionals.last_name,        professionals.city,        professionals.state FROM breeds JOIN charges ON breeds.breed_code = charges.breed_code JOIN sizes ON charges.size_code = sizes.size_code JOIN treatments ON treatments.dog_id = dogs.dog_id JOIN professionals ON treatments.professional_id = professionals.professional_id WHERE professionals.city LIKE '%West%' 
SELECT OWNERS.first_name,        OWNERS.last_name,        OWNERS.email_address FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Professionals ON Professionals.professional_id = Treatments.professional_id WHERE Sizes.state LIKE '%North%' 
SELECT OWNERS.first_name,        OWNERS.last_name,        OWNERS.email_address FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Professionals ON Professionals.professional_id = Treatments.professional_id WHERE Sizes.state LIKE '%North%' 
SELECT count(*) FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id WHERE Dogs.age <     (SELECT avg(age)      FROM Dogs) 
SELECT count(*) FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id WHERE Dogs.age <     (SELECT avg(age)      FROM Dogs) 
SELECT Treatments.cost_of_treatment FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Professionals ON Treatments.professional_id = Professionals.professional_id ORDER BY Treatments.date_of_treatment DESC LIMIT 1 
SELECT Treatments.cost_of_treatment FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Professionals ON Treatments.professional_id = Professionals.professional_id JOIN Treatments ON Treatments.treatment_id = Professionals.professional_id WHERE Breeds.breed_name = "Shih Tzu"   AND Charges.charge_amount >     (SELECT min(charges.charge_amount)      FROM Breeds      JOIN Charges ON Breeds.breed_code = Charges.breed_code      JOIN Sizes ON Charges.size_code = Sizes.size_code      JOIN Treatments ON Treatments.dog_id = Dogs.dog_id      JOIN Professionals ON Treatments.prof
SELECT count(*) FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.treatment_type_code = Treatments.treatment_type_code JOIN Owners ON Treatments.owner_id = Owners.owner_id JOIN Professionals ON Treatments.professional_id = Professionals.professional_id WHERE Breeds.breed_name = "Husky"   AND Charges.amount < 1000   AND Sizes.size_description = "Small"   AND Treatments.date_of_treatment < "2015-01-01"   AND Owners.first_name = "Jane"   AND Owners.last_name = "Doe"   AND Professionals.first_name = "John"   AND Professionals.last_name
SELECT count(*) FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Professionals ON Treatments.professional_id = Professionals.professional_id WHERE Breeds.breed_name NOT IN     (SELECT Breeds.breed_name      FROM Breeds      JOIN Charges ON Breeds.breed_code = Charges.breed_code      JOIN Sizes ON Charges.size_code = Sizes.size_code      JOIN Treatments ON Treatments.dog_id = Dogs.dog_id      JOIN Professionals ON Treatments.professional_id = Professionals.professional_id      WHERE Breeds.breed_name = "American Staffordshire Terrier") 
SELECT count(*) FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.treatment_type_code = Treatments.treatment_type_code JOIN Owners ON Treatments.dog_id = Owners.dog_id WHERE Owners.owner_id NOT IN     (SELECT owner_id      FROM Dogs) 
SELECT count(*) FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.treatment_type_code = Treatments.treatment_type_code JOIN Owners ON Treatments.dog_id = Owners.dog_id WHERE Owners.owner_id NOT IN     (SELECT owner_id      FROM Dogs) 
;
SELECT count(*) FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.treatment_type_code = Treatments.treatment_type_code JOIN Owners ON Treatments.dog_id = Owners.dog_id JOIN Professionals ON Professionals.professional_id = Treatments.professional_id WHERE Breeds.breed_name = "Husky"   AND Charges.charge_amount = 0   AND Sizes.size_description = "Small"   AND Treatments.treatment_type_code = "Vaccination"   AND Owners.owner_id = 1   AND Professionals.professional_id = 1 
SELECT dogs.name,        dogs.age,        dogs.weight FROM breeds JOIN charges ON breeds.breed_code = charges.breed_code JOIN sizes ON charges.size_code = sizes.size_code JOIN treatment_types ON charges.treatment_type_code = treatment_types.treatment_type_code JOIN dogs ON dogs.dog_id = treatment_types.dog_id JOIN professionals ON dogs.professional_id = professionals.professional_id WHERE dogs.abandoned = 1 
SELECT dogs.name,        dogs.age,        dogs.weight FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.dog_id = dogs.dog_id JOIN Professionals ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.abandoned_yn = 1 
SELECT avg(age) FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Professionals ON Professionals.professional_id = Treatments.professional_id WHERE Breeds.breed_name = "Labrador"   AND Charges.charge_amount = 100   AND Sizes.size_description = "Large"   AND Treatments.treatment_type_code = "Vaccination"   AND Professionals.professional_id = 1 
SELECT avg(age) FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Professionals ON Treatments.professional_id = Professionals.professional_id WHERE Breeds.breed_name = "Labrador"   AND Charges.charge_amount > 0   AND Sizes.size_description = "Large"   AND Treatments.treatment_type_code = "Vaccination"   AND Professionals.professional_id = 1 
SELECT dogs.age FROM breeds JOIN charges ON breeds.breed_code = charges.breed_code JOIN sizes ON charges.size_code = sizes.size_code JOIN treatment_types ON charges.treatment_type_code = treatment_types.treatment_type_code JOIN professionals ON treatment_types.professional_id = professionals.professional_id JOIN dogs ON dogs.dog_id = professionals.professional_id WHERE dogs.age =     (SELECT max(age)      FROM dogs) 
SELECT dogs.age FROM breeds JOIN charges ON breeds.breed_code = charges.breed_code JOIN sizes ON charges.size_code = sizes.size_code JOIN treatment_types ON charges.treatment_type_code = treatment_types.treatment_type_code JOIN professionals ON treatment_types.professional_id = professionals.professional_id JOIN dogs ON professionals.dog_id = dogs.dog_id WHERE dogs.age =     (SELECT max(age)      FROM dogs) 
SELECT charges.charge_type,        charges.charge_amount FROM breeds JOIN charges ON breeds.breed_code = charges.breed_code JOIN sizes ON sizes.size_code = charges.size_code JOIN treatments ON treatments.dog_id = dogs.dog_id JOIN professionals ON professionals.professional_id = dogs.professional_id JOIN treatments ON treatments.dog_id = dogs.dog_id JOIN charges ON charges.dog_id = dogs.dog_id JOIN sizes ON sizes.dog_id = dogs.dog_id WHERE breeds.breed_name = "Shih Tzu"   AND sizes.size_description = "Small" GROUP BY charges.charge_type 
SELECT charges.charge_type,        charges.charge_amount FROM breeds JOIN charges ON breeds.breed_code = charges.breed_code JOIN sizes ON sizes.size_code = charges.size_code JOIN treatments ON treatments.dog_id = dogs.dog_id JOIN professionals ON treatments.professional_id = professionals.professional_id JOIN charges ON treatments.charge_id = charges.charge_id WHERE breeds.breed_name = "Shih Tzu"   AND sizes.size_description = "Small"   AND treatments.treatment_type_code = "Soak"   AND professionals.first_name = "Jane"   AND professionals.last_name = "Doe"; 
SELECT Treatments.cost_of_treatment FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.treatment_type_code = Sizes.size_code JOIN Owners ON Treatments.dog_id = Owners.dog_id JOIN Professionals ON Treatments.professional_id = Professionals.professional_id WHERE Breeds.breed_name = "Shih Tzu"   AND Charges.charge_amount =     (SELECT max(charge_amount)      FROM Charges)   AND Sizes.size_description = "Small"   AND Treatments.treatment_type_code = "Shampoo"   AND Owners.first_name = "Jane"   AND Owners.last_name = "Doe"   AND Professionals.first_name =
SELECT charges.charge_amount FROM breeds JOIN charges ON breeds.breed_code = charges.breed_code JOIN sizes ON sizes.size_code = charges.size_code JOIN treatments ON treatments.treatment_type_code = charges.treatment_type_code JOIN professionals ON treatments.professional_id = professionals.professional_id JOIN dogs ON dogs.dog_id = professionals.professional_id WHERE breeds.breed_name = "American Pit Bull Terrier"   AND sizes.size_description = "Small"   AND treatments.treatment_type_code = "Shampoo" ORDER BY charges.charge_amount DESC LIMIT 1 
SELECT Professionals.email_address,        Professionals.cell_number,        Professionals.home_phone FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Breeds.size_code = Sizes.size_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Professionals ON Treatments.professional_id = Professionals.professional_id WHERE Breeds.breed_name = "Shih Tzu"   AND Sizes.size_description = "Small"   AND Treatments.treatment_type_code = "Soft-pastel" 
SELECT Professionals.email_address,        Professionals.cell_number,        Professionals.home_phone FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Breeds.size_code = Sizes.size_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Professionals ON Treatments.professional_id = Professionals.professional_id WHERE Breeds.breed_name = "Labrador"   AND Sizes.size_description = "Small"   AND Treatments.treatment_type_code = "Shampoo" 
SELECT Breeds.breed_name,        Sizes.size_description FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Professionals ON Professionals.professional_id = Treatments.professional_id WHERE Breeds.breed_name IN     (SELECT Breeds.breed_name      FROM Breeds      JOIN Charges ON Breeds.breed_code = Charges.breed_code      JOIN Sizes ON Charges.size_code = Sizes.size_code      JOIN Treatments ON Treatments.dog_id = Dogs.dog_id      JOIN Professionals ON Professionals.professional_id = Treatments.professional_id      WHERE Breeds.breed_name IN          (SELECT Breeds.breed_name           FROM Breeds
SELECT Breeds.breed_name,        Sizes.size_description FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Professionals ON Professionals.professional_id = Treatments.professional_id WHERE Breeds.breed_name IN     (SELECT Breeds.breed_name      FROM Breeds      JOIN Charges ON Breeds.breed_code = Charges.breed_code      JOIN Sizes ON Charges.size_code = Sizes.size_code      JOIN Treatments ON Treatments.dog_id = Dogs.dog_id      JOIN Professionals ON Professionals.professional_id = Treatments.professional_id      WHERE Breeds.breed_name IN          (SELECT Breeds.breed_name           FROM Breeds
SELECT Professionals.first_name,        Treatments.treatment_type_description FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.treatment_type_code = Sizes.size_code JOIN Owners ON Treatments.dog_id = Owners.dog_id JOIN Professionals ON Treatments.professional_id = Professionals.professional_id WHERE Breeds.breed_name = "Shih Tzu"   AND Sizes.size_description = "Small"   AND Treatments.treatment_type_code = "Soft-top carpet cleaning"   AND Professionals.first_name = "Jane"   AND Professionals.last_name = "Doe"; 
SELECT Professionals.first_name,        Treatments.treatment_type_description FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatments ON Treatments.treatment_type_code = Sizes.size_code JOIN Owners ON Treatments.dog_id = Owners.dog_id JOIN Professionals ON Professionals.professional_id = Treatments.professional_id WHERE Breeds.breed_name = "Shih Tzu"   AND Sizes.size_description = "Small"   AND Treatments.treatment_type_code = "Soft-top carpet cleaning"   AND Professionals.first_name = "Jane"   AND Professionals.last_name = "Doe"; 
SELECT count(*) FROM singer 
SELECT count(*) FROM singer 
SELECT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID ORDER BY singer.Net_Worth_Millions ASC 
SELECT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID ORDER BY singer.Net_Worth_Millions ASC 
SELECT singer.birth_year,        singer.citizenship FROM singer JOIN song ON singer.singer_id = song.singer_id 
SELECT singer.birth_year,        singer.citizenship FROM singer JOIN song ON singer.singer_id = song.singer_id 
SELECT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE singer.Citizenship!= "France" 
SELECT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE singer.Citizenship!= "French" 
SELECT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE singer.Birth_Year = 1948   OR singer.Birth_Year = 1949 
SELECT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE singer.Birth_Year = 1948   OR singer.Birth_Year = 1949 
SELECT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID ORDER BY singer.Net_Worth_Millions DESC LIMIT 1 
SELECT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID ORDER BY singer.Net_Worth_Millions DESC LIMIT 1 
SELECT singer.Citizenship,        COUNT(*) FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Citizenship 
SELECT singer.Citizenship,        COUNT(*) FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Citizenship 
SELECT singer.Citizenship FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Citizenship ORDER BY count(*) DESC LIMIT 1 
SELECT singer.Citizenship FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Citizenship ORDER BY count(*) DESC LIMIT 1 
SELECT singer.Citizenship,        max(singer.Net_Worth_Millions) FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Citizenship 
SELECT singer.citizenship,        max(singer.net_worth_millions) FROM singer JOIN song ON singer.singer_id = song.singer_id GROUP BY singer.citizenship 
SELECT song.Title,        singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID 
SELECT song.Title,        singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID 
SELECT DISTINCT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000 
SELECT DISTINCT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000 
SELECT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Singer_ID HAVING COUNT(*) > 1 
SELECT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Singer_ID HAVING count(*) > 1 
SELECT singer.Name,        sum(song.Sales) FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Singer_ID 
SELECT singer.Name,        sum(song.Sales) FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Name 
SELECT Name FROM singer WHERE Singer_ID NOT IN     (SELECT Singer_ID      FROM song) 
SELECT singer.Name FROM singer EXCEPT SELECT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID 
SELECT singer.Citizenship FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE singer.Birth_Year < 1945   OR singer.Birth_Year > 1955 
SELECT singer.Citizenship FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE singer.Birth_Year < 1945 INTERSECT   SELECT singer.Citizenship   FROM singer   JOIN song ON singer.Singer_ID = song.Singer_ID WHERE singer.Birth_Year > 1955 
SELECT count(*) FROM Ref_Feature_Types INNER JOIN Ref_Property_Types ON Ref_Feature_Types.feature_type_code = Ref_Property_Types.feature_type_code INNER JOIN Other_Available_Features ON Other_Available_Features.feature_id = Ref_Feature_Types.feature_id INNER JOIN Properties ON Properties.property_id = Other_Available_Features.property_id INNER JOIN Other_Property_Features ON Other_Property_Features.property_id = Properties.property_id WHERE Ref_Feature_Types.feature_type_description = "Room Count" 
SELECT Ref_Feature_Types.feature_type_name FROM Ref_Feature_Types JOIN Ref_Property_Types ON Ref_Feature_Types.feature_type_code = Ref_Property_Types.feature_type_code JOIN Other_Available_Features ON Other_Available_Features.feature_id = Ref_Feature_Types.feature_id WHERE Ref_Property_Types.property_type_code = "AirCon" 
SELECT Ref_Property_Types.property_type_description FROM Ref_Feature_Types JOIN Ref_Property_Types ON Ref_Feature_Types.feature_type_code = Ref_Property_Types.feature_type_code JOIN Other_Available_Features ON Other_Available_Features.feature_id = Ref_Property_Types.feature_type_code WHERE Ref_Property_Types.property_type_code = "Apartment" 
SELECT Other_Available_Features.property_name FROM Ref_Feature_Types JOIN Ref_Property_Types ON Ref_Feature_Types.feature_type_code = Ref_Property_Types.feature_type_code JOIN Other_Available_Features ON Other_Available_Features.feature_id = Ref_Property_Types.feature_type_code WHERE Ref_Property_Types.property_type_code = "House"   OR Ref_Property_Types.property_type_code = "Apartment"   AND Other_Available_Features.room_count > 1 
