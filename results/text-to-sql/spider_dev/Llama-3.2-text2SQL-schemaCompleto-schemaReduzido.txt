 SELECT count(*) FROM singer 
 SELECT count(*) FROM singer 
 SELECT name,        country,        age FROM singer ORDER BY age DESC 
 SELECT Name,        Country,        Age FROM singer ORDER BY Age DESC 
 SELECT avg(age),        min(age),        max(age) FROM singer WHERE country = 'France' 
 SELECT avg(age),        min(age),        max(age) FROM singer WHERE country = 'France' 
 SELECT Song_Name,        Song_release_year FROM singer ORDER BY Age LIMIT 1 
 SELECT Song_Name,        Song_release_year FROM singer ORDER BY Age LIMIT 1 
 SELECT DISTINCT Country FROM singer WHERE Age > 20 
 SELECT DISTINCT Country FROM singer WHERE Age > 20 
 SELECT Country,        COUNT(*) FROM singer GROUP BY Country 
 SELECT Country,        COUNT(*) FROM singer GROUP BY Country 
 SELECT Song_Name FROM singer WHERE Age >     (SELECT avg(Age)      FROM singer) 
 SELECT Song_Name FROM singer WHERE Age >     (SELECT avg(Age)      FROM singer) 
 SELECT LOCATION,        Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000 
 SELECT LOCATION,        name FROM stadium WHERE capacity BETWEEN 5000 AND 10000 
 SELECT max(capacity),        avg(capacity) FROM stadium 
 SELECT avg(capacity),        max(capacity) FROM stadium 
 SELECT name,        capacity FROM stadium ORDER BY avg(attendance) DESC LIMIT 1 
 SELECT name,        capacity FROM stadium ORDER BY avg(attendance) DESC LIMIT 1 
 SELECT count(*) FROM concert WHERE YEAR = 2014   OR YEAR = 2015 
 SELECT count(*) FROM concert WHERE YEAR = 2014   OR YEAR = 2015 
 SELECT stadium.Name,        count(*) FROM concert JOIN stadium ON concert.Stadium_ID = stadium.Stadium_ID GROUP BY concert.Stadium_ID 
 SELECT count(*),        Stadium.Name FROM concert JOIN stadium ON concert.Stadium_ID = stadium.Stadium_ID GROUP BY Stadium.Name 
 SELECT name,        capacity FROM stadium WHERE year >= 2014 GROUP BY name ORDER BY count(*) DESC LIMIT 1 
 SELECT name,        capacity FROM stadium WHERE capacity =     (SELECT max(capacity)      FROM stadium      WHERE YEAR > 2013) 
 SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1 
 SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1 
 SELECT name FROM stadium WHERE stadium_id NOT IN     (SELECT stadium_id      FROM concert) 
 SELECT name FROM stadium WHERE stadium_id NOT IN     (SELECT stadium_id      FROM concert) 
 SELECT Country FROM singer WHERE Age > 40   OR Age < 30 
 SELECT name FROM stadium EXCEPT SELECT stadium.name FROM concert JOIN stadium ON concert.stadium_id = stadium.stadium_id WHERE concert.year = 2014 
 SELECT name FROM stadium EXCEPT SELECT stadium.name FROM concert JOIN stadium ON concert.stadium_id = stadium.stadium_id WHERE concert.year = 2014 
 SELECT concert_name,        theme,        count(*) FROM singer_in_concert GROUP BY concert_name,          theme 
 SELECT concert_name,        theme,        count(*) FROM singer_in_concert GROUP BY concert_name 
 SELECT Name,        COUNT(*) FROM singer_in_concert GROUP BY Name 
 SELECT Singer.Name,        COUNT(*) FROM singer_in_concert JOIN singer ON singer_in_concert.Singer_ID = singer.Singer_ID GROUP BY singer.Name 
 SELECT singer.Name FROM singer_in_concert JOIN singer ON singer_in_concert.Singer_ID = singer.Singer_ID JOIN concert ON concert.concert_ID = singer_in_concert.concert_ID WHERE concert.year = 2014 
 SELECT singer.Name FROM singer_in_concert JOIN singer ON singer_in_concert.Singer_ID = singer.Singer_ID JOIN concert ON concert.concert_ID = singer_in_concert.concert_ID WHERE concert.year = 2014 
 SELECT singer.Name,        singer.Country FROM singer JOIN singer ON singer.Singer_ID = singer.Singer_ID WHERE singer.Song_Name LIKE '%Hey%'; 
 SELECT singer.Name,        singer.Country FROM singer JOIN singer ON singer.Singer_ID = singer.Singer_ID WHERE singer.Song_Name LIKE '%Hey%' 
 SELECT name,        LOCATION FROM stadium WHERE stadium_id IN     (SELECT stadium_id      FROM concert      WHERE YEAR = 2014 INTERSECT        SELECT stadium_id        FROM concert WHERE YEAR = 2015) 
 SELECT name,        LOCATION FROM stadium WHERE stadium_id IN     (SELECT stadium_id      FROM concert      WHERE YEAR = 2014 INTERSECT        SELECT stadium_id        FROM concert WHERE YEAR = 2015) 
 SELECT count(*) FROM concert WHERE capacity =     (SELECT max(capacity)      FROM stadium) 
 SELECT count(*) FROM concert WHERE stadium_id =     (SELECT stadium_id      FROM stadium      ORDER BY capacity DESC      LIMIT 1) 
 SELECT count(*) FROM Pets WHERE weight > 10 
 SELECT count(*) FROM Pets WHERE weight > 10 
 SELECT min(weight) FROM Pets WHERE pet_age =     (SELECT min(pet_age)      FROM Pets) 
 SELECT min(weight) FROM Pets WHERE pet_age =     (SELECT min(pet_age)      FROM Pets) 
 SELECT max(weight),        pettype FROM Pets GROUP BY pettype 
 SELECT max(weight),        pettype FROM Pets GROUP BY pettype 
 SELECT count(*) FROM Has_Pet WHERE StuID > 20 
 SELECT count(*) FROM Has_Pet WHERE StuID IN     (SELECT StuID      FROM Student      WHERE Age > 20) 
 SELECT count(*) FROM Has_Pet WHERE PetType = 'dog'   AND StuID = sex 
 SELECT count(*) FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.pettype = 'dog'   AND Student.sex = 'female' 
 SELECT count(DISTINCT pettype) FROM Pets 
 SELECT count(DISTINCT pettype) FROM Pets 
 SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE Has_Pet.PetType = 'Cat'   OR Has_Pet.PetType = 'Dog' 
 SELECT Student.Fname FROM Has_Pet JOIN Student ON Has_Pet.StuID = Student.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.pettype = 'Cat' INTERSECT   SELECT Student.Fname   FROM Has_Pet   JOIN Student ON Has_Pet.StuID = Student.StuID   JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.pettype = 'Dog' 
 SELECT Student.Fname FROM Has_Pet JOIN Student ON Has_Pet.StuID = Student.StuID WHERE Has_Pet.PetType = 'Cat' INTERSECT   SELECT Student.Fname   FROM Has_Pet   JOIN Student ON Has_Pet.StuID = Student.StuID WHERE Has_Pet.PetType = 'Dog' 
 SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE Has_Pet.PetType = 'Cat' INTERSECT   SELECT Student.Fname   FROM Student   JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE Has_Pet.PetType = 'Dog' 
 SELECT major,        age FROM student EXCEPT SELECT major,        age FROM student WHERE petid IN     (SELECT petid      FROM pets      WHERE pettype = 'cat') 
 SELECT major,        age FROM student EXCEPT SELECT major,        age FROM student WHERE petid IN     (SELECT petid      FROM has_pet) 
 SELECT StuID FROM Student EXCEPT SELECT StuID FROM Has_Pet WHERE PetID = 1 
 SELECT StuID FROM Student EXCEPT SELECT StuID FROM Has_Pet WHERE PetType = 'Cat' 
 SELECT Student.Fname,        Student.Age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE Has_Pet.PetID = 1 INTERSECT   SELECT Student.Fname,          Student.Age   FROM Student   JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE Has_Pet.PetID = 2 
 SELECT Student.Fname FROM Has_Pet JOIN Student ON Has_Pet.StuID = Student.StuID WHERE Has_Pet.PetType = 'dog' EXCEPT SELECT Student.Fname FROM Has_Pet JOIN Student ON Has_Pet.StuID = Student.StuID WHERE Has_Pet.PetType = 'cat' 
 SELECT pet_type,        weight FROM Pets ORDER BY pet_age LIMIT 1 
 SELECT pet_type,        weight FROM Pets ORDER BY pet_age LIMIT 1 
 SELECT PetID,        weight FROM Pets WHERE pet_age > 1 
 SELECT PetID,        weight FROM Pets WHERE pet_age > 1 
 SELECT avg(pet_age),        max(pet_age) FROM Pets 
 SELECT avg(pet_age),        max(pet_age),        pet_type FROM Pets GROUP BY pet_type 
 SELECT avg(weight),        pettype FROM Pets GROUP BY pettype 
 SELECT avg(weight),        pettype FROM Pets GROUP BY pettype 
 SELECT fname,        age FROM student WHERE stuid IN     (SELECT stuid      FROM has_pet) 
 SELECT DISTINCT Student.Fname,                 Student.Age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID 
 SELECT Has_Pet.PetID FROM Has_Pet JOIN Student ON Has_Pet.StuID = Student.StuID WHERE Student.LName = 'Smith' 
 SELECT Has_Pet.PetID FROM Has_Pet JOIN Student ON Has_Pet.StuID = Student.StuID WHERE Student.LName = 'Smith' 
 SELECT count(*),        StuID FROM Has_Pet GROUP BY StuID 
 SELECT StuID,        count(*) FROM Has_Pet GROUP BY StuID 
 SELECT fname,        sex FROM Student WHERE StuID IN     (SELECT StuID      FROM Has_Pet) GROUP BY StuID HAVING count(*) > 1 
 SELECT fname,        sex FROM Student WHERE StuID IN     (SELECT StuID      FROM Has_Pet) GROUP BY StuID HAVING count(*) > 1 
 SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat'   AND pets.petage = 3 
 SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat'   AND pets.petage = 3 
 SELECT avg(age) FROM student WHERE stuid NOT IN     (SELECT stuid      FROM has_pet) 
 SELECT avg(age) FROM student WHERE stuid NOT IN     (SELECT stuid      FROM has_pet) 
 SELECT count(*) FROM continents 
 SELECT count(*) FROM continents 
 SELECT continents.continent,        continents.continent,        count(*) FROM continents JOIN countries ON continents.continent = countries.continent GROUP BY continents.continent 
 SELECT continents.Continent,        count(*),        continents.Continent FROM continents JOIN countries ON continents.Continent = countries.Continent GROUP BY continents.Continent 
 SELECT count(*) FROM countries 
 SELECT count(*) FROM countries 
 SELECT car_makers.FullName,        model_list.ModelId,        count(*) FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY model_list.maker 
 SELECT car_makers.FullName,        count(*),        car_makers.id FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY model_list.maker 
 SELECT Model FROM car_names ORDER BY Horsepower ASC LIMIT 1 
 SELECT Model FROM cars_data ORDER BY Horsepower ASC LIMIT 1 
 SELECT Model FROM car_names WHERE Weight <     (SELECT avg(Weight)      FROM cars_data) 
 SELECT Model FROM car_names WHERE Weight <     (SELECT avg(Weight)      FROM cars_data) 
 SELECT car_makers.Maker FROM cars_data JOIN car_makers ON cars_data.Year = car_makers.Maker WHERE cars_data.year = 1970 
 SELECT DISTINCT car_makers.Maker FROM cars_data JOIN car_makers ON cars_data.MakeId = car_makers.Id WHERE cars_data.year = 1970 
 SELECT make,        YEAR FROM cars_data ORDER BY YEAR LIMIT 1 
 SELECT Make,        YEAR FROM cars_data ORDER BY YEAR LIMIT 1 
 SELECT DISTINCT model FROM cars_data WHERE YEAR > 1980 
 SELECT DISTINCT model FROM cars_data WHERE YEAR > 1980 
 SELECT continents.continent,        count(*) FROM continents JOIN countries ON continents.continent = countries.continent GROUP BY continents.continent 
 SELECT continents.continent,        count(*) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON countries.country = car_makers.country GROUP BY continents.continent 
 SELECT CountryName FROM countries GROUP BY CountryName ORDER BY count(*) DESC LIMIT 1 
 SELECT countries.CountryName FROM car_makers JOIN countries ON car_makers.CountryId = countries.CountryId GROUP BY countries.CountryName ORDER BY count(*) DESC LIMIT 1 
 SELECT count(*),        car_makers.FullName FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id GROUP BY car_makers.FullName 
 SELECT count(*),        car_makers.id,        car_makers.fullname FROM model_list JOIN car_makers ON model_list.maker = car_makers.id GROUP BY car_makers.id 
 SELECT cars_data.accelerate FROM cars_data JOIN car_names ON cars_data.makeid = car_names.makeid WHERE car_names.make = "amc hornet sportabout (sw)" 
 SELECT cars_data.accelerate FROM cars_data JOIN car_names ON cars_data.makeid = car_names.makeid WHERE car_names.make = "amc hornet sportabout (sw)" 
 SELECT count(*) FROM car_makers WHERE countryid = 1 
 SELECT count(*) FROM car_makers WHERE countryid = 1 
 SELECT COUNT(*) FROM car_makers JOIN model_list ON car_makers.id = model_list.maker WHERE car_makers.country = 'USA' 
 SELECT COUNT(*) FROM car_makers JOIN model_list ON car_makers.id = model_list.maker WHERE car_makers.country = 'United States' 
 SELECT avg(MPG) FROM cars_data WHERE Cylinders = 4 
 SELECT avg(MPG) FROM cars_data WHERE Cylinders = 4 
 SELECT min(weight) FROM cars_data WHERE cylinders = 8   AND YEAR = 1974 
 SELECT min(weight) FROM cars_data WHERE cylinders = 8   AND YEAR = 1974 
 SELECT DISTINCT maker,                 model FROM model_list 
 SELECT Maker,        Model FROM model_list 
 SELECT countryname,        countryid FROM countries UNION SELECT countryname,        id FROM car_makers 
 SELECT countryname,        countryid FROM countries UNION SELECT countryname,        countryid FROM car_makers 
 SELECT count(*) FROM cars_data WHERE horsepower > 150 
 SELECT count(*) FROM cars_data WHERE horsepower > 150 
 SELECT avg(weight),        YEAR FROM cars_data GROUP BY YEAR 
 SELECT avg(weight),        YEAR FROM cars_data GROUP BY YEAR 
 SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.CountryId WHERE countries.Continent = 'Europe' GROUP BY car_makers.CountryId HAVING count(*) >= 3 
 SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.CountryId WHERE countries.Continent = 'Europe' GROUP BY car_makers.CountryId HAVING count(*) >= 3 
 SELECT max(Horsepower),        Make FROM cars_data WHERE Cylinders = 3 
 SELECT max(Horsepower),        Make FROM cars_data WHERE Cylinders = 3 
 SELECT Model FROM cars_data ORDER BY MPG DESC LIMIT 1 
 SELECT Model FROM cars_data ORDER BY MPG DESC LIMIT 1 
 SELECT avg(Horsepower) FROM cars_data WHERE YEAR < 1980 
 SELECT avg(Horsepower) FROM cars_data WHERE YEAR < 1980 
 SELECT avg(Edispl) FROM cars_data WHERE Model = "volvo" 
 SELECT avg(Edispl) FROM cars_data WHERE model = "volvo" 
 SELECT max(Accelerate),        cylinders FROM cars_data GROUP BY cylinders 
 SELECT max(Accelerate) FROM cars_data 
 SELECT Model FROM car_names GROUP BY Model ORDER BY count(*) DESC LIMIT 1 
 SELECT Model FROM car_names GROUP BY Model ORDER BY count(*) DESC LIMIT 1 
 SELECT count(*) FROM cars_data WHERE cylinders > 4 
 SELECT count(*) FROM cars_data WHERE cylinders > 4 
 SELECT count(*) FROM cars_data WHERE YEAR = 1980 
 SELECT count(*) FROM cars_data WHERE YEAR = 1980 
 SELECT count(*) FROM model_list WHERE maker = 1 
 SELECT count(*) FROM model_list WHERE maker = "American Motor Company" 
 SELECT car_makers.FullName,        model_list.ModelId FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY model_list.ModelId HAVING count(*) > 3 
 SELECT car_makers.Maker,        car_makers.FullName FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY model_list.Maker HAVING count(*) > 3 
 SELECT DISTINCT model FROM model_list WHERE maker = "General Motors"   OR weight > 3500 
 SELECT DISTINCT model FROM cars_data WHERE maker = 1   OR weight > 3500 
 SELECT DISTINCT YEAR FROM cars_data WHERE weight BETWEEN 3000 AND 4000 
 SELECT DISTINCT YEAR FROM cars_data WHERE weight < 4000 INTERSECT   SELECT DISTINCT YEAR   FROM cars_data WHERE weight > 3000 
 SELECT horsepower FROM cars_data ORDER BY accelerate DESC LIMIT 1 
 SELECT horsepower FROM cars_data ORDER BY accelerate DESC LIMIT 1 
 SELECT min(cars_data.cylinders) FROM cars_data JOIN car_names ON cars_data.makeid = car_names.makeid WHERE car_names.model = "volvo" 
 SELECT count(*) FROM cars_data WHERE model = "volvo"   AND accelerate =     (SELECT min(accelerate)      FROM cars_data      WHERE model = "volvo") 
 SELECT count(*) FROM cars_data WHERE horsepower =     (SELECT max(horsepower)      FROM cars_data)   AND accelerate >     (SELECT max(accelerate)      FROM cars_data) 
 SELECT count(*) FROM cars_data WHERE accelerate >     (SELECT max(horsepower)      FROM cars_data) 
 SELECT count(*) FROM countries JOIN car_makers ON countries.countryid = car_makers.countryid GROUP BY car_makers.countryid HAVING count(*) > 2 
 SELECT count(*) FROM countries JOIN car_makers ON countries.countryid = car_makers.countryid GROUP BY car_makers.countryid HAVING count(*) > 2 
 SELECT count(*) FROM cars_data WHERE cylinders > 6 
 SELECT count(*) FROM cars_data WHERE cylinders > 6 
 SELECT Model FROM cars_data WHERE Cylinders = 4 ORDER BY Horsepower DESC LIMIT 1 
 SELECT Model FROM cars_data WHERE Cylinders = 4 ORDER BY Horsepower DESC LIMIT 1 
 SELECT car_names.makeid,        car_names.make FROM cars_data JOIN car_names ON cars_data.makeid = car_names.makeid WHERE cars_data.horsepower >     (SELECT min(horsepower)      FROM cars_data      WHERE cylinders > 3) 
 SELECT Make,        car_names.Make FROM cars_data EXCEPT SELECT Make,        car_names.Make FROM cars_data WHERE Horsepower = "Minimum"   AND Cylinders = 4 
 SELECT max(MPG) FROM cars_data WHERE Cylinders = 8   OR YEAR < 1980 
 SELECT max(MPG) FROM cars_data WHERE Cylinders = 8   OR YEAR < 1980 
 SELECT model FROM model_list WHERE weight < 3500 EXCEPT SELECT model FROM model_list WHERE maker = 'Ford Motor Company' 
 SELECT DISTINCT model FROM model_list WHERE weight < 3500 EXCEPT SELECT DISTINCT model FROM model_list WHERE maker = "Ford Motor Company" 
 SELECT countryname FROM countries EXCEPT SELECT countryname FROM car_makers 
 SELECT CountryName FROM countries EXCEPT SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.CountryId 
 SELECT car_makers.id,        car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY model_list.maker HAVING count(*) >= 2 INTERSECT SELECT car_makers.id,        car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY model_list.maker HAVING count(*) > 3 
 SELECT car_makers.id,        car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY model_list.maker HAVING count(*) >= 2 INTERSECT SELECT car_makers.id,        car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY model_list.maker HAVING count(*) > 3 
 SELECT country_id,        country_name FROM countries WHERE country_name IN     (SELECT country_name      FROM car_makers      GROUP BY country_name      HAVING count(*) > 3) UNION SELECT country_id,        country_name FROM model_list WHERE model = 'fiat' 
 SELECT country_id,        country_name FROM countries WHERE country_name IN     (SELECT country_name      FROM car_makers      GROUP BY country_name      HAVING count(*) > 3) UNION SELECT country_id,        country_name FROM countries WHERE country_name = 'fiat' 
 SELECT Country FROM airlines WHERE Airline = "JetBlue Airways" 
 SELECT Country FROM airlines WHERE Airline = "Jetblue Airways" 
 SELECT abbreviation FROM airlines WHERE Airline = "JetBlue Airways" 
 SELECT Abbreviation FROM airlines WHERE Airline = "Jetblue Airways" 
 SELECT Airline,        Abbreviation FROM airlines WHERE Country = "USA" 
 SELECT Airline,        Abbreviation FROM airlines WHERE Country = 'USA' 
 SELECT AirportCode,        AirportName FROM airports WHERE City = "Anthony" 
 SELECT AirportCode,        AirportName FROM airports WHERE City = "Anthony" 
 SELECT count(*) FROM airlines 
 SELECT count(*) FROM airlines 
 SELECT count(*) FROM airports 
 SELECT count(*) FROM airports 
 SELECT count(*) FROM flights 
 SELECT count(*) FROM flights 
 SELECT Airline FROM airlines WHERE Abbreviation = 'UAL' 
 SELECT Airline FROM airlines WHERE Abbreviation = 'UAL' 
 SELECT count(*) FROM airlines WHERE Country = 'USA' 
 SELECT count(*) FROM airlines WHERE Country = 'USA' 
 SELECT City,        Country FROM airports WHERE AirportName = "Alton" 
 SELECT City,        Country FROM airports WHERE AirportName = "Alton" 
 SELECT AirportName FROM airports WHERE AirportName = 'AKO' 
 SELECT AirportName FROM airports WHERE AirportCode = 'AKO' 
 SELECT AirportName FROM airports WHERE City = 'Aberdeen' 
 SELECT AirportName FROM airports WHERE City = "Aberdeen" 
 SELECT count(*) FROM flights WHERE SourceAirport = 'APG' 
 SELECT count(*) FROM flights WHERE SourceAirport = 'APG' 
 SELECT count(*) FROM flights WHERE DestAirport = "ATL" 
 SELECT count(*) FROM flights WHERE DestAirport = "ATL" 
 SELECT count(*) FROM flights WHERE sourceairport = "Aberdeen" 
 SELECT count(*) FROM flights WHERE sourceairport = "Aberdeen" 
 SELECT count(*) FROM airports JOIN flights ON airports.airportcode = flights.destairport WHERE airports.city = "Aberdeen" 
 SELECT count(*) FROM flights WHERE DestAirport = "Aberdeen" 
 SELECT count(*) FROM flights WHERE sourceairport = 'Aberdeen'   AND destairport = 'Ashley' 
 SELECT count(*) FROM flights WHERE DestAirport = "Ashley"   AND SourceAirport = "Aberdeen" 
 SELECT count(*) FROM flights WHERE Airline = 'JetBlue Airways' 
 SELECT count(*) FROM flights WHERE Airline = "Jetblue Airways" 
 SELECT count(*) FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE airlines.airline = 'United Airlines'   AND flights.destairport = 'ASY' 
 SELECT count(*) FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE airlines.airline = "United"   AND DestAirport = "ASY" 
 SELECT count(*) FROM flights WHERE Airline = 'United Airlines'   AND SourceAirport = 'AHD' 
 SELECT count(*) FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE airlines.airline = "United"   AND SourceAirport = "AHD" 
 SELECT count(*) FROM flights JOIN airlines ON flights.airline = airlines.uid WHERE airlines.airline = 'United'   AND DestAirport = 'Aberdeen' 
 SELECT count(*) FROM flights WHERE Airline = "United"   AND DestAirport = "Aberdeen" 
 SELECT City FROM airports GROUP BY City ORDER BY count(*) DESC LIMIT 1 
 SELECT City FROM airports GROUP BY City ORDER BY COUNT(*) DESC LIMIT 1 
 SELECT City FROM airports WHERE City IN     (SELECT SourceAirport      FROM flights      GROUP BY SourceAirport      ORDER BY count(*) DESC      LIMIT 1) 
 SELECT City FROM airports GROUP BY City ORDER BY count(*) DESC LIMIT 1 
 SELECT airports.AirportCode FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport GROUP BY flights.SourceAirport ORDER BY count(*) DESC LIMIT 1 
 SELECT airportcode FROM flights GROUP BY airportcode ORDER BY count(*) DESC LIMIT 1 
 SELECT airportcode FROM airports GROUP BY airportcode ORDER BY count(*) DESC LIMIT 1 
 SELECT AirportCode FROM airports GROUP BY AirportCode ORDER BY count(*) ASC LIMIT 1 
 SELECT Airline FROM flights GROUP BY Airline ORDER BY count(*) DESC LIMIT 1 
 SELECT Airline FROM airlines GROUP BY Airline ORDER BY count(*) DESC LIMIT 1 
 SELECT airlines.abbreviation,        airlines.country FROM airlines JOIN flights ON airlines.uid = flights.airline GROUP BY flights.airline ORDER BY count(*) DESC LIMIT 1 
 SELECT airlines.abbreviation,        airlines.country FROM airlines JOIN flights ON airlines.uid = flights.airline GROUP BY flights.airline ORDER BY count(*) ASC LIMIT 1 
 SELECT Airline FROM airlines WHERE SourceAirport = 'AHD' 
 SELECT Airline FROM flights WHERE SourceAirport = "AHD" 
 SELECT Airline FROM airlines WHERE DestAirport = 'AHD' 
 SELECT Airline FROM flights WHERE DestAirport = "AHD" 
 SELECT Airline FROM airlines WHERE SourceAirport = 'APG' INTERSECT   SELECT Airline   FROM airlines WHERE SourceAirport = 'CVO' 
 SELECT Airline FROM airlines WHERE SourceAirport = 'APG' INTERSECT   SELECT Airline   FROM airlines WHERE SourceAirport = 'CVO' 
 SELECT Airline FROM airlines WHERE sourceairport = 'CVO' EXCEPT SELECT Airline FROM airlines WHERE sourceairport = 'APG' 
 SELECT Airline FROM airlines WHERE sourceairport!= 'APG' 
 SELECT Airline FROM airlines GROUP BY Airline HAVING count(*) >= 10 
 SELECT Airline FROM airlines GROUP BY Airline HAVING count(*) >= 10 
 SELECT Airline FROM airlines WHERE count(*) < 200 
 SELECT Airline FROM airlines WHERE count(*) < 200 
 SELECT FlightNo FROM flights WHERE Airline = "United Airlines" 
 SELECT FlightNo FROM flights WHERE Airline = 'United' 
 SELECT FlightNo FROM flights WHERE SourceAirport = "APG" 
 SELECT FlightNo FROM flights WHERE SourceAirport = "APG" 
 SELECT FlightNo FROM flights WHERE DestAirport = "APG" 
 SELECT FlightNo FROM flights WHERE DestAirport = "APG" 
 SELECT FlightNo FROM flights WHERE SourceAirport = "Aberdeen" 
 SELECT FlightNo FROM flights WHERE SourceAirport = "Aberdeen" 
 SELECT FlightNo FROM flights WHERE DestAirport = "Aberdeen" 
 SELECT FlightNo FROM flights WHERE DestAirport = "Aberdeen" 
 SELECT count(*) FROM airports JOIN flights ON airports.airportcode = flights.destairport WHERE airports.city = 'Aberdeen'   OR airports.city = 'Abilene' 
 SELECT count(*) FROM airports JOIN flights ON airports.airportcode = flights.destairport WHERE airports.city = 'Aberdeen'   OR airports.city = 'Abilene' 
 SELECT AirportName FROM airports EXCEPT SELECT airports.AirportName FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport 
 SELECT AirportName FROM airports EXCEPT SELECT airports.AirportName FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport 
 SELECT count(*) FROM employee 
 SELECT count(*) FROM employee 
 SELECT name FROM employee ORDER BY age 
 SELECT Name FROM employee ORDER BY Age 
 SELECT count(*),        city FROM employee GROUP BY city 
 SELECT count(*),        city FROM employee GROUP BY city 
 SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING count(*) > 1 
 SELECT DISTINCT city FROM employee WHERE age < 30 
 SELECT LOCATION,        count(*) FROM shop GROUP BY LOCATION 
 SELECT LOCATION,        count(*) FROM shop GROUP BY LOCATION 
 SELECT Manager_name,        District FROM shop ORDER BY Number_products DESC LIMIT 1 
 SELECT Manager_name,        District FROM shop ORDER BY Number_products DESC LIMIT 1 
 SELECT min(Number_products),        max(Number_products) FROM shop 
 SELECT min(Number_products),        max(Number_products) FROM shop 
 SELECT name,        LOCATION,        district FROM shop ORDER BY number_products DESC 
 SELECT name,        LOCATION,        district FROM shop ORDER BY number_products DESC 
 SELECT name FROM shop WHERE number_products >     (SELECT avg(number_products)      FROM shop) 
 SELECT name FROM shop WHERE number_products >     (SELECT avg(number_products)      FROM shop) 
 SELECT employee.Name FROM employee JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID GROUP BY evaluation.Employee_ID ORDER BY count(*) DESC LIMIT 1 
 SELECT employee.name FROM employee JOIN evaluation ON employee.employee_id = evaluation.employee_id GROUP BY employee.name ORDER BY count(*) DESC LIMIT 1 
 SELECT Name FROM employee ORDER BY Bonus DESC LIMIT 1 
 SELECT Name FROM employee ORDER BY Bonus DESC LIMIT 1 
 SELECT Name FROM employee EXCEPT SELECT Name FROM evaluation 
 SELECT Name FROM employee EXCEPT SELECT Name FROM evaluation 
 SELECT shop.name FROM shop JOIN hiring ON shop.shop_id = hiring.shop_id GROUP BY shop.name ORDER BY count(*) DESC LIMIT 1 
 SELECT name FROM shop GROUP BY name ORDER BY count(*) DESC LIMIT 1 
 SELECT name FROM shop WHERE shop_id NOT IN     (SELECT shop_id      FROM hiring) 
 SELECT name FROM shop WHERE shop_id NOT IN     (SELECT shop_id      FROM hiring) 
 SELECT shop.name,        count(*) FROM shop JOIN hiring ON shop.shop_id = hiring.shop_id GROUP BY shop.name 
 SELECT count(*),        shop.name FROM shop JOIN hiring ON shop.shop_id = hiring.shop_id GROUP BY shop.name 
 SELECT sum(Bonus) FROM evaluation 
 SELECT sum(Bonus) FROM evaluation 
 SELECT * FROM hiring 
 SELECT * FROM hiring 
 SELECT District FROM shop WHERE Number_products < 3000 INTERSECT   SELECT District   FROM shop WHERE Number_products > 10000 
 SELECT District FROM shop WHERE Number_products < 3000 INTERSECT   SELECT District   FROM shop WHERE Number_products > 10000 
 SELECT count(DISTINCT LOCATION) FROM shop 
 SELECT count(DISTINCT LOCATION) FROM shop 
 SELECT count(*) FROM Documents 
 SELECT count(*) FROM Documents 
 SELECT Document_ID,        Document_name,        Document_description FROM Documents 
 SELECT Document_ID,        Document_name,        Document_description FROM Documents 
 SELECT Documents.document_name,        Documents.template_id FROM Documents JOIN Documents ON Documents.document_id = Documents.template_id WHERE Documents.document_description LIKE '%w%' 
 SELECT Documents.document_name,        Documents.template_id FROM Documents JOIN Documents ON Documents.document_id = Documents.template_id WHERE Documents.document_description LIKE '%w%' 
 SELECT Documents.Document_ID,        Documents.Template_ID,        Documents.Document_description FROM Documents JOIN Documents ON Documents.Document_ID = Documents.Document_ID WHERE Documents.Document_name = "Robbin CV" 
 SELECT Documents.Document_ID,        Documents.Template_ID,        Documents.Document_Description FROM Documents JOIN Documents ON Documents.Document_ID = Documents.Document_ID WHERE Documents.Document_Name = "Robbin CV" 
 SELECT count(DISTINCT template_id) FROM Documents 
 SELECT count(DISTINCT template_id) FROM Documents 
 SELECT count(*) FROM Documents WHERE template_type_code = 'PPT' 
 SELECT count(*) FROM Documents WHERE template_type_code = "PPT" 
 SELECT Documents.template_id,        count(*) FROM Documents JOIN Documents ON Documents.template_id = Documents.template_id GROUP BY Documents.template_id 
 SELECT Document_ID,        COUNT(*) FROM Documents GROUP BY Document_ID 
 SELECT Templates.template_id,        Templates.template_type_code FROM Documents JOIN Templates ON Documents.template_id = Templates.template_id GROUP BY Templates.template_id ORDER BY count(*) DESC LIMIT 1 
 SELECT Templates.template_type_code,        Templates.template_id FROM Documents JOIN Templates ON Documents.template_id = Templates.template_id GROUP BY Templates.template_id ORDER BY count(*) DESC LIMIT 1 
 SELECT Documents.template_id FROM Documents JOIN Documents ON Documents.Document_ID = Documents.template_id GROUP BY Documents.template_id HAVING count(*) > 1 
 SELECT template_id FROM Documents GROUP BY template_id HAVING count(*) > 1 
 SELECT template_id FROM templates EXCEPT SELECT templates.template_id FROM documents JOIN templates ON documents.template_id = templates.template_id 
 SELECT template_id FROM templates EXCEPT SELECT templates.template_id FROM documents JOIN templates ON documents.template_id = templates.template_id 
 SELECT count(*) FROM Templates 
 SELECT count(*) FROM Templates 
 SELECT Template_ID,        Version_Number,        Template_Type_Code FROM Templates 
 SELECT Template_ID,        Version_Number,        Template_Type_Code FROM Templates 
 SELECT DISTINCT Template_Type_Code FROM Templates 
 SELECT DISTINCT Template_Type_Code FROM Templates 
 SELECT Template_ID FROM Templates WHERE Template_Type_Code = "PP"   OR Template_Type_Code = "PPT" 
 SELECT Template_ID FROM Templates WHERE Template_Type_Code = "PP"   OR Template_Type_Code = "PPT" 
 SELECT count(*) FROM Templates WHERE template_type_code = "CV" 
 SELECT count(*) FROM Templates WHERE template_type_code = "CV" 
 SELECT Templates.Version_Number,        Templates.Template_Type_Code FROM Templates JOIN Templates ON Templates.Template_ID = Templates.Template_ID WHERE Templates.Version_Number > 5 
 SELECT Templates.Version_Number,        Templates.Template_Type_Code FROM Templates JOIN Document_Types ON Templates.Template_Type_Code = Document_Types.Template_Type_Code WHERE Templates.Version_Number > 5 
 SELECT template_type_code,        count(*) FROM Templates GROUP BY template_type_code 
 SELECT count(*),        template_type_code FROM Templates GROUP BY template_type_code 
 SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY count(*) DESC LIMIT 1 
 SELECT Templates.template_type_code FROM Templates JOIN Templates ON Templates.template_type_code = Templates.template_type_code GROUP BY Templates.template_type_code ORDER BY count(*) DESC LIMIT 1 
 SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING count(*) < 3 
 SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING count(*) < 3 
 SELECT min(version_number),        template_type_code FROM Templates 
 SELECT min(version_number),        template_type_code FROM Templates 
 SELECT Templates.template_type_code FROM Templates JOIN Documents ON Templates.template_id = Documents.template_id WHERE Documents.document_name = "Data base" 
 SELECT Templates.template_type_code FROM Templates JOIN Documents ON Templates.template_id = Documents.template_id WHERE Documents.document_name = "Data base" 
 SELECT document_name FROM Documents WHERE template_id IN     (SELECT template_id      FROM Templates      WHERE template_type_code = "BK") 
 SELECT Document_name FROM Documents WHERE Template_ID = 1 
 SELECT template_type_code,        count(*) FROM Documents GROUP BY template_type_code 
 SELECT template_type_code,        count(*) FROM Documents GROUP BY template_type_code 
 SELECT template_type_code FROM Documents GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1 
 SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1 
 SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Documents 
 SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Documents 
 SELECT template_type_code,        template_type_description FROM Ref_Template_Types 
 SELECT template_type_code,        template_type_description FROM Ref_Template_Types 
 SELECT template_type_description FROM Ref_Template_Types WHERE template_type_code = "AD" 
 SELECT template_type_description FROM Ref_Template_Types WHERE template_type_code = "AD" 
 SELECT template_type_code FROM Ref_Template_Types WHERE template_type_description = "Book" 
 SELECT template_type_code FROM Ref_Template_Types WHERE template_type_description = "Book" 
 SELECT DISTINCT Templates.template_type_description FROM Templates JOIN Documents ON Templates.template_id = Documents.template_id GROUP BY Templates.template_type_description 
 SELECT DISTINCT Templates.template_type_description FROM Templates JOIN Documents ON Templates.template_id = Documents.template_id 
 SELECT Template_ID FROM Templates WHERE Template_Type_Description = "Presentation" 
 SELECT Template_ID FROM Templates WHERE Template_Type_Description = 'Presentation' 
 SELECT count(*) FROM Paragraphs 
 SELECT count(*) FROM Paragraphs 
 SELECT count(*) FROM Paragraphs JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID WHERE Documents.document_name = 'Summer Show' 
 SELECT count(*) FROM Paragraphs WHERE document_id = 1 
 SELECT Other_Details FROM Paragraphs WHERE Paragraph_Text = 'Korea' 
 SELECT Other_Details FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea%' 
 SELECT Paragraphs.Paragraph_ID,        Paragraphs.Paragraph_text FROM Paragraphs JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID WHERE Documents.Document_name = 'Welcome to NY' 
 SELECT Paragraphs.Paragraph_ID,        Paragraphs.Paragraph_text FROM Paragraphs JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID WHERE Documents.Document_name = 'Welcome to NY' 
 SELECT Paragraphs.Paragraph_text FROM Paragraphs JOIN Documents ON Paragraphs.Document_id = Documents.Document_id WHERE Documents.Document_name = "Customer reviews" 
 SELECT Paragraphs.paragraph_text FROM Paragraphs JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID WHERE Documents.document_name = 'Customer reviews' 
 SELECT document_id,        count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id 
 SELECT Document_ID,        count(*) FROM Paragraphs GROUP BY Document_ID ORDER BY count(*) 
 SELECT Documents.document_id,        Documents.document_name,        count(*) FROM Documents JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id GROUP BY Documents.document_id 
 SELECT Documents.document_id,        Documents.document_name,        count(*) FROM Documents JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id GROUP BY Documents.document_id 
 SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING count(*) >= 2 
 SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING count(*) >= 2 
 SELECT Documents.document_id,        Documents.document_name FROM Documents JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id GROUP BY Documents.document_id ORDER BY count(*) DESC LIMIT 1 
 SELECT Documents.document_id,        Documents.document_name FROM Documents JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id GROUP BY Documents.document_id ORDER BY count(*) DESC LIMIT 1 
 SELECT Document_ID FROM Paragraphs GROUP BY Document_ID ORDER BY count(*) ASC LIMIT 1 
 SELECT document_id FROM paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1 
 SELECT Document_ID FROM Paragraphs WHERE Paragraph_ID BETWEEN 1 AND 2 
 SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING count(*) BETWEEN 1 AND 2 
 SELECT Document_ID FROM Paragraphs WHERE Paragraph_text = 'Brazil'   OR Paragraph_text = 'Ireland' 
 SELECT Document_ID FROM Paragraphs WHERE Paragraph_text = 'Brazil'   OR Paragraph_text = 'Ireland' 
 SELECT count(*) FROM teacher 
 SELECT count(*) FROM teacher 
 SELECT Name FROM teacher ORDER BY Age ASC 
 SELECT Name FROM teacher ORDER BY Age ASC 
 SELECT Age,        Hometown FROM teacher 
 SELECT Age,        Hometown FROM teacher 
 SELECT Name FROM teacher WHERE Hometown!= "Little Lever Urban District" 
 SELECT Name FROM teacher WHERE Hometown!= "Little Lever Urban District" 
 SELECT Name FROM teacher WHERE Age = 32   OR Age = 33 
 SELECT Name FROM teacher WHERE Age = 32   OR Age = 33 
 SELECT Hometown FROM teacher ORDER BY Age LIMIT 1 
 SELECT Hometown FROM teacher ORDER BY Age LIMIT 1 
 SELECT Hometown,        COUNT(*) FROM teacher GROUP BY Hometown 
 SELECT Hometown,        count(*) FROM teacher GROUP BY Hometown 
 SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1 
 SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1 
 SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*) >= 2 
 SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*) >= 2 
 SELECT teacher.Name,        course.Course FROM course_arrange JOIN course ON course_arrange.Course_ID = course.Course_ID JOIN teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID 
 SELECT teacher.Name,        course.Course FROM course_arrange JOIN course ON course_arrange.Course_ID = course.Course_ID JOIN teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID 
 SELECT teacher.Name,        course.Course FROM course_arrange JOIN course ON course_arrange.Course_ID = course.Course_ID JOIN teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID ORDER BY teacher.Name ASC 
 SELECT teacher.Name,        course.Course FROM course_arrange JOIN course ON course_arrange.Course_ID = course.Course_ID JOIN teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID ORDER BY teacher.Name ASC 
 SELECT teacher.Name FROM course JOIN teacher ON course.Teacher_ID = teacher.Teacher_ID WHERE course.Course = "math" 
 SELECT Name FROM teacher WHERE Name IN     (SELECT Teacher_ID      FROM course      WHERE Course = "math") 
 SELECT Teacher.Name,        count(*) FROM course_arrange JOIN teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID GROUP BY Teacher.Name 
 SELECT Teacher.Name,        count(*) FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID GROUP BY Teacher.Name 
 SELECT Name FROM teacher GROUP BY Name HAVING COUNT(*) >= 2 
 SELECT Name FROM teacher GROUP BY Name HAVING COUNT(*) >= 2 
 SELECT Name FROM teacher EXCEPT SELECT teacher.Name FROM course_arrange JOIN teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID 
 SELECT name FROM teacher EXCEPT SELECT teacher.name FROM course_arrange JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id 
 SELECT count(*) FROM visitor WHERE age < 30 
 SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC 
 SELECT avg(age) FROM visitor WHERE level_of_membership <= 4 
 SELECT name,        level_of_membership FROM visitor WHERE level_of_membership > 4 ORDER BY age 
 SELECT Museum_ID,        Name FROM museum ORDER BY Num_of_Staff DESC LIMIT 1 
 SELECT avg(Num_of_Staff) FROM museum WHERE Open_Year < 2009 
 SELECT Open_Year,        Num_of_Staff FROM museum WHERE Name = "Plaza Museum" 
 SELECT Name FROM museum WHERE Num_of_Staff >     (SELECT min(Num_of_Staff)      FROM museum      WHERE Open_Year > 2010) 
 SELECT DISTINCT ID,                 Name,                 Age FROM visitor WHERE ID IN     (SELECT DISTINCT visitor_ID      FROM visit) 
 SELECT visitor.id,        visitor.name,        visitor.level_of_membership FROM visitor JOIN visit ON visitor.id = visit.visitor_id WHERE visit.total_spent =     (SELECT max(total_spent)      FROM visit) 
 SELECT Museum_ID,        Name FROM museum GROUP BY Museum_ID ORDER BY count(*) DESC LIMIT 1 
 SELECT Name FROM museum WHERE Museum_ID NOT IN     (SELECT Museum_ID      FROM visit) 
 SELECT Name,        Age FROM visitor WHERE ID =     (SELECT visitor_ID      FROM visit      GROUP BY visitor_ID      ORDER BY count(*) DESC      LIMIT 1) 
 SELECT avg(Num_of_Ticket),        max(Num_of_Ticket) FROM visit 
 SELECT sum(visit.Total_spent) FROM visit JOIN visitor ON visit.visitor_ID = visitor.ID WHERE visitor.Level_of_membership = 1 
 SELECT Name FROM visitor WHERE ID IN     (SELECT visitor_ID      FROM visit      WHERE Open_Year < 2009 INTERSECT        SELECT visitor_ID        FROM visit WHERE Open_Year > 2011) 
 SELECT count(*) FROM visitor WHERE ID NOT IN     (SELECT visitor_ID      FROM visit      WHERE open_year > 2010) 
 SELECT count(*) FROM museum WHERE open_year > 2013   OR open_year < 2008 
 SELECT count(*) FROM players 
 SELECT count(*) FROM players 
 SELECT count(*) FROM matches 
 SELECT count(*) FROM matches 
 SELECT first_name,        birth_date FROM players WHERE country_code = 'USA' 
 SELECT first_name,        birth_date FROM players WHERE country_code = "USA" 
 SELECT avg(loser_age),        avg(winner_age) FROM matches 
 SELECT avg(loser_age),        avg(winner_age) FROM matches 
 SELECT avg(winner_rank) FROM matches 
 SELECT avg(winner_rank) FROM matches 
 SELECT MAX(loser_rank) FROM matches 
 SELECT loser_rank FROM matches GROUP BY loser_rank ORDER BY count(*) DESC LIMIT 1 
 SELECT count(DISTINCT country_code) FROM players 
 SELECT count(DISTINCT country_code) FROM players 
 SELECT count(DISTINCT loser_name) FROM matches 
 SELECT count(DISTINCT loser_name) FROM matches 
 SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*) > 10 
 SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*) > 10 
 SELECT matches.winner_name FROM matches JOIN matches ON matches.winner_name = matches.winner_name WHERE matches.year = 2013 INTERSECT   SELECT matches.winner_name   FROM matches   JOIN matches ON matches.winner_name = matches.winner_name WHERE matches.year = 2016 
 SELECT matches.winner_name FROM matches JOIN matches ON matches.winner_name = matches.winner_name WHERE matches.year = 2013 INTERSECT   SELECT matches.winner_name   FROM matches   JOIN matches ON matches.winner_name = matches.winner_name WHERE matches.year = 2016 
 SELECT count(*) FROM matches WHERE YEAR = 2013   OR YEAR = 2016 
 SELECT count(*) FROM matches WHERE YEAR = 2013   OR YEAR = 2016 
 SELECT players.country_code,        players.first_name FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name = "WTA Championships" INTERSECT   SELECT players.country_code,          players.first_name   FROM players   JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name = "Australian Open" 
 SELECT players.first_name,        players.country_code FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name = 'WTA Championships' INTERSECT   SELECT players.first_name,          players.country_code   FROM players   JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name = 'Australian Open' 
 SELECT first_name,        country_code FROM players ORDER BY birth_date DESC LIMIT 1 
 SELECT first_name,        country_code FROM players ORDER BY birth_date DESC LIMIT 1 
 SELECT first_name,        last_name FROM players ORDER BY birth_date 
 SELECT first_name,        last_name FROM players ORDER BY birth_date 
 SELECT first_name,        last_name FROM players WHERE hand = 'L' ORDER BY birth_date 
 SELECT first_name,        last_name FROM players WHERE hand = 'Left' ORDER BY birth_date 
 SELECT players.first_name,        players.country_code FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id ORDER BY count(*) DESC LIMIT 1 
 SELECT players.first_name,        players.country_code FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id ORDER BY count(*) DESC LIMIT 1 
 SELECT year FROM matches GROUP BY year ORDER BY count(*) DESC LIMIT 1 
 SELECT year FROM matches GROUP BY year ORDER BY count(*) DESC LIMIT 1 
 SELECT matches.winner_name,        matches.winner_rank_points FROM matches GROUP BY matches.winner_name ORDER BY count(*) DESC LIMIT 1 
 SELECT matches.winner_name,        matches.winner_rank_points FROM matches JOIN matches ON matches.winner_name = matches.winner_name GROUP BY matches.winner_name ORDER BY count(*) DESC LIMIT 1 
 SELECT winner_name FROM matches WHERE tourney_name = "Australian Open" ORDER BY winner_rank_points DESC LIMIT 1 
 SELECT winner_name FROM matches WHERE tourney_name = "Australian Open" GROUP BY winner_name ORDER BY COUNT(*) DESC LIMIT 1 
 SELECT loser_name,        winner_name FROM matches ORDER BY minutes DESC LIMIT 1 
 SELECT matches.winner_name,        matches.loser_name FROM matches ORDER BY minutes DESC LIMIT 1 
 SELECT avg(rankings.ranking),        players.first_name FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.first_name 
 SELECT players.first_name,        avg(rankings.player_id) FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.first_name 
 SELECT players.first_name,        sum(rankings.ranking_points) FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.first_name 
 SELECT first_name,        sum(ranking_points) FROM players GROUP BY first_name 
 SELECT country_code,        count(*) FROM players GROUP BY country_code 
 SELECT country_code,        count(*) FROM players GROUP BY country_code 
 SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1 
 SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1 
 SELECT country_code FROM players GROUP BY country_code HAVING count(*) > 50 
 SELECT country_code FROM players GROUP BY country_code HAVING count(*) > 50 
 SELECT tours,        ranking_date FROM rankings GROUP BY ranking_date 
 SELECT tours,        ranking_date FROM rankings GROUP BY ranking_date 
 SELECT year,        count(*) FROM matches GROUP BY year 
 SELECT year,        count(*) FROM matches GROUP BY year 
 SELECT matches.winner_name,        matches.winner_rank FROM matches JOIN matches ON matches.winner_name = matches.winner_name GROUP BY matches.winner_rank ORDER BY min(winner_age) LIMIT 3 
 SELECT matches.winner_name,        matches.winner_rank FROM matches JOIN matches ON matches.winner_name = matches.winner_name GROUP BY matches.winner_rank ORDER BY min(winner_age) LIMIT 3 
 SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name = "WTA Championships"   AND winner_hand = "left" 
 SELECT count(*) FROM matches WHERE winner_hand = "Left"   AND tourney_name = "WTA Championships" 
 SELECT players.first_name,        players.country_code,        players.birth_date FROM players JOIN matches ON players.player_id = matches.winner_id ORDER BY matches.winner_rank_points DESC LIMIT 1 
 SELECT players.first_name,        players.country_code,        players.birth_date FROM players JOIN matches ON players.player_id = matches.winner_id GROUP BY matches.winner_id ORDER BY sum(matches.winner_rank_points) DESC LIMIT 1 
 SELECT hand,        count(*) FROM players GROUP BY hand 
 SELECT hand,        count(*) FROM players GROUP BY hand 
 SELECT count(*) FROM ship WHERE disposition_of_ship = 'Captured' 
 SELECT name,        tonnage FROM ship ORDER BY name DESC 
 SELECT name,        date,        result FROM battle 
 SELECT max(killed),        min(killed) FROM death 
 SELECT avg(injured) FROM death 
 SELECT death.killed,        death.injured FROM death JOIN ship ON death.caused_by_ship_id = ship.id WHERE ship.tonnage = 't' 
 SELECT name,        result FROM battle WHERE bulgarian_commander!= 'Boril' 
 SELECT DISTINCT battle.id,                 battle.name FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.ship_type = 'Brig' 
 SELECT battle.id,        battle.name FROM battle JOIN death ON battle.id = death.caused_by_ship_id GROUP BY battle.id HAVING count(*) > 10 
 SELECT ship.id,        ship.name FROM death JOIN ship ON death.caused_by_ship_id = ship.id GROUP BY death.caused_by_ship_id ORDER BY count(*) DESC LIMIT 1 
 SELECT DISTINCT name FROM battle WHERE bulgarian_commander = 'Kaloyan' INTERSECT   SELECT DISTINCT name   FROM battle WHERE latin_commander = 'Baldwin I' 
 SELECT count(DISTINCT result) FROM battle 
 SELECT count(*) FROM battle WHERE id NOT IN     (SELECT lost_in_battle      FROM ship      WHERE tonnage = '225') 
 SELECT battle.name,        battle.date FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.name = 'Lettice'   AND ship.name = 'HMS Atalanta' 
 SELECT name,        result,        bulgarian_commander FROM battle WHERE lost_in_battle = 0 
 SELECT note FROM death WHERE note LIKE '%East%' 
 SELECT * FROM Addresses WHERE line_1 = "yes"   AND line_2 = "yes" 
 SELECT line_1,        line_2 FROM Addresses 
 SELECT count(*) FROM Courses 
 SELECT count(*) FROM Courses 
 SELECT course_description FROM Courses WHERE course_name = "math" 
 SELECT course_description FROM Courses WHERE course_name = "math" 
 SELECT zip_postcode FROM Addresses WHERE city = "Port Chelsea" 
 SELECT zip_postcode FROM addresses WHERE city = "Port Chelsea"; 
 SELECT department_name,        department_id FROM DEPARTMENTs GROUP BY department_id ORDER BY count(*) DESC LIMIT 1 
 SELECT department_name,        department_id FROM DEPARTMENTs GROUP BY department_id ORDER BY count(*) DESC LIMIT 1 
 SELECT count(*) FROM degree_programs 
 SELECT count(DISTINCT department_id) FROM degree_programs 
 SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs 
 SELECT count(DISTINCT degree_program_id) FROM Degree_Programs 
 SELECT count(*) FROM DEGREE_PROGRAMS WHERE department_id = 1 
 SELECT count(*) FROM DEPARTMENTS WHERE department_name = 'Engineering' 
 SELECT section_name,        section_description FROM Sections 
 SELECT section_name,        section_description FROM Sections 
 SELECT Courses.course_name,        Courses.course_id FROM Courses JOIN Sections ON Courses.course_id = Sections.course_id GROUP BY Courses.course_id HAVING count(*) <= 2 
 SELECT Courses.course_name,        Courses.course_id FROM Courses JOIN Sections ON Courses.course_id = Sections.course_id GROUP BY Courses.course_id HAVING count(*) < 2 
 SELECT section_name FROM Sections ORDER BY section_name DESC 
 SELECT section_name FROM Sections ORDER BY section_name DESC 
 SELECT semester_name,        semester_id FROM student_enrolment GROUP BY semester_id ORDER BY count(*) DESC LIMIT 1 
 SELECT semesters.semester_name,        semesters.semester_id FROM semesters JOIN student_enrolment ON semesters.semester_id = student_enrolment.semester_id GROUP BY student_enrolment.semester_id ORDER BY count(*) DESC LIMIT 1 
 SELECT department_description FROM Departments WHERE department_name LIKE '%computer%' 
 SELECT department_description FROM Departments WHERE department_name LIKE '%computer%' 
 SELECT Students.first_name,        Students.middle_name,        Students.last_name,        Student_Enrolment.student_enrolment_id FROM Student_Enrolment JOIN Students ON Student_Enrolment.student_id = Students.student_id WHERE Student_Enrolment.semester = 1 GROUP BY Student_Enrolment.student_enrolment_id HAVING count(*) = 2 
 SELECT Students.first_name,        Students.middle_name,        Students.last_name,        Student_Enrolment.student_id FROM Student_Enrolment JOIN Students ON Student_Enrolment.student_id = Students.student_id WHERE Student_Enrolment.semester = 1 GROUP BY Student_Enrolment.student_id HAVING count(*) = 2 
 SELECT first_name,        middle_name,        last_name FROM Student_Enrolment WHERE degree_program_id = 1 
 SELECT first_name,        middle_name,        last_name FROM Student_Enrolment WHERE degree_program_id = 1 
 SELECT degree_program_id FROM Student_Enrolment GROUP BY degree_program_id ORDER BY count(*) DESC LIMIT 1 
 SELECT degree_summary_name FROM Student_Enrolment GROUP BY degree_summary_name ORDER BY count(*) DESC LIMIT 1 
 SELECT degree_program_id,        degree_summary_name FROM Degree_Programs GROUP BY degree_program_id ORDER BY count(*) DESC LIMIT 1 
 SELECT degree_program_id,        degree_summary_name FROM Student_Enrolment GROUP BY degree_program_id ORDER BY count(*) DESC LIMIT 1 
 SELECT student_enrolment.student_id,        students.first_name,        students.middle_name,        students.last_name,        count(*),        students.student_id FROM students JOIN student_enrolment ON students.student_id = student_enrolment.student_id GROUP BY students.student_id ORDER BY count(*) DESC LIMIT 1 
 SELECT Students.first_name,        Students.middle_name,        Students.last_name,        count(*) FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id GROUP BY Students.student_id ORDER BY count(*) DESC LIMIT 1 
 SELECT DISTINCT semester_name FROM semesters EXCEPT SELECT DISTINCT semester_name FROM student_enrolment 
 SELECT semester_name FROM semesters EXCEPT SELECT DISTINCT semester_name FROM student_enrolment 
 SELECT course_name FROM Courses WHERE course_id IN     (SELECT course_id      FROM Student_Enrolment_Courses) 
 SELECT course_name FROM Courses WHERE course_id IN     (SELECT course_id      FROM Student_Enrolment_Courses) 
 SELECT course_name FROM Courses GROUP BY course_name ORDER BY count(*) DESC LIMIT 1 
 SELECT course_name FROM Courses GROUP BY course_name ORDER BY count(*) DESC LIMIT 1 
 SELECT students.last_name FROM addresses JOIN students ON addresses.address_id = students.current_address_id WHERE addresses.state_province_county = "North Carolina" EXCEPT SELECT students.last_name FROM addresses JOIN student_enrolment ON addresses.address_id = student_enrolment.current_address_id 
 SELECT last_name FROM Students WHERE current_address_id IN     (SELECT address_id      FROM Addresses      WHERE state_province_county = "North Carolina") EXCEPT SELECT last_name FROM Student_Enrolment 
 SELECT transcripts.transcript_date,        transcripts.transcript_id FROM transcripts JOIN transcript_contents ON transcripts.transcript_id = transcript_contents.transcript_id GROUP BY transcripts.transcript_id HAVING count(*) >= 2 
 SELECT transcript_date,        transcript_id FROM Transcripts GROUP BY transcript_id HAVING count(*) >= 2 
 SELECT cell_mobile_number FROM Students WHERE first_name = "Timmothy"   AND last_name = "Ward" 
 SELECT cell_mobile_number FROM Students WHERE first_name = "Timmothy"   AND last_name = "Ward" 
 SELECT first_name,        middle_name,        last_name FROM Students ORDER BY date_first_registered LIMIT 1 
 SELECT first_name,        middle_name,        last_name FROM Students ORDER BY date_first_registered LIMIT 1 
 SELECT first_name,        middle_name,        last_name FROM Students ORDER BY date_left ASC LIMIT 1 
 SELECT first_name,        middle_name,        last_name FROM Students ORDER BY date_left ASC LIMIT 1 
 SELECT first_name FROM Students EXCEPT SELECT first_name FROM Students WHERE current_address_id = permanent_address_id 
 SELECT first_name FROM Students EXCEPT SELECT first_name FROM Students WHERE current_address_id = permanent_address_id 
 SELECT Addresses.address_id,        Addresses.line_1,        Addresses.line_2 FROM Addresses JOIN Students ON Addresses.address_id = Students.current_address_id GROUP BY Addresses.address_id ORDER BY count(*) DESC LIMIT 1 
 SELECT Addresses.address_id,        Addresses.line_1,        Addresses.line_2 FROM Addresses JOIN Students ON Addresses.address_id = Students.current_address_id GROUP BY Addresses.address_id ORDER BY count(*) DESC LIMIT 1 
 SELECT transcript_date FROM Transcripts GROUP BY transcript_date ORDER BY avg(transcript_date) 
 SELECT avg(transcript_date) FROM Transcripts 
 SELECT transcript_date,        other_details FROM Transcripts ORDER BY transcript_id LIMIT 1 
 SELECT transcript_date,        other_details FROM Transcripts ORDER BY transcript_date LIMIT 1 
 SELECT count(*) FROM Transcripts 
 SELECT count(*) FROM Transcripts 
 SELECT transcript_date FROM Transcripts ORDER BY transcript_id DESC LIMIT 1 
 SELECT transcript_date FROM Transcripts ORDER BY transcript_id LIMIT 1 
 SELECT count(DISTINCT student_course_id) FROM transcript_contents 
 SELECT transcript_contents.student_course_id,        max(count(*)) FROM transcript_contents JOIN student_course_enrollment ON transcript_contents.student_course_id = student_course_enrollment.student_course_id GROUP BY transcript_contents.student_course_id 
 SELECT transcript_date,        transcript_id FROM Transcripts GROUP BY transcript_id ORDER BY count(*) ASC LIMIT 1 
 SELECT transcript_date,        transcript_id FROM Transcripts GROUP BY transcript_id ORDER BY count(*) ASC LIMIT 1 
 SELECT DISTINCT student_enrolment.semester_id FROM student_enrolment JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_program_id WHERE student_enrolment.student_status = 'Master'   AND student_enrolment.student_status = 'Bachelor' 
 SELECT DISTINCT semester_id FROM Student_Enrolment WHERE degree_program_id = 1   OR degree_program_id = 2 
 SELECT count(DISTINCT current_address_id) FROM Students 
 SELECT DISTINCT current_address_id FROM Students 
 SELECT other_student_details FROM Students ORDER BY other_student_details DESC 
 SELECT other_student_details FROM Students ORDER BY other_student_details 
 SELECT section_name FROM Sections WHERE section_id = 4; 
 SELECT section_description FROM Sections WHERE section_name = 'h' 
 SELECT first_name FROM Students WHERE permanent_address_id IN     (SELECT permanent_address_id      FROM Addresses      WHERE country = 'Haiti')   OR cell_mobile_number = '09700166582' 
 SELECT first_name FROM Students WHERE permanent_address_id IN     (SELECT permanent_address_id      FROM Addresses      WHERE country = 'Haiti')   OR cell_mobile_number = '09700166582' 
 SELECT Title FROM Cartoon ORDER BY Title 
 SELECT Title FROM Cartoon ORDER BY Title 
 SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones" 
 SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones" 
 SELECT count(*) FROM Cartoon WHERE Written_by = "Joseph Kuhr" 
 SELECT count(*) FROM Cartoon WHERE Written_by = "Joseph Kuhr" 
 SELECT Title,        Directed_by FROM Cartoon ORDER BY Original_air_date 
 SELECT Title,        Directed_by FROM Cartoon ORDER BY Original_air_date 
 SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones"   OR Directed_by = "Brandon Vietti" 
 SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones"   OR Directed_by = "Brandon Vietti" 
 SELECT Country,        count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1 
 SELECT Country,        count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1 
 SELECT count(DISTINCT series_name),        content FROM TV_CHANNEL GROUP BY content 
 SELECT count(DISTINCT series_name,              content) FROM TV_CHANNEL 
 SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio" 
 SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio"; 
 SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio" 
 SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio" 
 SELECT count(*) FROM TV_channel WHERE Language = "English" 
 SELECT count(*) FROM TV_channel WHERE Language = "english" 
 SELECT Language,        count(*) FROM TV_Channel GROUP BY Language ORDER BY count(*) ASC LIMIT 1 
 SELECT Language,        count(*) FROM TV_Channel GROUP BY Language ORDER BY count(*) ASC LIMIT 1 
 SELECT Language,        count(*) FROM TV_Channel GROUP BY Language 
 SELECT Language,        count(*) FROM TV_Channel GROUP BY Language 
 SELECT TV_Channel.series_name FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.channel WHERE Cartoon.title = "The Rise of the Blue Beetle!" 
 SELECT TV_Channel.series_name FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.channel WHERE Cartoon.title = "The Rise of the Blue Beetle" 
 SELECT Cartoon.Title FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE TV_Channel.series_name = "Sky Radio" 
 SELECT Cartoon.title FROM TV_channel JOIN Cartoon ON TV_channel.id = Cartoon.channel WHERE TV_channel.series_name = "Sky Radio" 
 SELECT Episode FROM TV_series ORDER BY Rating 
 SELECT Episode FROM TV_series ORDER BY Rating 
 SELECT Episode,        Rating FROM TV_series ORDER BY Rating DESC LIMIT 3 
 SELECT episode,        rating FROM TV_series ORDER BY rating DESC LIMIT 3 
 SELECT min(Share),        max(Share) FROM TV_series 
 SELECT max(Share),        min(Share) FROM TV_series 
 SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime" 
 SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime"; 
 SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime" 
 SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime" 
 SELECT TV_channel.series_name FROM TV_series JOIN TV_channel ON TV_series.channel = TV_channel.id WHERE TV_series.episode = "A Love of a Lifetime" 
 SELECT series_name FROM TV_series WHERE Episode = "A Love of a Lifetime" 
 SELECT Episode FROM TV_series WHERE Channel = "Sky Radio" 
 SELECT Episode FROM TV_series WHERE Channel = "Sky Radio" 
 SELECT count(*),        directed_by FROM Cartoon GROUP BY directed_by 
 SELECT Directed_by,        count(*) FROM Cartoon GROUP BY Directed_by 
 SELECT Production_code,        Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1 
 SELECT production_code,        channel FROM Cartoon ORDER BY original_air_date DESC LIMIT 1 
 SELECT package_option,        series_name FROM TV_channel WHERE Hight_definition_TV = 'Yes' 
 SELECT package_option,        series_name FROM TV_channel WHERE hight_definition_tv = 'yes' 
 SELECT TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Written_by = "Todd Casey" 
 SELECT Country FROM TV_Channel WHERE Channel IN     (SELECT Channel      FROM Cartoon      WHERE Written_by = "Todd Casey") 
 SELECT Country FROM TV_Channel EXCEPT SELECT Channel FROM Cartoon WHERE Written_by = "Todd Casey" 
 SELECT Country FROM TV_Channel EXCEPT SELECT Country FROM Cartoon WHERE Written_by = "Todd Casey" 
 SELECT TV_Channel.series_name,        TV_Channel.Country FROM TV_Channel JOIN Cartoon ON Cartoon.id = TV_Channel.id WHERE Cartoon.Directed_by = "Ben Jones" INTERSECT   SELECT TV_Channel.series_name,          TV_Channel.Country   FROM TV_Channel   JOIN Cartoon ON Cartoon.id = TV_Channel.id WHERE Cartoon.Directed_by = "Michael Chang" 
 SELECT TV_Channel.series_name,        TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.id WHERE Cartoon.Directed_by = "Ben Jones"   OR Cartoon.Directed_by = "Michael Chang" 
 SELECT Pixel_aspect_ratio_PAR,        Country FROM TV_Channel EXCEPT SELECT Pixel_aspect_ratio_PAR,        Country FROM TV_Channel WHERE Language = 'English' 
 SELECT Pixel_aspect_ratio_PAR,        Country FROM TV_Channel EXCEPT SELECT Pixel_aspect_ratio_PAR,        Country FROM TV_Channel WHERE Language = 'English' 
 SELECT id FROM TV_CHANNEL GROUP BY id HAVING count(*) > 2 
 SELECT id FROM TV_CHANNEL GROUP BY id HAVING count(*) > 2 
 SELECT id FROM TV_channel EXCEPT SELECT TV_channel.id FROM TV_channel JOIN cartoon ON TV_channel.id = cartoon.channel WHERE cartoon.Directed_by = "Ben Jones" 
 SELECT id FROM TV_channel EXCEPT SELECT TV_channel.id FROM TV_channel JOIN Cartoon ON TV_channel.id = Cartoon.channel WHERE Cartoon.Directed_by = "Ben Jones" 
 SELECT package_option FROM TV_channel EXCEPT SELECT TV_channel.package_option FROM TV_channel JOIN cartoon ON TV_channel.id = cartoon.channel WHERE cartoon.directed_by = "Ben Jones" 
 SELECT Package_Option FROM TV_Channel EXCEPT SELECT TV_Channel.Package_Option FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Directed_by = "Ben Jones" 
 SELECT count(*) FROM poker_player 
 SELECT count(*) FROM poker_player 
 SELECT Earnings FROM poker_player ORDER BY Earnings DESC 
 SELECT earnings FROM poker_player ORDER BY earnings DESC 
 SELECT Final_Table_Made,        Best_Finish FROM poker_player 
 SELECT Final_Table_Made,        Best_Finish FROM poker_player 
 SELECT avg(Earnings) FROM poker_player 
 SELECT avg(Earnings) FROM poker_player 
 SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1 
 SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1 
 SELECT max(Earnings) FROM poker_player WHERE earnings < 200000 
 SELECT max(final_table_made) FROM poker_player WHERE earnings < 200000 
 SELECT Name FROM poker_player 
 SELECT Name FROM poker_player 
 SELECT Name FROM poker_player WHERE Earnings > 300000 
 SELECT people.Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE poker_player.Earnings > 300000 
 SELECT Name FROM poker_player ORDER BY Final_Table_Made ASC 
 SELECT Name FROM poker_player ORDER BY Final_Table_Made ASC 
 SELECT Birth_Date FROM poker_player ORDER BY Earnings ASC LIMIT 1 
 SELECT Birth_Date FROM poker_player ORDER BY Earnings ASC LIMIT 1 
 SELECT Money_Rank FROM poker_player ORDER BY Height DESC LIMIT 1 
 SELECT poker_player.Money_Rank FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY people.Height DESC LIMIT 1 
 SELECT avg(Earnings) FROM poker_player WHERE Height > 200 
 SELECT avg(Earnings) FROM poker_player WHERE People_ID > 200 
 SELECT Name FROM poker_player ORDER BY Earnings DESC 
 SELECT Name FROM poker_player ORDER BY Earnings DESC 
 SELECT Nationality,        COUNT(*) FROM people GROUP BY Nationality 
 SELECT Nationality,        count(*) FROM people GROUP BY Nationality 
 SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1 
 SELECT Nationality FROM people GROUP BY Nationality ORDER BY count(*) DESC LIMIT 1 
 SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*) >= 2 
 SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*) >= 2 
 SELECT Name,        Birth_Date FROM people ORDER BY Name ASC 
 SELECT Name,        Birth_Date FROM people ORDER BY Name 
 SELECT Name FROM people WHERE Nationality!= "Russia" 
 SELECT Name FROM people WHERE Nationality!= 'Russia' 
 SELECT Name FROM people WHERE People_ID NOT IN     (SELECT People_ID      FROM poker_player) 
 SELECT Name FROM people WHERE People_ID NOT IN     (SELECT People_ID      FROM poker_player) 
 SELECT count(DISTINCT Nationality) FROM people 
 SELECT count(DISTINCT Nationality) FROM people 
 SELECT count(*) FROM AREA_CODE_STATE 
 SELECT contestant_number,        contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC 
 SELECT vote_id,        phone_number,        state FROM VOTES 
 SELECT max(area_code),        min(area_code) FROM AREA_CODE_STATE 
 SELECT votes.created FROM votes JOIN states ON votes.state = states.state WHERE states.state = 'CA' ORDER BY votes.created DESC LIMIT 1 
 SELECT contestant_name FROM contestants EXCEPT SELECT contestant_name FROM contestants WHERE contestant_name = 'Jessie Alloway' 
 SELECT DISTINCT state,                 created FROM votes 
 SELECT DISTINCT contestant_number,                 contestant_name FROM votes GROUP BY contestant_number HAVING count(*) >= 2 
 SELECT contestant_number,        contestant_name FROM contestants ORDER BY votes LIMIT 1 
 SELECT count(*) FROM votes WHERE state = 'NY'   OR state = 'CA' 
 SELECT count(*) FROM CONTESTANTS WHERE contestant_number NOT IN     (SELECT contestant_number      FROM VOTES) 
 SELECT area_code FROM VOTES GROUP BY area_code ORDER BY count(*) DESC LIMIT 1 
 SELECT votes.created,        votes.state,        votes.phone_number FROM votes JOIN CONTESTANTS ON votes.contestant_number = CONTESTANTS.contestant_number WHERE CONTESTANTS.contestant_name = 'Tabatha Gehling' 
 SELECT DISTINCT AREA_CODE_STATE.area_code FROM VOTES JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE CONTESTANTS.contestant_name = 'Tabatha Gehling' INTERSECT   SELECT DISTINCT AREA_CODE_STATE.area_code   FROM VOTES   JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE CONTESTANTS.contestant_name = 'Kelly Clauss' 
 SELECT contestant_name FROM contestants WHERE contestant_name LIKE '%Al%' 
 SELECT name FROM country WHERE indep_year > 1950 
 SELECT name FROM country WHERE indep_year > 1950 
 SELECT count(*) FROM country WHERE governmentform = 'Republic' 
 SELECT count(*) FROM country WHERE governmentform = 'Republic' 
 SELECT sum(surfaceArea) FROM country WHERE region = 'Caribbean' 
 SELECT sum(surfacearea) FROM country WHERE region = 'Caribbean' 
 SELECT Continent FROM country WHERE Name = "Anguilla" 
 SELECT Continent FROM country WHERE Name = "Anguilla" 
 SELECT region FROM city WHERE name = "kabul" 
 SELECT region FROM country WHERE name = "kabul" 
 SELECT language FROM countrylanguage WHERE countrycode = "ar"   AND percentage =     (SELECT max(percentage)      FROM countrylanguage      WHERE countrycode = "ar") 
 SELECT language FROM countrylanguage WHERE countrycode = "ar"   AND percentage =     (SELECT percentage      FROM countrylanguage      WHERE countrycode = "ar") ORDER BY percentage DESC LIMIT 1 
 SELECT population,        lifeexpectancy FROM country WHERE name = 'Brazil' 
 SELECT population,        lifeexpectancy FROM country WHERE name = "Brazil"; 
 SELECT region,        population FROM country WHERE name = "angola" 
 SELECT region,        population FROM country WHERE name = "angola" 
 SELECT avg(LifeExpectancy) FROM country WHERE Region = "Central Africa" 
 SELECT avg(LifeExpectancy) FROM country WHERE Region = "Central Africa" 
 SELECT name FROM country WHERE continent = 'Asia'   AND lifeexpectancy =     (SELECT min(lifeexpectancy)      FROM country      WHERE continent = 'Asia') 
 SELECT name FROM country WHERE continent = 'Asia'   AND lifeexpectancy =     (SELECT min(lifeexpectancy)      FROM country      WHERE continent = 'Asia') 
 SELECT sum(population),        max(gnp) FROM country WHERE continent = 'Asia' 
 SELECT population,        max(GNP) FROM country WHERE continent = 'Asia' GROUP BY population 
 SELECT avg(LifeExpectancy) FROM country WHERE Continent = 'Africa'   AND GovernmentForm = 'Republic' 
 SELECT avg(LifeExpectancy) FROM country WHERE Continent = 'Africa'   AND GovernmentForm = 'Republic' 
 SELECT sum(surfaceArea) FROM country WHERE continent = 'Asia' INTERSECT   SELECT sum(surfaceArea)   FROM country WHERE continent = 'Europe' 
 SELECT sum(surfaceArea) FROM country WHERE continent = 'Asia'   OR continent = 'Europe' 
 SELECT Population FROM city WHERE District = "Gelderland" 
 SELECT sum(Population) FROM city WHERE District = "Gelderland" 
 SELECT avg(GNP),        sum(Population) FROM country WHERE GovernmentForm = 'US' 
 SELECT GNP,        population FROM country WHERE governmentform = 'Territory' 
 SELECT count(DISTINCT language) FROM countrylanguage 
 SELECT count(DISTINCT language) FROM countrylanguage 
 SELECT count(DISTINCT governmentform) FROM country WHERE continent = 'Africa' 
 SELECT count(DISTINCT governmentform) FROM country WHERE continent = 'Africa' 
 SELECT count(*) FROM countrylanguage WHERE countrycode = "ar" 
 SELECT count(*) FROM countrylanguage WHERE countrycode = "ar"   AND language = "english"   OR language = "papi" 
 SELECT count(*) FROM countrylanguage WHERE countrycode = 'AF'   AND isofficial = 'yes' 
 SELECT count(*) FROM countrylanguage WHERE countrycode = "AFG"   AND isofficial = "yes" 
 SELECT name FROM country WHERE name IN     (SELECT countryname      FROM countrylanguage      GROUP BY countryname      ORDER BY count(*) DESC      LIMIT 1) 
 SELECT name FROM country WHERE name IN     (SELECT countryname      FROM countrylanguage      GROUP BY countryname      ORDER BY count(*) DESC      LIMIT 1) 
 SELECT continent FROM country GROUP BY continent ORDER BY count(*) DESC LIMIT 1 
 SELECT continent FROM country GROUP BY continent ORDER BY count(*) DESC LIMIT 1 
 SELECT count(*) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.name = 'Netherlands' INTERSECT   SELECT count(*)   FROM country   JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.name = 'English' 
 SELECT count(*) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE language = 'english' INTERSECT   SELECT count(*)   FROM country   JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE language = 'dutch' 
 SELECT name FROM country WHERE name IN     (SELECT countrycode      FROM countrylanguage      WHERE language = 'english' INTERSECT        SELECT countrycode        FROM countrylanguage WHERE language = 'french') 
 SELECT name FROM country WHERE name IN     (SELECT countrycode      FROM countrylanguage      WHERE language = 'english' INTERSECT        SELECT countrycode        FROM countrylanguage WHERE language = 'french') 
 SELECT name FROM country WHERE name IN     (SELECT countrycode      FROM countrylanguage      WHERE language = 'english' INTERSECT        SELECT countrycode        FROM countrylanguage WHERE language = 'french') 
 SELECT name FROM country WHERE language = 'english' INTERSECT   SELECT name   FROM country   WHERE language = 'french' 
 SELECT count(DISTINCT continent) FROM country WHERE language = 'Chinese' 
 SELECT count(*) FROM country WHERE language = 'Chinese'   AND continent = 'Asia' 
 SELECT Region FROM country WHERE Language = 'English'   OR Language = 'Dutch' 
 SELECT Region FROM country WHERE Language = 'Dutch'   OR Language = 'English' 
 SELECT name FROM country WHERE language = 'english'   OR language = 'dutch' 
 SELECT countrycode FROM countrylanguage WHERE language = 'english'   OR language = 'dutch' 
 SELECT language FROM countrylanguage WHERE continent = 'Asia' GROUP BY language ORDER BY count(*) DESC LIMIT 1 
 SELECT language FROM countrylanguage GROUP BY language ORDER BY count(*) DESC LIMIT 1 
 SELECT language FROM countrylanguage WHERE countrycode = (SELECT code                     FROM country                     WHERE governmentform ='republic') GROUP BY language HAVING count(*) = 1 
 SELECT language FROM countrylanguage WHERE countrycode = (SELECT code                      FROM country                      WHERE governmentform ='republic') GROUP BY language HAVING count(*) = 1 
 SELECT city.name FROM city JOIN countrylanguage ON city.id = countrylanguage.id WHERE countrylanguage.language = 'english' ORDER BY city.population DESC LIMIT 1 
 SELECT city.name FROM city JOIN countrylanguage ON city.id = countrylanguage.id WHERE countrylanguage.language = 'english' GROUP BY city.id ORDER BY city.population DESC LIMIT 1 
 SELECT name,        population,        lifeexpectancy FROM country WHERE surfacearea =     (SELECT MAX (surfacearea)      FROM country)   AND continent = 'Asia' 
 SELECT name,        population,        lifeexpectancy FROM country WHERE surfacearea =     (SELECT MAX (surfacearea)      FROM country)   AND continent = 'Asia' 
 SELECT avg(LifeExpectancy) FROM country WHERE countrycode NOT IN     (SELECT countrycode      FROM countrylanguage      WHERE language = 'english') 
 SELECT avg(LifeExpectancy) FROM country WHERE countrycode NOT IN     (SELECT countrycode      FROM countrylanguage      WHERE language = 'english') 
 SELECT sum(population) FROM country WHERE name NOT IN     (SELECT name      FROM country      WHERE language = 'english') 
 SELECT count(*) FROM country WHERE name NOT IN     (SELECT name      FROM country      WHERE language = 'english') 
 SELECT countrylanguage.language FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = 'Beatrix' 
 SELECT countrylanguage.language FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = 'Beatrix' 
 SELECT count(DISTINCT countrylanguage.language) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.indepyear < 1930 
 SELECT count(DISTINCT countrylanguage.language) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.foundingyear < 1930 
 SELECT name FROM country WHERE surfacearea >     (SELECT max(surfacearea)      FROM country      WHERE continent = 'Europe') 
 SELECT name FROM country WHERE surfacearea >     (SELECT max(surfacearea)      FROM country      WHERE continent = 'Europe') 
 SELECT name FROM country WHERE continent = 'Africa'   AND population <     (SELECT min(population)      FROM country      WHERE continent = 'Asia') 
 SELECT name FROM country WHERE population <     (SELECT min(population)      FROM country      WHERE continent = 'Asia')   AND continent = 'Africa' 
 SELECT name FROM country WHERE continent = 'Asia'   AND population >     (SELECT max(population)      FROM country      WHERE continent = 'Africa') 
 SELECT name FROM country WHERE population >     (SELECT max(population)      FROM country      WHERE continent = 'Africa')   AND continent = 'Asia' 
 SELECT CountryCode FROM countrylanguage WHERE Language!= 'English' 
 SELECT CountryCode FROM countrylanguage WHERE Language!= 'English' 
 SELECT CountryCode FROM countrylanguage WHERE Language!= 'English' 
 SELECT CountryCode FROM countrylanguage WHERE Language!= 'English' 
 SELECT code FROM country WHERE governmentform!= 'Republic' EXCEPT SELECT code FROM country WHERE language = 'english' 
 SELECT Code FROM country EXCEPT SELECT Code FROM country WHERE GovernmentForm = 'Republic'   AND Language = 'English' 
 SELECT city.name FROM city JOIN country ON city.countrycode = country.code WHERE country.name IN     (SELECT country.name      FROM country      JOIN countrylanguage ON country.code = countrylanguage.countrycode      WHERE countrylanguage.language!= 'english')   AND country.continent = 'Europe' 
 SELECT city.name FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode WHERE countrylanguage.language!= 'english'   AND country.name = 'europe' 
 SELECT DISTINCT city.name FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode WHERE countrylanguage.language = 'Chinese'   AND country.name IN     (SELECT country.name      FROM country      JOIN countrylanguage ON country.code = countrylanguage.countrycode      WHERE countrylanguage.language = 'Chinese') 
 SELECT DISTINCT city.name FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode WHERE countrylanguage.language = 'Chinese'   AND country.name = 'Asia' 
 SELECT name,        indepyear,        surfacearea FROM country ORDER BY population LIMIT 1 
 SELECT name,        indepyear,        surfacearea FROM country ORDER BY population LIMIT 1 
 SELECT population,        name,        headofstate FROM country ORDER BY surfacearea DESC LIMIT 1 
 SELECT name,        population,        headofstate FROM country ORDER BY surfacearea DESC LIMIT 1 
 SELECT country.name,        count(*) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.name HAVING count(*) >= 3 
 SELECT country.name,        count(*) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.code HAVING count(*) > 2 
 SELECT count(*),        district FROM city GROUP BY district HAVING population >     (SELECT avg(population)      FROM city) 
 SELECT city.District,        count(*) FROM city JOIN city ON city.ID = city.ID GROUP BY city.District HAVING avg(Population) > 100 
 SELECT governmentForm,        sum(population) FROM country WHERE lifeexpectancy >     (SELECT avg(lifeexpectancy)      FROM country) GROUP BY governmentForm 
 SELECT governmentForm,        sum(population) FROM country WHERE lifeexpectancy > 72 GROUP BY governmentForm 
 SELECT avg(LifeExpectancy),        sum(Population) FROM country WHERE LifeExpectancy < 72 GROUP BY Continent 
 SELECT COUNT(*),        avg(LifeExpectancy),        continent FROM country WHERE LifeExpectancy < 72 GROUP BY continent 
 SELECT name,        surfacearea FROM country ORDER BY surfacearea DESC LIMIT 5 
 SELECT name,        surfacearea FROM country ORDER BY surfacearea DESC LIMIT 5 
 SELECT name FROM country ORDER BY population DESC LIMIT 3 
 SELECT name FROM country ORDER BY population DESC LIMIT 3 
 SELECT name FROM country ORDER BY population LIMIT 3 
 SELECT name FROM country ORDER BY population LIMIT 3 
 SELECT count(*) FROM country WHERE continent = 'Asia' 
 SELECT count(*) FROM country WHERE continent = 'Asia' 
 SELECT name FROM country WHERE continent = 'Europe'   AND population = 80000 
 SELECT name FROM country WHERE continent = 'Europe'   AND population = 80000 
 SELECT sum(population),        avg(surfaceArea) FROM country WHERE continent = 'North America'   AND surfaceArea > 3000 
 SELECT SUM(Population),        AVG(SurfaceArea) FROM country WHERE Continent = 'North America'   AND SurfaceArea > 3000 
 SELECT name FROM city WHERE population BETWEEN 160000 AND 900000 
 SELECT name FROM city WHERE population BETWEEN 160000 AND 900000 
 SELECT language FROM countrylanguage GROUP BY language ORDER BY count(*) DESC LIMIT 1 
 SELECT language FROM countrylanguage GROUP BY language ORDER BY count(*) DESC LIMIT 1 
 SELECT language FROM countrylanguage ORDER BY percentage DESC LIMIT 1 
 SELECT CountryCode,        Language FROM countrylanguage ORDER BY Percentage DESC LIMIT 1 
 SELECT count(*) FROM countrylanguage WHERE language ='spanish'   AND percentage =     (SELECT max(percentage)      FROM countrylanguage      WHERE language ='spanish') 
 SELECT count(*) FROM countrylanguage WHERE language ='spanish' 
 SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish'   AND Percentage =     (SELECT MAX(Percentage)      FROM countrylanguage      WHERE Language = 'Spanish') 
 SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' 
 SELECT count(*) FROM conductor 
 SELECT count(*) FROM conductor 
 SELECT Name FROM conductor ORDER BY Age ASC 
 SELECT Name FROM conductor ORDER BY Age 
 SELECT Name FROM conductor WHERE Nationality!= "USA" 
 SELECT Name FROM conductor WHERE Nationality!= "USA" 
 SELECT Record_Company FROM orchestra ORDER BY YEAR_OF_FOUNDED DESC 
 SELECT Record_Company FROM orchestra ORDER BY YEAR_OF_FOUNDED DESC 
 SELECT avg(Attendance) FROM show 
 SELECT avg(Attendance) FROM show 
 SELECT max(Share),        min(Share) FROM performance WHERE TYPE!= "Live final" 
 SELECT max(share),        min(share) FROM performance WHERE TYPE!= "Live final" 
 SELECT count(DISTINCT nationality) FROM conductor 
 SELECT count(DISTINCT nationality) FROM conductor 
 SELECT Name FROM conductor ORDER BY Year_of_Work DESC 
 SELECT Name FROM conductor ORDER BY YEAR_OF_WORK DESC 
 SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1 
 SELECT conductor.Name FROM conductor JOIN conductor ON conductor.Conductor_ID = conductor.Conductor_ID GROUP BY conductor.Name ORDER BY count(*) DESC LIMIT 1 
 SELECT conductor.Name,        orchestra.Orchestra FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID 
 SELECT conductor.Name,        orchestra.Orchestra FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID 
 SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY conductor.Name HAVING count(*) > 1 
 SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY conductor.Name HAVING count(*) > 1 
 SELECT conductor.name FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id GROUP BY conductor.name ORDER BY count(*) DESC LIMIT 1 
 SELECT conductor.name FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id GROUP BY conductor.name ORDER BY count(*) DESC LIMIT 1 
 SELECT conductor.name FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id WHERE orchestra.year_of_founded > 2008 
 SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID WHERE orchestra.year_of_founded > 2008 
 SELECT Record_Company,        count(*) FROM orchestra GROUP BY Record_Company 
 SELECT Record_Company,        count(*) FROM orchestra GROUP BY Record_Company 
 SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY count(*) ASC 
 SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY count(*) DESC 
 SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1 
 SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY count(*) DESC LIMIT 1 
 SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN     (SELECT Orchestra_ID      FROM performance) 
 SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN     (SELECT Orchestra_ID      FROM performance) 
 SELECT Record_Company FROM orchestra WHERE Record_Company IN     (SELECT Record_Company      FROM orchestra      WHERE YEAR_OF_FOUNDED < 2003 INTERSECT        SELECT Record_Company        FROM orchestra WHERE YEAR_OF_FOUNDED > 2003) 
 SELECT Record_Company FROM orchestra WHERE Record_Company IN     (SELECT Record_Company      FROM orchestra      WHERE YEAR_OF_FOUNDED < 2003 INTERSECT        SELECT Record_Company        FROM orchestra WHERE YEAR_OF_FOUNDED > 2003) 
 SELECT count(*) FROM orchestra WHERE major_record_format = "CD"   OR major_record_format = "DVD" 
 SELECT count(*) FROM orchestra WHERE major_record_format = 'CD'   OR major_record_format = 'DVD' 
 SELECT orchestra.year_of_founded FROM orchestra JOIN performance ON orchestra.orchestra_id = performance.orchestra_id GROUP BY performance.orchestra_id HAVING count(*) > 1 
 SELECT YEAR_OF_FOUNDED FROM orchestra GROUP BY YEAR_OF_FOUNDED HAVING COUNT(*) > 1 
 SELECT count(*) FROM Highschooler 
 SELECT count(*) FROM Highschooler 
 SELECT name,        grade FROM Highschooler 
 SELECT name,        grade FROM Highschooler 
 SELECT DISTINCT grade FROM Highschooler 
 SELECT grade FROM Highschooler 
 SELECT grade FROM Highschooler WHERE name = "Kyle"; 
 SELECT grade FROM Highschooler WHERE name = "Kyle" 
 SELECT name FROM Highschooler WHERE grade = 10 
 SELECT name FROM Highschooler WHERE grade = 10 
 SELECT ID FROM Highschooler WHERE name = "Kyle" 
 SELECT ID FROM Highschooler WHERE name = "Kyle"; 
 SELECT count(*) FROM Highschooler WHERE grade = 9   OR grade = 10 
 SELECT count(*) FROM Highschooler WHERE grade = 9   OR grade = 10 
 SELECT grade,        count(*) FROM Highschooler GROUP BY grade 
 SELECT grade,        count(*) FROM Highschooler GROUP BY grade 
 SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1 
 SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1 
 SELECT grade FROM Highschooler GROUP BY grade HAVING count(*) >= 4 
 SELECT grade FROM Highschooler GROUP BY grade HAVING count(*) >= 4 
 SELECT student_id,        count(*) FROM Friend GROUP BY student_id 
 SELECT count(*),        student_id FROM Friend GROUP BY student_id 
 SELECT name,        count(*) FROM Friend GROUP BY name 
 SELECT name,        count(*) FROM Friend GROUP BY name 
 SELECT name FROM Highschooler ORDER BY count(*) DESC LIMIT 1 
 SELECT name FROM Highschooler ORDER BY count(*) DESC LIMIT 1 
 SELECT name FROM Highschooler WHERE ID IN     (SELECT student_id      FROM Friend      GROUP BY student_id      HAVING count(*) >= 3) 
 SELECT name FROM Highschooler GROUP BY name HAVING count(*) >= 3 
 SELECT DISTINCT Friend.friend_id FROM Friend JOIN Highschooler ON Friend.friend_id = Highschooler.ID WHERE Highschooler.name = "Kyle" 
 SELECT name FROM Friend WHERE friend_id = 1 
 SELECT count(*) FROM Friend WHERE student_id = 'Kyle' 
 SELECT count(*) FROM Friend WHERE student_id = "Kyle" 
 SELECT ID FROM Highschooler EXCEPT SELECT student_id FROM Friend 
 SELECT ID FROM Highschooler EXCEPT SELECT DISTINCT student_id FROM Friend 
 SELECT name FROM Highschooler EXCEPT SELECT DISTINCT name FROM Friend 
 SELECT name FROM Highschooler EXCEPT SELECT DISTINCT student_id FROM Friend 
 SELECT student_id FROM Friend WHERE student_id IN     (SELECT student_id      FROM Friend      WHERE friend_id IN          (SELECT student_id           FROM Likes           WHERE liked_id IN               (SELECT student_id                FROM Likes                WHERE liked_id IN                   (SELECT student_id                    FROM Friend                    WHERE student_id IN                        (SELECT student_id                         FROM Friend                         WHERE friend_id IN                             (SELECT student_id                              FROM Friend                              WHERE student_id IN                                  (SELECT student_id                                   FROM Friend                                   WHERE friend_id IN                                       (SELECT student_id                                        FROM Likes                                        WHERE liked_id IN                                            (SELECT student_id                                             FROM Likes                                             WHERE liked_id IN                                                 (SELECT student_id                                                  FROM Friend                                                  WHERE student_id IN                                                      (SELECT student_id                                                       FROM Friend                                                       WHERE friend_id IN                                                           (SELECT student_id                    FROM Friend                    WHERE friend_id IN                        (SELECT student_id                         FROM Friend                         WHERE student_id IN                             (SELECT student_id                              FROM Friend                              WHERE friend_id IN                                  (SELECT student_id                                   FROM Friend                                  
 SELECT student_id FROM Friend INTERSECT SELECT student_id FROM Likes 
 SELECT name FROM Highschooler EXCEPT SELECT name FROM Highschooler WHERE ID IN     (SELECT student_id      FROM Friend) UNION SELECT name FROM Highschooler JOIN Likes ON Highschooler.ID = Likes.student_id WHERE Likes.liked_id IN     (SELECT student_id      FROM Friend) 
 SELECT name FROM Highschooler WHERE ID IN     (SELECT student_id      FROM Friend      WHERE student_id IN          (SELECT student_id           FROM Likes)   AND student_id IN     (SELECT student_id      FROM Likes) 
 SELECT student_id,        count(*) FROM Likes GROUP BY student_id 
 SELECT student_id,        count(*) FROM Likes GROUP BY student_id 
 SELECT Highschooler.name,        COUNT(*) FROM Likes JOIN Highschooler ON Likes.student_id = Highschooler.id GROUP BY Likes.student_id 
 SELECT Highschooler.name,        COUNT(*) FROM Likes JOIN Highschooler ON Likes.student_id = Highschooler.id GROUP BY Likes.student_id 
 SELECT name FROM Highschooler ORDER BY count(*) DESC LIMIT 1 
 SELECT name FROM Likes GROUP BY name ORDER BY count(*) DESC LIMIT 1 
 SELECT name FROM Highschooler WHERE ID IN     (SELECT student_id      FROM Likes) GROUP BY student_id HAVING count(*) >= 2 
 SELECT name FROM Highschooler WHERE ID IN     (SELECT student_id      FROM Likes      GROUP BY student_id      HAVING count(*) >= 2) 
 SELECT name FROM Highschooler WHERE grade > 5   AND friend_id NOT IN     (SELECT friend_id      FROM Friend) GROUP BY name HAVING count(*) >= 2 
 SELECT name FROM Highschooler WHERE grade > 5   AND friend_id NOT IN     (SELECT friend_id      FROM Friend) GROUP BY friend_id HAVING count(*) >= 2 
 SELECT count(*) FROM Likes WHERE student_id = 1 
 SELECT count(*) FROM Likes JOIN Highschooler ON Likes.student_id = Highschooler.id WHERE Highschooler.name = "Kyle" 
 SELECT avg(grade) FROM Highschooler WHERE ID IN     (SELECT student_id      FROM Friend) 
 SELECT avg(grade) FROM Highschooler WHERE ID IN     (SELECT student_id      FROM Friend) 
 SELECT min(grade) FROM Highschooler WHERE ID NOT IN     (SELECT student_id      FROM Friend) 
 SELECT grade FROM Highschooler WHERE ID NOT IN     (SELECT student_id      FROM Friend) 
 SELECT state FROM Owners INTERSECT SELECT state FROM Professionals 
 SELECT state FROM Owners INTERSECT SELECT state FROM Professionals 
 SELECT avg(age) FROM Dogs WHERE dog_id IN     (SELECT dog_id      FROM Treatments) 
 SELECT avg(age) FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id 
 SELECT Professionals.professional_id,        Professionals.last_name,        Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id HAVING count(*) > 2 UNION SELECT Professionals.professional_id,        Professionals.last_name,        Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id HAVING count(*) > 2 
 SELECT Professionals.professional_id,        Professionals.last_name,        Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id HAVING count(*) > 2 UNION SELECT Professionals.professional_id,        Professionals.last_name,        Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id HAVING count(*) > 2 JOIN Professionals ON Professionals.professional_id = Professionals.professional_id WHERE Professionals.state = "Indiana" 
 SELECT name FROM dogs EXCEPT SELECT dogs.name FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id WHERE treatments.cost_of_treatment > 1000 
 SELECT name FROM dogs EXCEPT SELECT name FROM dogs WHERE cost_of_treatment > 1000 
 SELECT first_name FROM Professionals INTERSECT SELECT first_name FROM Owners INTERSECT SELECT first_name FROM Dogs 
 SELECT first_name FROM Professionals INTERSECT SELECT first_name FROM Owners INTERSECT SELECT first_name FROM Dogs 
 SELECT professional_id,        role_code,        email_address FROM Professionals EXCEPT SELECT Professionals.professional_id,        Professionals.role_code,        Professionals.email_address FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.treatment_id = "dogs" 
 SELECT professional_id,        role_code,        email_address FROM Professionals EXCEPT SELECT Professionals.professional_id,        Professionals.role_code,        Professionals.email_address FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.treatment_id = "dogs" 
 SELECT Owners.owner_id,        Owners.first_name,        Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id GROUP BY Owners.owner_id ORDER BY count(*) DESC LIMIT 1 
 SELECT Owners.owner_id,        Owners.first_name,        Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id GROUP BY Owners.owner_id ORDER BY count(*) DESC LIMIT 1 
 SELECT Professionals.professional_id,        Professionals.role_code,        Professionals.first_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id HAVING count(*) >= 2 
 SELECT Professionals.professional_id,        Professionals.role_code,        Professionals.first_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id HAVING count(*) >= 2 
 SELECT breed_name FROM breeds GROUP BY breed_name ORDER BY count(*) DESC LIMIT 1 
 SELECT breed_name FROM Dogs GROUP BY breed_name ORDER BY count(*) DESC LIMIT 1 
 SELECT Owners.owner_id,        Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id ORDER BY count(*) DESC LIMIT 1 
 SELECT owners.owner_id,        owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN treatments ON dogs.dog_id = treatments.dog_id GROUP BY owners.owner_id ORDER BY sum(treatments.treatment_id) DESC LIMIT 1 
 SELECT treatment_type_description FROM treatments ORDER BY sum(cost_of_treatment) LIMIT 1 
 SELECT treatment_type_description FROM treatments ORDER BY sum(cost_of_treatment) ASC LIMIT 1 
 SELECT owners.owner_id,        owners.zip_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN treatments ON dogs.dog_id = treatments.dog_id GROUP BY owners.owner_id ORDER BY sum(treatments.cost_of_treatment) DESC LIMIT 1 
 SELECT owners.owner_id,        owners.zip_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN treatments ON dogs.dog_id = treatments.dog_id GROUP BY owners.owner_id ORDER BY sum(treatments.cost_of_treatment) DESC LIMIT 1 
 SELECT Professionals.cell_number,        Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.cell_number HAVING count(*) >= 2 
 SELECT Professionals.professional_id,        Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id HAVING count(*) >= 2 
 SELECT Professionals.first_name,        Professionals.last_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.cost_of_treatment <     (SELECT avg(cost_of_treatment)      FROM Treatments) 
 SELECT Professionals.first_name,        Professionals.last_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.cost_of_treatment <     (SELECT avg(cost_of_treatment)      FROM Treatments) 
 SELECT Treatments.date_of_treatment,        Professionals.first_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id 
 SELECT Treatments.date_of_treatment,        Professionals.first_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id 
 SELECT treatment_type_description,        cost_of_treatment FROM Treatment_Types UNION SELECT treatment_type_description,        treatment_type_description FROM Treatment_Types 
 SELECT treatment_type_description,        cost_of_treatment FROM Treatments 
 SELECT Owners.first_name,        Owners.last_name,        Dogs.size_code FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id 
 SELECT Owners.first_name,        Owners.last_name,        Dogs.size_code FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id 
 SELECT Owners.first_name,        Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id 
 SELECT Owners.first_name,        Owners.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id 
 SELECT name,        date_of_treatment FROM Dogs WHERE breed_code =     (SELECT breed_code      FROM Dogs      GROUP BY breed_code      ORDER BY count(*) DESC      LIMIT 1) 
 SELECT name,        date_of_treatment FROM Dogs WHERE breed_code =     (SELECT breed_code      FROM Dogs      GROUP BY breed_code      ORDER BY count(*) DESC      LIMIT 1) 
 SELECT Owners.first_name,        Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = "Virginia" 
 SELECT Owners.first_name,        Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = "Virginia" 
 SELECT Dogs.date_arrived,        Dogs.date_departed FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id 
 SELECT Dogs.date_arrived,        Dogs.date_departed FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id 
 SELECT Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id ORDER BY Dogs.age LIMIT 1 
 SELECT Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Dogs.age =     (SELECT min(age)      FROM Dogs) 
 SELECT email_address FROM Professionals WHERE state = "Hawaii"   OR state = "Wisconsin" 
 SELECT email_address FROM Professionals WHERE state = "Hawaii"   OR state = "Wisconsin" 
 SELECT date_arrived,        date_departed FROM Dogs 
 SELECT date_arrived,        date_departed FROM Dogs 
 SELECT count(*) FROM Treatments 
 SELECT count(*) FROM Treatments 
 SELECT count(*) FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id WHERE professionals.name = 'dogs' 
 SELECT count(*) FROM treatments WHERE treatment_id IN     (SELECT treatment_id      FROM treatments      WHERE professional_id IN          (SELECT professional_id           FROM treatments           WHERE treatment_id IN               (SELECT treatment_id                FROM treatments                WHERE treatment_id IN                    (SELECT treatment_id                     FROM dogs))) 
 SELECT Professionals.role_code,        Professionals.street,        Professionals.city,        Professionals.state FROM Professionals JOIN Professionals ON Professionals.professional_id = Professionals.professional_id WHERE Professionals.city LIKE '%West%' 
 SELECT Professionals.role_code,        Professionals.street,        Professionals.city,        Professionals.state FROM Professionals JOIN Professionals ON Professionals.professional_id = Professionals.professional_id WHERE Professionals.city LIKE '%West%' 
 SELECT first_name,        last_name,        email_address FROM Owners WHERE state LIKE '%North%' 
 SELECT Owners.first_name,        Owners.last_name,        Owners.email_address FROM Owners JOIN state ON Owners.state = state.state WHERE state.state LIKE '%North%' 
 SELECT count(*) FROM Dogs WHERE age <     (SELECT avg(age)      FROM Dogs) 
 SELECT count(*) FROM Dogs WHERE age <     (SELECT avg(age)      FROM Dogs) 
 SELECT max(cost_of_treatment) FROM Treatments WHERE date_of_treatment =     (SELECT max(date_of_treatment)      FROM Treatments) 
 SELECT cost_of_treatment FROM treatments ORDER BY date_of_treatment DESC LIMIT 1 
 SELECT count(*) FROM dogs WHERE dog_id NOT IN     (SELECT dog_id      FROM treatments) 
 SELECT count(*) FROM dogs WHERE dog_id NOT IN     (SELECT dog_id      FROM treatments) 
 SELECT count(*) FROM owners WHERE owner_id NOT IN     (SELECT owner_id      FROM dogs) 
 SELECT count(*) FROM owners WHERE owner_id NOT IN     (SELECT owner_id      FROM dogs) 
 SELECT count(*) FROM Professionals EXCEPT SELECT Professionals.professional_id FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.treatment_id = "dog" 
 SELECT count(*) FROM Professionals EXCEPT SELECT Professionals.professional_id FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.treatment_id = "dog" 
 SELECT name,        age,        weight FROM Dogs WHERE abandoned_yn = '1' 
 SELECT name,        age,        weight FROM Dogs WHERE abandoned_yn = '1' 
 SELECT avg(age) FROM Dogs 
 SELECT avg(age) FROM Dogs 
 SELECT age FROM Dogs ORDER BY age DESC LIMIT 1 
 SELECT age FROM Dogs ORDER BY age DESC LIMIT 1 
 SELECT charge_type,        charge_amount FROM Charges GROUP BY charge_type 
 SELECT charge_type,        charge_amount FROM Charges 
 SELECT charge_amount FROM Charges ORDER BY charge_amount DESC LIMIT 1 
 SELECT charge_amount FROM Charges ORDER BY charge_amount DESC LIMIT 1 
 SELECT email_address,        cell_number,        home_phone FROM Professionals 
 SELECT email_address,        cell_number,        home_phone FROM Professionals 
 SELECT breed_code,        size_code FROM Dogs 
 SELECT DISTINCT breed_code,                 size_code FROM Dogs 
 SELECT Professionals.first_name,        Treatment_Types.treatment_type_description FROM Professionals JOIN Treatment_Types ON Professionals.professional_id = Treatment_Types.professional_id 
 SELECT Professionals.first_name,        Professionals.first_name,        Professionals.last_name,        Professionals.first_name,        Professionals.last_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id 
 SELECT count(*) FROM singer 
 SELECT count(*) FROM singer 
 SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC 
 SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC 
 SELECT Birth_Year,        Citizenship FROM singer 
 SELECT Birth_Year,        Citizenship FROM singer 
 SELECT Name FROM singer WHERE Citizenship!= "France" 
 SELECT Name FROM singer WHERE Citizenship!= 'France' 
 SELECT Name FROM singer WHERE Birth_Year = 1948   OR Birth_Year = 1949 
 SELECT Name FROM singer WHERE Birth_Year = 1948   OR Birth_Year = 1949 
 SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1 
 SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1 
 SELECT Citizenship,        COUNT(*) FROM singer GROUP BY Citizenship 
 SELECT Citizenship,        COUNT(*) FROM singer GROUP BY Citizenship 
 SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1 
 SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1 
 SELECT Citizenship,        max(Net_Worth_Millions) FROM singer GROUP BY Citizenship 
 SELECT max(Net_Worth_Millions),        Citizenship FROM singer GROUP BY Citizenship 
 SELECT title,        name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID 
 SELECT Song.Title,        singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID 
 SELECT DISTINCT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000 
 SELECT DISTINCT Name FROM singer WHERE Sales > 300000 
 SELECT Name FROM singer GROUP BY Name HAVING COUNT(*) > 1 
 SELECT Name FROM singer GROUP BY Name HAVING COUNT(*) > 1 
 SELECT singer.Name,        sum(song.Sales) FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Name 
 SELECT sum(sales),        name FROM singer GROUP BY name 
 SELECT Name FROM singer EXCEPT SELECT singer.Name FROM song JOIN singer ON song.Singer_ID = singer.Singer_ID 
 SELECT Name FROM singer WHERE Singer_ID NOT IN     (SELECT Singer_ID      FROM song) 
 SELECT CITIZENSHIP FROM singer WHERE Birth_Year < 1945 INTERSECT   SELECT CITIZENSHIP   FROM singer WHERE Birth_Year > 1955 
 SELECT CITIZENSHIP FROM singer WHERE Birth_Year < 1945 INTERSECT   SELECT CITIZENSHIP   FROM singer WHERE Birth_Year > 1955 
 SELECT count(*) FROM Other_Available_Features 
 SELECT Ref_Feature_Types.feature_type_name FROM Other_Available_Features JOIN Ref_Feature_Types ON Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code WHERE Other_Available_Features.feature_name = "AirCon" 
 SELECT property_type_description FROM Ref_Property_Types 
 SELECT DISTINCT property_name FROM Properties WHERE property_type_code = 'House'   OR property_type_code = 'Apartment'   AND room_count > 1 
