 SELECT count(*) FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Singer_ID JOIN concert ON concert.Stadium_ID = stadium.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID WHERE singer.Is_male = 1 
 SELECT count(*) FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Singer_ID JOIN concert ON concert.Stadium_ID = stadium.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID 
 SELECT singer.Name,        singer.Country,        singer.age FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Singer_ID JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID ORDER BY singer.age DESC 
 SELECT singer.Name,        singer.Country,        singer.age FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Singer_ID JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID ORDER BY singer.age DESC 
 SELECT avg(singer.age),        min(singer.age),        max(singer.age) FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Singer_ID JOIN concert ON concert.Stadium_ID = stadium.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID WHERE singer.Country = "France" 
 SELECT avg(singer.age),        min(singer.age),        max(singer.age) FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Singer_ID JOIN concert ON concert.Stadium_ID = stadium.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID WHERE singer.Country = "France" 
 SELECT concert.concert_name,        singer_in_concert.year FROM stadium JOIN singer ON stadium.stadium_id = singer.singer_id JOIN concert ON stadium.stadium_id = concert.stadium_id JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id ORDER BY singer.age LIMIT 1 
 SELECT concert.concert_name,        singer_in_concert.song_release_year FROM stadium JOIN singer ON stadium.stadium_id = singer.singer_id JOIN concert ON concert.stadium_id = stadium.stadium_id JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id ORDER BY singer.age LIMIT 1 
 SELECT DISTINCT singer.Country FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Singer_ID WHERE singer.age > 20 
 SELECT DISTINCT singer.Country FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Singer_ID WHERE singer.age > 20 
 SELECT singer.Country,        COUNT(*) FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Singer_ID JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID GROUP BY singer.Country 
 SELECT COUNT(*),        singer.Country FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Singer_ID JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID GROUP BY singer.Country 
 SELECT concert.Song_Name FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Singer_ID JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID WHERE singer.Age > stadium.Average_age 
 SELECT concert.Song_Name FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Singer_ID JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID WHERE singer.Age > stadium.Average(Age) 
 SELECT stadium.Location,        stadium.Name FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID WHERE stadium.capacity BETWEEN 5000 AND 10000 
 SELECT stadium.Location,        stadium.Name FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID WHERE stadium.capacity BETWEEN 5000 AND 10000 
 SELECT max(stadium.capacity),        avg(stadium.Average) FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Singer_ID JOIN concert ON concert.Stadium_ID = stadium.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID 
 SELECT avg(stadium.capacity),        max(stadium.capacity) FROM stadium JOIN singer ON stadium.stadium_id = singer.stadium_id JOIN concert ON concert.stadium_id = stadium.stadium_id JOIN singer_in_concert ON singer_in_concert.singer_id = singer.singer_id 
 SELECT stadium.name,        stadium.capacity FROM stadium JOIN singer ON stadium.stadium_id = singer.stadium_id JOIN concert ON concert.stadium_id = stadium.stadium_id JOIN singer_in_concert ON singer_in_concert.singer_id = singer.singer_id WHERE avg(concert.Average) =     (SELECT avg(Average)      FROM stadium) 
 SELECT stadium.name,        stadium.capacity FROM stadium JOIN singer ON stadium.stadium_id = singer.stadium_id JOIN concert ON concert.stadium_id = stadium.stadium_id JOIN singer_in_concert ON singer_in_concert.singer_id = singer.singer_id WHERE avg(concert.Average_attendance) =     (SELECT avg(Average_attendance)      FROM stadium) 
 SELECT count(*) FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Singer_ID JOIN concert ON concert.Stadium_ID = stadium.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID WHERE concert.year = 2014   OR concert.year = 2015 
 SELECT count(*) FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Singer_ID JOIN concert ON concert.Stadium_ID = stadium.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID WHERE concert.year = 2014   OR concert.year = 2015 
 SELECT stadium.name,        count(*) FROM stadium JOIN singer ON stadium.stadium_id = singer.stadium_id JOIN concert ON concert.stadium_id = stadium.stadium_id JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id GROUP BY stadium.stadium_id 
 SELECT count(*),        stadium.name FROM stadium JOIN singer ON stadium.stadium_id = singer.stadium_id JOIN concert ON concert.stadium_id = stadium.stadium_id JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id GROUP BY stadium.name 
 SELECT stadium.name,        stadium.capacity FROM stadium JOIN singer ON stadium.stadium_id = singer.stadium_id JOIN concert ON concert.stadium_id = stadium.stadium_id JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id WHERE concert.year >= 2014 GROUP BY stadium.stadium_id ORDER BY count(*) DESC LIMIT 1 
 SELECT stadium.name,        stadium.capacity FROM stadium JOIN singer ON stadium.stadium_id = singer.stadium_id JOIN concert ON concert.stadium_id = stadium.stadium_id JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id WHERE concert.year > 2013 GROUP BY stadium.stadium_id ORDER BY count(*) DESC LIMIT 1 
 SELECT concert.year FROM stadium JOIN singer ON stadium.stadium_id = singer.stadium_id JOIN concert ON stadium.stadium_id = concert.stadium_id JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id GROUP BY concert.year ORDER BY count(*) DESC LIMIT 1 
 SELECT concert.year FROM stadium JOIN singer ON stadium.stadium_id = singer.stadium_id JOIN concert ON stadium.stadium_id = concert.stadium_id JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id GROUP BY concert.year ORDER BY count(*) DESC LIMIT 1 
 SELECT name FROM stadium EXCEPT SELECT stadium.name FROM stadium JOIN singer_in_concert ON stadium.stadium_id = singer_in_concert.stadium_id JOIN concert ON concert.concert_id = singer_in_concert.concert_id 
 SELECT name FROM stadium EXCEPT SELECT stadium.name FROM stadium JOIN singer_in_concert ON stadium.stadium_id = singer_in_concert.stadium_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id 
 SELECT singer.Country FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Singer_ID JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID WHERE singer.age > 40 INTERSECT   SELECT singer.Country   FROM stadium   JOIN singer ON stadium.Stadium_ID = singer.Singer_ID   JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID   JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID WHERE singer.age < 30 
 SELECT stadium.name FROM stadium EXCEPT SELECT stadium.name FROM stadium JOIN singer_in_concert ON stadium.stadium_id = singer_in_concert.stadium_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE concert.year = 2014 
 SELECT name FROM stadium EXCEPT SELECT stadium.name FROM singer JOIN concert ON singer.Singer_id = singer_in_concert.Singer_id JOIN stadium ON stadium.Stadium_id = concert.Stadium_id WHERE concert.year = 2014 
 SELECT concert.concert_name,        concert.theme,        count(*) FROM stadium JOIN singer ON stadium.stadium_id = singer.singer_id JOIN concert ON concert.stadium_id = stadium.stadium_id JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id GROUP BY concert.concert_id 
 SELECT concert.concert_name,        concert.theme,        count(*) FROM stadium JOIN singer ON stadium.stadium_id = singer.singer_id JOIN concert ON stadium.stadium_id = concert.stadium_id JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id GROUP BY concert.concert_id 
 SELECT singer.Name,        count(*) FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Singer_ID JOIN concert ON concert.Stadium_ID = stadium.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID GROUP BY singer.Name 
 SELECT singer.Name,        count(*) FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Singer_ID JOIN concert ON concert.Stadium_ID = stadium.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID GROUP BY singer.Name 
 SELECT singer.Name FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Singer_ID JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID WHERE concert.year = 2014 
 SELECT singer.Name FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Singer_ID JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID WHERE concert.year = 2014 
 SELECT singer.Name,        singer.Country FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Singer_ID JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID WHERE singer_in_concert.Singer_ID = 1   AND concert.concert_Name LIKE '%Hey%' 
 SELECT singer.Name,        singer.Country FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Singer_ID JOIN concert ON concert.Stadium_ID = stadium.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID WHERE concert.song_name LIKE '%Hey%' 
 SELECT stadium.name,        stadium.location FROM stadium JOIN singer ON stadium.stadium_id = singer.singer_id JOIN concert ON concert.stadium_id = stadium.stadium_id JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id WHERE concert.year = 2014 INTERSECT   SELECT stadium.name,          stadium.location   FROM stadium   JOIN singer ON stadium.stadium_id = singer.singer_id   JOIN concert ON concert.stadium_id = stadium.stadium_id   JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id WHERE concert.year = 2015 
 SELECT stadium.name,        stadium.location FROM stadium JOIN singer_concert ON stadium.stadium_id = singer_concert.stadium_id JOIN concert ON singer_concert.concert_id = concert.concert_id WHERE concert.year = 2014 INTERSECT   SELECT stadium.name,        stadium.location   FROM stadium   JOIN singer_concert ON stadium.stadium_id = singer_concert.stadium_id   JOIN concert ON singer_concert.concert_id = concert.concert_id WHERE concert.year = 2015 
 SELECT count(*) FROM stadium JOIN singer ON stadium.Stadium_ID = singer.Singer_ID JOIN concert ON concert.Stadium_ID = stadium.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID WHERE stadium.Highest = (SELECT MAX (stadium.Highest)                         FROM stadium) 
 SELECT count(*) FROM stadium JOIN singer_in_concert ON stadium.Stadium_ID = singer_in_concert.Stadium_ID JOIN concert ON concert.concert_id = singer_in_concert.concert_id WHERE stadium.capacity =     (SELECT max(capacity)      FROM stadium) 
 SELECT count(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.weight > 10 
 SELECT count(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.weight > 10 
 SELECT Pets.weight FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID ORDER BY Pets.pet_age LIMIT 1 
 SELECT max(pets.weight) FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.age =     (SELECT min(age)      FROM student) 
 SELECT max(pets.weight),        pets.pet_type FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid GROUP BY pets.pet_type 
 SELECT max(pets.pet_type),        pets.pet_type FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid GROUP BY pets.pet_type 
 SELECT count(*) FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.age > 20 
 SELECT count(*) FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.age > 20 
 SELECT count(*) FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.sex = "F"   AND pets.pettype = "Dog" 
 SELECT count(*) FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.sex = "F"   AND pets.pettype = "Dog" 
 SELECT count(DISTINCT Pets.pettype) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID 
 SELECT count(DISTINCT Pets.pettype) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID 
 SELECT Student.fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.pet_type = "Cat"   OR Pets.pet_type = "Dog" 
 SELECT Student.fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.pettype = "Cat"   OR Pets.pettype = "Dog" 
 SELECT Student.fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.pet_type = "Cat" INTERSECT   SELECT Student.fname   FROM Student   JOIN Has_Pet ON Student.StuID = Has_Pet.StuID   JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.pet_type = "Dog" 
 SELECT Student.fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.pet_type = "Cat" INTERSECT   SELECT Student.fname   FROM Student   JOIN Has_Pet ON Student.StuID = Has_Pet.StuID   JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.pet_type = "Dog" 
 SELECT major,        age FROM student EXCEPT SELECT has_pet.stuID,        pets.pet_age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat' 
 SELECT major,        student.age FROM student EXCEPT SELECT major,        student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat' 
 SELECT StuID FROM Student EXCEPT SELECT StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = "Cat" 
 SELECT StuID FROM Student EXCEPT SELECT StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.pettype = "Cat" 
 SELECT Student.fname,        Student.age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.pet_type = "Dog" EXCEPT SELECT Student.fname,        Student.age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.pet_type = "Cat" 
 SELECT Student.fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.pet_type = "Dog" EXCEPT SELECT Student.fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.pet_type = "Cat" 
 SELECT Pets.pet_type,        Pets.weight FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID ORDER BY Pets.pet_age LIMIT 1 
 SELECT Pets.pet_type,        Pets.weight FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID ORDER BY Pets.pet_age LIMIT 1 
 SELECT Pets.pet_id,        Pets.weight FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.pet_age > 1 
 SELECT Pets.pet_id,        Pets.weight FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.age > 1 
 SELECT avg(pets.pet_age),        max(pets.pet_age),        pets.pet_type FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid GROUP BY pets.pet_type 
 SELECT avg(pets.pet_age),        max(pets.pet_age),        pets.pet_type FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid GROUP BY pets.pet_type 
 SELECT avg(Pets.weight),        Pets.pet_type FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID GROUP BY Pets.pet_type 
 SELECT avg(Pets.weight),        Pets.pet_type FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID GROUP BY Pets.pet_type 
 SELECT Student.fname,        Student.age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID 
 SELECT DISTINCT Student.Fname,                 Student.age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID 
 SELECT Has_Pet.StuID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.LName = 'Smith' 
 SELECT Has_Pet.StuID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.LName = "Smith" 
 SELECT count(*),        student.stuid FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid GROUP BY student.stuid 
 SELECT Student.StuID,        count(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID GROUP BY Student.StuID 
 SELECT Student.fname,        Student.sex FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID GROUP BY Student.StuID HAVING count(*) > 1 
 SELECT Student.fname,        Student.sex FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID GROUP BY Student.StuID HAVING count(*) > 1 
 SELECT Student.Lname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.pet_type = "Cat"   AND Pets.pet_age = 3 
 SELECT Student.Lname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.pet_age = 3   AND Pets.pettype = "cat" 
 SELECT avg(student.age) FROM student WHERE studentID NOT IN     (SELECT StuID      FROM Has_Pet) 
 SELECT avg(student.age) FROM student EXCEPT SELECT student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid 
 SELECT count(*) FROM continents; 
 SELECT count(*) FROM continents 
 SELECT continents.Continent,        continents.Continent,        COUNT(*) FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Country = countries.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON cars_data.Id = model_list.Model GROUP BY continents.Continent 
 SELECT continents.Continent,        COUNT(*),        countries.CountryName FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Country = countries.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY continents.Continent 
 SELECT COUNT(*) FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Country = countries.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON cars_data.Id = model_list.Model WHERE cars_data.Horsepower = "250"   OR cars_data.Horsepower = "300" 
 SELECT count(*) FROM continents 
 SELECT car_makers.FullName,        car_makers.Id,        count(*) FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY car_makers.Id 
 SELECT car_makers.FullName,        car_makers.Id,        count(*) FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON countries.Country = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.Make = cars_data.Id GROUP BY car_makers.Id 
 SELECT car_names.Model FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Country = countries.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model WHERE car_names.Horsepower =     (SELECT min(Horsepower)      FROM car_names) 
 SELECT car_names.Model FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Country = countries.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model WHERE car_names.Horsepower =     (SELECT MIN (car_names.Horsepower)      FROM continents      JOIN countries ON continents.Continent = countries.Continent      JOIN car_makers ON car_makers.Country = countries.Country      JOIN model_list ON car_makers.Id = model_list.Maker      JOIN car_names ON model_list.Model = car_names.Model) 
 SELECT car_names.Model FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Country = countries.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model WHERE car_names.Weight <     (SELECT avg(weight)      FROM cars_data) 
 SELECT car_names.Model FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Country = countries.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model WHERE car_names.Weight <     (SELECT avg(weight)      FROM cars_data) 
 SELECT car_makers.FullName FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON countries.Country = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.Make = cars_data.Make WHERE cars_data.Year = 1970 
 SELECT DISTINCT car_makers.Maker FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Id = countries.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON cars_data.Id = model_list.Model WHERE cars_data.Year = 1970 
 SELECT car_makers.FullName,        cars_data.year FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Id = countries.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON cars_data.Id = model_list.Model ORDER BY cars_data.year LIMIT 1 
 SELECT car_makers.Maker,        cars_data.Year FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Id = countries.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN cars_data ON model_list.Model = cars_data.MP ORDER BY cars_data.Year LIMIT 1 
 SELECT DISTINCT model_list.Model FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Country = countries.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model WHERE car_names.Year > 1980 
 SELECT DISTINCT car_names.Model FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Country = countries.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model WHERE car_makers.Year > 1980 
 SELECT continents.Continent,        count(*) FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Country = countries.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY continents.Continent 
 SELECT continents.Continent,        COUNT(*) FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY continents.Continent 
 SELECT countries.countryname FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON car_makers.id = countries.id JOIN model_list ON car_makers.id = model_list.id JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON cars_data.id = model_list.id GROUP BY countries.id ORDER BY count(*) DESC LIMIT 1; 
 SELECT countries.countryname FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON car_makers.id = countries.id GROUP BY countries.id ORDER BY count(*) DESC LIMIT 1 
 SELECT car_makers.FullName,        count(*) FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY car_makers.FullName 
 SELECT car_makers.Maker,        car_makers.FullName,        COUNT(*) FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY car_makers.Maker 
 SELECT cars_data.Accelerate FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Id = countries.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = model_list.Maker WHERE model_list.Model = "amc hornet sportabout (sw)"   AND car_makers.Maker = "amc"; 
 SELECT cars_data.Accelerate FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Id = countries.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = model_list.Maker WHERE model_list.Model = "amc hornet sportabout (sw)"   AND car_makers.Maker = "amc"; 
 SELECT COUNT (DISTINCT car_makers.Maker) FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON countries.Country = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON cars_data.Id = car_names.Id WHERE countries.CountryName = "France" 
 SELECT count(*) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON car_makers.country = countries.country JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON cars_data.id = car_names.id WHERE countries.country = "France"   AND car_makers.make = "care" 
 SELECT count(*) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON car_makers.country = countries.country JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON cars_data.id = model_list.model WHERE countries.country = "USA" 
 SELECT count(*) FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Country = countries.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON cars_data.Id = model_list.Model WHERE countries.Country = "United States" 
 SELECT avg(car_names.MPG) FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Country = countries.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model WHERE model_list.Cylinders = 4 
 SELECT avg(car_names.MPG) FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Country = countries.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model WHERE model_list.Cylinders = 4 
 SELECT min(cars_data.Weight) FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Country = countries.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model WHERE model_list.Cylinders = 8   AND car_names.Year = 1974 
 SELECT min(cars_data.Weight) FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Id = countries.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = model_list.Maker WHERE model_list.Cylinders = 8   AND car_names.Model = "1974" 
 SELECT DISTINCT car_makers.Maker,                 car_names.Model FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON countries.Country = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model 
 SELECT car_makers.Maker,        car_names.Model FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON countries.Country = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model 
 SELECT countries.CountryName,        car_makers.Country FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Country = countries.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY car_makers.Country HAVING COUNT(*) >= 1 
 SELECT countries.countryname,        car_makers.id FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON countries.countryid = car_makers.countryid JOIN car_names ON car_makers.id = car_names.id JOIN cars_data ON car_names.makereadate = cars_data.id GROUP BY car_makers.id HAVING count(*) >= 1 
 SELECT count(*) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON car_makers.country = countries.country JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.horsepower > 150 
 SELECT count(*) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON car_makers.country = countries.country JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.horsepower > 150 
 SELECT avg(car_names.Weight),        car_names.Year FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON countries.Country = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model GROUP BY car_names.Year 
 SELECT avg(car_names.Weight),        cars_data.Year FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Country = countries.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY cars_data.Year 
 SELECT countries.countryname FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON car_makers.id = countries.id JOIN model_list ON car_makers.id = model_list.id JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON cars_data.id = car_names.id GROUP BY countries.countryname HAVING count(*) >= 3 
 SELECT countries.countryname FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON car_makers.country = countries.countryid JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON cars_data.id = car_names.id GROUP BY continents.continent HAVING COUNT(*) >= 3 
 SELECT max(car_names.Horsepower),        car_names.Maker FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Id = countries.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model WHERE model_list.Cylinders = 3 
 SELECT car_names.Horsepower,        car_makers.Maker FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Id = countries.CountryId JOIN model_list ON car_makers.Id = model_list.Id JOIN cars_data ON cars_data.Id = model_list.Model WHERE model_list.Cylinders = 3 GROUP BY car_makers.Maker ORDER BY cars_data.Horsepower DESC LIMIT 1; 
 SELECT car_names.Model FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Country = countries.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model WHERE car_names.MPG =     (SELECT max(MPG)      FROM car_names) 
 SELECT car_names.Model FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Country = countries.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model ORDER BY car_names.MPG DESC LIMIT 1; 
 SELECT avg(car_names.Horsepower) FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Country = countries.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model WHERE car_names.Year < 1980 
 SELECT avg(car_names.Horsepower) FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Country = countries.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model WHERE car_names.Year < 1980 
 SELECT avg(car_names.edispl) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON car_makers.id = countries.id JOIN model_list ON car_makers.id = model_list.id JOIN car_names ON model_list.model = car_names.model WHERE car_names.make = "volvo" 
 SELECT avg(car_names.edispl) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON car_makers.id = countries.id JOIN model_list ON car_makers.id = model_list.id JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON cars_data.id = car_names.id WHERE car_makers.make = "volvo" 
 SELECT max(car_names.Accelerate),        model_list.Cylinders FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Country = countries.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model GROUP BY model_list.Cylinders 
 SELECT max(car_names.cars_data.Accelerate) FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Id = countries.CountryId JOIN model_list ON car_makers.Id = model_list.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id 
 SELECT car_names.Model FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON countries.Country = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model GROUP BY car_names.Model ORDER BY count(*) DESC LIMIT 1 
 SELECT car_names.Model FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Country = countries.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model GROUP BY car_names.Model ORDER BY count(*) DESC LIMIT 1 
 SELECT count(*) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON countries.country = car_makers.country JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE model_list.cylinders > 4 
 SELECT count(*) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON countries.country = car_makers.country JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE model_list.cylinders > 4 
 SELECT COUNT (cars_data.id) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON car_makers.id = countries.country JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.year = 1980 
 SELECT COUNT(*) FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Country = countries.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.Make = car_makers.Id WHERE cars_data.year = 1980 
 SELECT count(*) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON car_makers.id = countries.id JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON cars_data.id = model_list.model WHERE car_makers.FullName = "American Motor Company" 
 SELECT count(*) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON car_makers.id = countries.id JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON cars_data.id = model_list.model WHERE car_makers.name = "American Motor Company" 
 SELECT car_makers.FullName,        car_makers.Id FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY car_makers.Id HAVING count(*) > 3 
 SELECT car_makers.Maker,        car_makers.Id FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY car_makers.Maker HAVING count(*) > 3 
 SELECT car_names.Model FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Country = countries.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model WHERE car_names.Make = "General Motors"   OR car_names.Weight > 3500 
 SELECT DISTINCT car_names.Model FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Id = countries.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model WHERE car_makers.Maker = "General Motors"   OR car_names.Weight > 3500 
 SELECT cars_data.year FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON car_makers.country = countries.country JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.weight BETWEEN 3000 AND 4000 
 SELECT DISTINCT cars_data.year FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON car_makers.id = countries.country JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.weight < 4000 INTERSECT   SELECT DISTINCT cars_data.year   FROM continents   JOIN countries ON continents.continent = countries.continent   JOIN car_makers ON car_makers.id = countries.country   JOIN model_list ON car_makers.id = model_list.maker   JOIN car_names ON model_list.model = car_names.model   WHERE cars_data.weight > 3000 
 SELECT cars_data.Horsepower FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Country = countries.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.Accelerate DESC LIMIT 1 
 SELECT cars_data.Horsepower FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Country = countries.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.Accelerate DESC LIMIT 1 
 SELECT car_names.cylinders FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON car_makers.id = countries.id JOIN model_list ON car_makers.id = model_list.id JOIN car_names ON model_list.model = car_names.model WHERE car_names.make = "volvo"   AND car_names.cars_data.accelerate =     (SELECT min(car_names.accelerate)      FROM car_names      JOIN cars_data ON car_names.make = cars_data.make      WHERE car_names.make = "volvo")) 
 SELECT car_names.cylinders FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON car_makers.id = countries.country JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model WHERE car_names.make = "volvo"   AND car_names.model = "model"   AND car_names.accelerate =     (SELECT min(car_names.accelerate)      FROM cars_data      JOIN model_list ON cars_data.id = model_list.model      JOIN car_makers ON car_makers.id = model_list.maker      WHERE model_list.model = "volvo"        AND car_makers.id = model_list.maker.id) 
 SELECT count(*) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON countries.country = car_makers.country JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.accelerate >     (cars_data.horsepower) 
 SELECT count(*) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON car_makers.id = countries.id JOIN model_list ON car_makers.id = model_list.id JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.Horsepower >     (SELECT max(Horsepower)      FROM car_makers      JOIN model_list ON car_makers.id = model_list.id      JOIN car_names ON model_list.model = car_names.model      WHERE cars_data.Accelerate >          (SELECT max(Accelerate)           FROM car_makers           JOIN model_list ON car_makers.id = model_list.id           JOIN car_names ON model_list.model = car_names.model))) 
 SELECT COUNT(*) FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Country = countries.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON cars_data.Id = car_names.Id GROUP BY continents.Continent HAVING COUNT(*) > 2 
 SELECT COUNT(*) FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Country = countries.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON cars_data.Id = car_names.Id GROUP BY continents.Continent HAVING COUNT(*) > 2 
 SELECT COUNT(*) FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE model_list.Cylinders > 6 
 SELECT COUNT(*) FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Country = countries.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.Make = cars_data.Make WHERE model_list.Cylinders > 6 
 SELECT car_names.Model FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Country = countries.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model WHERE model_list.Cylinders = 4 ORDER BY car_names.Horsepower DESC LIMIT 1 
 SELECT car_names.Model FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Country = countries.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model WHERE model_list.Cylinders = 4 GROUP BY car_names.Model ORDER BY car_names.Horsepower DESC LIMIT 1 
 SELECT car_makers.Maker,        car_makers.FullName FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON countries.Country = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model WHERE car_makers.Horsepower >     (SELECT min(horsepower)      FROM cars_data)   AND car_makers.Cylinders <= 3 
 SELECT car_makers.Maker,        car_names.Model FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model WHERE car_makers.Horsepower < 4   AND model_list.Cylinders < 4 
 SELECT max(car_names.MPG) FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Id = countries.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model WHERE model_list.Cylinders = 8   OR car_names.Year < 1980 
 SELECT max(car_names.MPG) FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Id = countries.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model WHERE model_list.Cylinders = 8   OR car_names.Year < 1980 
 SELECT car_names.Model FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Country = countries.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model WHERE car_names.Weight < 3500   AND car_makers.Maker!= 'Ford Motor Company' 
 SELECT DISTINCT car_names.Model FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON car_makers.Country = countries.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model WHERE car_names.Weight < 3500   AND car_makers.Maker!= "Ford" 
 SELECT countries.countryname FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON car_makers.id = countries.id WHERE car_makers.id NOT IN     (SELECT car_makers.id      FROM car_makers      JOIN model_list ON car_makers.id = model_list.maker      JOIN car_names ON model_list.model = car_names.model      WHERE car_names.make = 'Toyota') 
 SELECT countryname FROM continents EXCEPT SELECT car_names.make FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN countries ON countries.countryid = car_makers.countryid 
 SELECT car_makers.id,        car_makers.Maker FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON countries.Country = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY car_makers.id HAVING count(*) >= 2 UNION SELECT car_makers.id,        car_makers.Maker FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON countries.Country = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY car_makers.id HAVING count(*) > 3 
 SELECT car_makers.id,        car_makers.Maker FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON countries.Country = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY car_makers.id HAVING count(*) >= 2 UNION SELECT car_makers.id,        car_makers.Maker FROM continents JOIN countries ON continents.Continent = countries.Continent JOIN car_makers ON countries.Country = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN cars_data ON model_list.Model = cars_data.Model GROUP BY car_makers.id HAVING count(*) >= 3 
 SELECT countries.countryid,        car_makers.make,        car_names.model FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON countries.countryid = car_makers.countryid JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model WHERE car_makers.make = 'fiat' GROUP BY car_makers.make HAVING count(*) > 3 
 SELECT countries.countryid,        car_makers.make,        car_names.model FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON countries.countryid = car_makers.countryid JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model WHERE car_makers.make = "Fiat"   OR car_makers.make = "Fiat" GROUP BY car_makers.make HAVING count(*) > 3 
 SELECT airports.Country FROM airlines JOIN airports ON airlines.Abbreviation = airports.Abbreviation JOIN flights ON airlines.Abbreviation = flights.Airline WHERE airlines.Airline = "JetBlue Airways" 
 SELECT airports.Country FROM airlines JOIN airports ON airlines.Abbreviation = airports.Abbreviation JOIN flights ON flights.Airline = airlines.Airline WHERE airlines.Name = "Jetblue Airways" 
 SELECT airlines.abbreviation FROM airlines JOIN airports ON airlines.abbreviation = airports.abbreviation JOIN flights ON flights.destairport = airports.airportcode WHERE airlines.name = "JetBlue Airways" 
 SELECT airlines.abbreviation FROM airlines JOIN airports ON airlines.abbreviation = airports.abbreviation JOIN flights ON flights.destairport = airports.airportcode WHERE airlines.abbreviation = "Jetblue" 
 SELECT airlines.Airline,        airlines.Abbreviation FROM airlines JOIN airports ON airlines.AirportName = airports.AirportName WHERE airports.Country = "USA" 
 SELECT airlines.Airline,        airlines.Abbreviation FROM airlines JOIN airports ON airlines.Country = airports.Country WHERE airports.Country = "USA" 
 SELECT airports.AirportName,        airports.AirportCode FROM airlines JOIN airports ON airlines.Abbreviation = airports.Abbreviation JOIN flights ON flights.DestAirport = airports.AirportCode WHERE airports.City = "Anthony" 
 SELECT airports.AirportName,        airports.AirportCode FROM airlines JOIN airports ON airlines.Abbreviation = airports.Abbreviation JOIN flights ON flights.DestAirport = airports.AirportCode WHERE airports.City = "Anthony" 
 SELECT count(*) FROM airlines 
 SELECT count(*) FROM airlines 
 SELECT count(*) FROM airlines JOIN airports ON airlines.abbrev = airports.abbrev JOIN flights ON flights.destairport = airports.airportcode 
 SELECT count(*) FROM airlines JOIN airports ON airlines.abbrev = airports.abbrev JOIN flights ON flights.destairport = airports.airportcode 
 SELECT count(*) FROM airlines JOIN airports ON airlines.abbrev = airports.abbrev JOIN flights ON flights.destairport = airports.airportcode 
 SELECT count(*) FROM airlines JOIN airports ON airlines.abbrev = airports.abbrev JOIN flights ON flights.destairport = airports.airportcode AND flights.sourceairport = airports.airportcode 
 SELECT Airline FROM airlines WHERE Abbreviation = 'UAL' 
 SELECT Airline FROM airlines WHERE Abbreviation = 'UAL' 
 SELECT count(*) FROM airlines WHERE country = "USA" 
 SELECT count(*) FROM airlines WHERE country = 'USA' 
 SELECT airports.city,        airlines.country FROM airlines JOIN airports ON airlines.destairport = airports.airportcode WHERE airports.city = "Alton" 
 SELECT airports.City,        airlines.Country FROM airlines JOIN airports ON airlines.DestAirport = airports.AirportCode WHERE airports.City = "Alton" 
 SELECT airports.AirportName FROM airlines JOIN airports ON airlines.Abbreviation = airports.Abbreviation JOIN flights ON flights.DestAirport = airports.AirportName WHERE airlines.Country = "United States"   AND airports.AirportName = "AKO" 
 SELECT airports.AirportName FROM airlines JOIN airports ON airlines.Abbreviation = airports.Abbreviation JOIN flights ON flights.DestAirport = airports.AirportName WHERE airports.AirportName = 'AKO' 
 SELECT airports.AirportName FROM airlines JOIN airports ON airlines.Country = airports.Country JOIN flights ON flights.DestAirport = airports.AirportName WHERE airports.City = 'Aberdeen' 
 SELECT airports.AirportName FROM airlines JOIN airports ON airlines.Abbreviation = airports.Abbreviation WHERE airports.City = "Aberdeen" 
 SELECT count(*) FROM airlines JOIN airports ON airlines.abbrev = airports.abbrev JOIN flights ON flights.destairport = airports.airportcode WHERE airports.city = 'APG' 
 SELECT count(*) FROM airlines JOIN airports ON airlines.abbrev = airports.abbrev JOIN flights ON flights.destairport = airports.airportcode WHERE airports.city = 'APG' 
 SELECT count(*) FROM airlines JOIN airports ON airlines.abbrev = airports.abbrev JOIN flights ON flights.destairport = airports.airportcode WHERE airports.city = "ATO" 
 SELECT count(*) FROM airlines JOIN airports ON airlines.abbrev = airports.abbrev JOIN flights ON flights.destairport = airports.airportcode WHERE airports.city = "ATO" 
 SELECT count(*) FROM airlines JOIN airports ON airlines.abbrev = airports.abbrev JOIN flights ON flights.destairport = airports.airportcode WHERE airports.city = "Aberdeen" 
 SELECT count(*) FROM airlines JOIN airports ON airlines.abbrev = airports.abbrev JOIN flights ON flights.destairport = airports.airportcode WHERE airports.city = "Aberdeen" 
 SELECT count(*) FROM airlines JOIN airports ON airlines.abbrev = airports.abbrev JOIN flights ON flights.destairport = airports.airportcode WHERE airports.city = "Aberdeen" 
 SELECT count(*) FROM airlines JOIN airports ON airlines.abbrev = airports.abbrev JOIN flights ON flights.destairport = airports.airportcode WHERE airports.city = "Aberdeen" 
 SELECT count(*) FROM airlines JOIN airports ON airlines.abbrev = airports.abbrev JOIN flights ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'   AND airports.city = 'Ashley' 
 SELECT count(*) FROM airlines JOIN airports ON airlines.abbrev = airports.abbrev JOIN flights ON flights.destairport = airports.airportcode WHERE airports.city = "Aberdeen"   AND airports.city = "Ashley" 
 SELECT count(*) FROM airlines JOIN airports ON airlines.abbrev = airports.abbrev JOIN flights ON flights.sourceairport = airports.airportcode WHERE airlines.abbreviation = 'JetBlue' 
 SELECT count(*) FROM airlines JOIN airports ON airlines.abbrev = airports.abbrev JOIN flights ON flights.sourceairport = airports.airportcode WHERE airlines.name = "Jetblue Airways" 
 SELECT count(*) FROM airlines JOIN airports ON airlines.abbrev = airports.abbrev JOIN flights ON flights.destairport = airports.airportcode WHERE airlines.abbreviation = "United"   AND airports.city = "ASY" 
 SELECT count(*) FROM airlines JOIN airports ON airlines.abbrev = airports.abbrev JOIN flights ON flights.destairport = airports.airportcode WHERE airlines.name = "United"   AND airports.country = "Saudi Arabia"   AND airports.airportname = "ASY" 
 SELECT count(*) FROM airlines JOIN airports ON airlines.abbrev = airports.abbrev JOIN flights ON flights.destairport = airports.airportcode WHERE airlines.abbreviation = "United"   AND airports.city = "AHD" 
 SELECT count(*) FROM airlines JOIN airports ON airlines.abbrev = airports.abbrev JOIN flights ON flights.destairport = airports.airportcode WHERE airlines.name = "United Airlines"   AND airports.city = "AHD" 
 SELECT count(*) FROM airlines JOIN airports ON airlines.abbrev = airports.abbrev JOIN flights ON flights.destairport = airports.airportcode WHERE airlines.name = "United Airlines"   AND airports.city = "Aberdeen" 
 SELECT count(*) FROM airlines JOIN airports ON airlines.abbrev = airports.abbrev JOIN flights ON flights.destairport = airports.airportcode WHERE airlines.name = "United"   AND airports.city = "Aberdeen"   AND airlines.abbreviation = "UA" 
 SELECT airports.city FROM airlines JOIN airports ON airlines.abbrev = airports.abbrev JOIN flights ON flights.destairport = airports.airportcode GROUP BY airports.city ORDER BY count(*) DESC LIMIT 1 
 SELECT airports.city FROM airlines JOIN airports ON airlines.abbrev = airports.abbrev JOIN flights ON flights.destairport = airports.abbrev GROUP BY airports.city ORDER BY count(*) DESC LIMIT 1 
 SELECT airports.city FROM airlines JOIN airports ON airlines.abbrev = airports.abbrev JOIN flights ON flights.destairport = airports.airportcode GROUP BY airports.city ORDER BY count(*) DESC LIMIT 1 
 SELECT airports.city FROM airlines JOIN airports ON airlines.abbrev = airports.abbrev JOIN flights ON flights.destairport = airports.abbrev GROUP BY airports.city ORDER BY count(*) DESC LIMIT 1 
 SELECT airports.AirportCode FROM airlines JOIN airports ON airlines.Country = airports.Country JOIN flights ON airlines.Airline = flights.Airline GROUP BY airports.AirportCode ORDER BY count(*) DESC LIMIT 1 
 SELECT airports.AirportCode FROM airlines JOIN airports ON airlines.Abbreviation = airports.Abbreviation JOIN flights ON flights.DestAirport = airports.AirportCode GROUP BY airports.AirportCode ORDER BY count(*) DESC LIMIT 1 
 SELECT airports.AirportCode FROM airlines JOIN airports ON airlines.Abbreviation = airports.Abbreviation JOIN flights ON flights.DestAirport = airports.AirportCode GROUP BY airports.AirportCode ORDER BY count(*) ASC LIMIT 1 
 SELECT airports.AirportCode FROM airlines JOIN airports ON airlines.Abbreviation = airports.Abbreviation JOIN flights ON flights.DestAirport = airports.AirportCode GROUP BY airports.AirportCode ORDER BY count(*) ASC LIMIT 1 
 SELECT Airline FROM airlines GROUP BY Airline ORDER BY count(*) DESC LIMIT 1 
 SELECT Airline FROM airlines JOIN airports ON airlines.abbrev = airports.abbrev JOIN flights ON flights.destairport = airports.airportcode GROUP BY Airline ORDER BY count(*) DESC LIMIT 1 
 SELECT airlines.abbreviation,        airlines.country FROM airlines JOIN airports ON airlines.sourceairport = airports.airportcode JOIN flights ON flights.destairport = airports.airportcode GROUP BY airlines.abbreviation ORDER BY count(*) ASC LIMIT 1 
 SELECT airlines.abbreviation,        airlines.country FROM airlines JOIN airports ON airlines.sourceairport = airports.airportcode JOIN flights ON flights.destairport = airports.airportcode GROUP BY airlines.abbreviation ORDER BY count(*) ASC LIMIT 1 
 SELECT Airline FROM airlines WHERE DestAirport = 'AHD' 
 SELECT Airline FROM airlines WHERE SourceAirport = "AHD" 
 SELECT Airline FROM airlines WHERE DestAirport = 'AHD' 
 SELECT Airline FROM airlines WHERE DestAirport = "AHD" 
 SELECT airlines.Airline FROM airlines JOIN airports ON airlines.DestAirport = airports.AirportCode JOIN flights ON flights.DestAirport = airports.AirportCode AND flights.Airline = airlines.Airline WHERE airports.AirportName = 'APG' INTERSECT   SELECT airlines.Airline FROM airlines JOIN airports ON airlines.DestAirport = airports.AirportCode JOIN flights ON flights.DestAirport = airports.AirportCode AND flights.Airline = airlines.Airline WHERE airports.AirportName = 'CVO' 
 SELECT airlines.Airline FROM airlines JOIN airports ON airlines.DestAirport = airports.AirportCode JOIN flights ON flights.DestAirport = airports.AirportCode WHERE airports.City = "APG"   AND airports.City = "CVO" 
 SELECT Airline FROM airlines WHERE DestAirport = 'CVO' EXCEPT SELECT Airline FROM flights WHERE SourceAirport = 'APG' 
 SELECT Airline FROM airlines WHERE SourceAirport = "CVO" EXCEPT SELECT Airline FROM airlines WHERE SourceAirport = "APG" 
 SELECT Airline FROM airlines GROUP BY Airline HAVING count(*) >= 10 
 SELECT Airline FROM airlines GROUP BY Airline HAVING count(*) >= 10 
 SELECT Airline FROM airlines WHERE count(*) < 200 
 SELECT Airline FROM airlines WHERE count(*) < 200 
 SELECT flights.FlightNo FROM airlines JOIN airports ON airlines.Country = airports.Country JOIN flights ON airlines.Airline = flights.Airline WHERE airlines.Airline = "United Airlines" 
 SELECT FlightNo FROM airlines JOIN airports ON airlines.abbrev = airports.abbrev JOIN flights ON flights.Airline = airlines.abbrev WHERE airlines.abbreviation = "United" 
 SELECT FlightNo FROM flights WHERE DestAirport = "APG" 
 SELECT FlightNo FROM flights WHERE SourceAirport = "APG" 
 SELECT FlightNo FROM flights WHERE DestAirport = "APG" 
 SELECT FlightNo FROM flights WHERE DestAirport = "APG" 
 SELECT FlightNo FROM flights WHERE DestAirport = "Aberdeen" 
 SELECT FlightNo FROM flights WHERE SourceAirport = "Aberdeen" 
 SELECT FlightNo FROM flights WHERE DestAirport = "Aberdeen" 
 SELECT FlightNo FROM flights WHERE DestAirport = "ABD" 
 SELECT count(*) FROM airlines JOIN airports ON airlines.abbrev = airports.abbrev JOIN flights ON flights.destairport = airports.airportcode WHERE airports.city = "Aberdeen"   OR airports.city = "Abilene" 
 SELECT count(*) FROM airlines JOIN airports ON airlines.abbrev = airports.abbrev JOIN flights ON flights.destairport = airports.airportcode WHERE airports.city = "Aberdeen"   OR airports.city = "Abilene" 
 SELECT airportname FROM airports WHERE airportcode NOT IN     (SELECT destairport      FROM flights) 
 SELECT AirportName FROM airports EXCEPT SELECT airports.AirportName FROM airlines JOIN airports ON airlines.Abbreviation = airports.Abbreviation JOIN flights ON flights.DestAirport = airports.AirportName AND flights.SourceAirport = airports.AirportName 
 SELECT count(*) FROM employee UNION SELECT count(*) FROM shop UNION SELECT count(*) FROM hiring UNION SELECT count(*) FROM evaluation 
 SELECT count(*) FROM employee JOIN shop ON employee.Employee_ID = hiring.Shop_ID JOIN hiring ON shop.Shop_ID = hiring.Shop_ID JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID 
 SELECT employee.name FROM employee JOIN shop ON employee.employee_id = hiring.Shop_ID JOIN evaluation ON employee.employee_id = evaluation.Employee_ID ORDER BY employee.age 
 SELECT employee.name FROM employee JOIN shop ON employee.employee_id = hiring.Shop_ID JOIN evaluation ON employee.employee_id = evaluation.Employee_ID ORDER BY employee.age 
 SELECT count(*),        city FROM employee JOIN shop ON employee.employee_id = hiring.Shop_ID GROUP BY city 
 SELECT count(*),        city FROM employee JOIN shop ON employee.employee_id = hiring.Shop_ID GROUP BY city 
 SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING count(*) > 1 
 SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING count(*) > 1 
 SELECT count(*),        shop.location FROM employee JOIN shop ON employee.shop_id = shop.shop_id JOIN hiring ON hiring.shop_id = shop.shop_id JOIN evaluation ON evaluation.employee_id = employee.employee_id GROUP BY shop.location 
 SELECT count(*),        shop.location FROM employee JOIN shop ON employee.city = shop.city JOIN hiring ON hiring.shop_id = shop.shop_id JOIN evaluation ON evaluation.employee_id = employee.employee_id GROUP BY shop.location 
 SELECT shop.Location,        shop.District FROM employee JOIN shop ON employee.Shop_ID = shop.Shop_ID JOIN hiring ON employee.Employee_ID = hiring.Employee_ID JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID ORDER BY shop.Number_products DESC LIMIT 1 
 SELECT shop.Location,        shop.District FROM employee JOIN shop ON employee.Shop_ID = shop.Shop_ID JOIN hiring ON hiring.Shop_ID = shop.Shop_ID JOIN evaluation ON evaluation.Employee_ID = hiring.Employee_ID GROUP BY shop.District ORDER BY count(*) DESC LIMIT 1 
 SELECT min(Number_products),        max(Number_products) FROM employee JOIN shop ON employee.Employee_ID = hiring.Shop_ID 
 SELECT min(Number_products),        max(Number_products) FROM employee JOIN shop ON employee.Shop_ID = shop.Shop_ID JOIN hiring ON hiring.Shop_ID = shop.Shop_ID JOIN evaluation ON evaluation.Employee_ID = hiring.Employee_ID 
 SELECT shop.name,        shop.location,        shop.district FROM employee JOIN shop ON employee.Shop_ID = shop.Shop_ID JOIN hiring ON hiring.Shop_ID = shop.Shop_ID JOIN evaluation ON evaluation.Employee_ID = hiring.Employee_ID GROUP BY shop.Shop_ID ORDER BY count(*) DESC 
 SELECT shop.name,        shop.location,        shop.district FROM employee JOIN shop ON employee.shop_id = shop.shop_id JOIN hiring ON employee.employee_id = hiring.employee_id JOIN evaluation ON employee.employee_id = evaluation.employee_id ORDER BY shop.number_products DESC 
 SELECT shop.name FROM employee JOIN shop ON employee.shop_id = shop.shop_id JOIN hiring ON hiring.shop_id = shop.shop_id JOIN evaluation ON evaluation.employee_id = hiring.employee_id WHERE shop.number_products >     (SELECT avg(number_products)      FROM shop) 
 SELECT shop.name FROM employee JOIN shop ON employee.shop_id = shop.shop_id JOIN hiring ON hiring.shop_id = shop.shop_id JOIN evaluation ON evaluation.employee_id = hiring.employee_id WHERE shop.number_products >     (SELECT avg(number_products)      FROM shop) 
 SELECT employee.name FROM employee JOIN shop ON employee.employee_id = hiring.Shop_id JOIN hiring ON hiring.Shop_id = shop.Shop_id JOIN evaluation ON evaluation.Employee_ID = employee.Employee_ID GROUP BY employee.name ORDER BY count(*) DESC LIMIT 1 
 SELECT employee.name FROM employee JOIN shop ON employee.employee_id = hiring.Shop_ID JOIN hiring ON hiring.Shop_ID = shop.Shop_ID JOIN evaluation ON evaluation.Employee_ID = employee.Employee_ID GROUP BY employee.name ORDER BY count(*) DESC LIMIT 1 
 SELECT employee.name FROM employee JOIN shop ON employee.employee_id = hiring.Shop_ID JOIN hiring ON hiring.Shop_ID = shop.Shop_ID JOIN evaluation ON evaluation.Employee_ID = employee.Employee_ID ORDER BY evaluation.Bonus DESC LIMIT 1 
 SELECT employee.name FROM employee JOIN shop ON employee.employee_id = hiring.Shop_ID JOIN hiring ON hiring.Shop_ID = shop.Shop_ID JOIN evaluation ON evaluation.Employee_ID = employee.Employee_ID ORDER BY evaluation.Bonus DESC LIMIT 1 
 SELECT name FROM employee EXCEPT SELECT employee.name FROM shop JOIN hiring ON shop.Shop_ID = hiring.Shop_ID JOIN evaluation ON hiring.Employee_ID = evaluation.Employee_ID 
 SELECT name FROM employee EXCEPT SELECT employee.name FROM shop JOIN hiring ON shop.Shop_ID = hiring.Shop_ID JOIN evaluation ON hiring.Employee_ID = evaluation.Employee_ID 
 SELECT shop.name FROM employee JOIN shop ON employee.shop_id = shop.shop_id JOIN hiring ON employee.employee_id = hiring.employee_id JOIN evaluation ON employee.employee_id = evaluation.employee_id GROUP BY shop.name ORDER BY count(*) DESC LIMIT 1 
 SELECT shop.name FROM employee JOIN shop ON employee.shop_id = shop.shop_id JOIN hiring ON employee.employee_id = hiring.employee_id JOIN evaluation ON employee.employee_id = evaluation.employee_id GROUP BY shop.name ORDER BY count(*) DESC LIMIT 1 
 SELECT name FROM shop WHERE shop_id NOT IN     (SELECT shop_id      FROM hiring) 
 SELECT name FROM shop WHERE shop_id NOT IN     (SELECT shop_id      FROM hiring      JOIN evaluation ON hiring.employee_id = evaluation.employee_id      WHERE evaluation.employee_id = employee.employee_id) 
 SELECT shop.name,        count(*) FROM employee JOIN shop ON employee.shop_id = shop.shop_id JOIN hiring ON hiring.shop_id = shop.shop_id JOIN evaluation ON evaluation.employee_id = hiring.employee_id GROUP BY shop.name 
 SELECT count(*),        shop.name FROM employee JOIN shop ON employee.shop_id = shop.shop_id JOIN hiring ON employee.employee_id = hiring.employee_id JOIN evaluation ON employee.employee_id = evaluation.employee_id GROUP BY shop.name 
 SELECT sum(evaluation.Bonus) FROM employee JOIN shop ON employee.Employee_ID = hiring.Shop_ID JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID 
 SELECT sum(evaluation.Bonus) FROM employee JOIN shop ON employee.Employee_ID = hiring.Shop_ID JOIN hiring ON hiring.Shop_ID = shop.Shop_ID JOIN evaluation ON evaluation.Employee_ID = employee.Employee_ID 
 SELECT * FROM employee JOIN shop ON employee.Employee_ID = hiring.Shop_ID JOIN hiring ON hiring.Shop_ID = shop.Shop_ID JOIN evaluation ON evaluation.Employee_ID = hiring.Employee_ID 
 SELECT * FROM employee JOIN shop ON employee.Employee_ID = shop.Shop_ID JOIN hiring ON shop.Shop_ID = hiring.Shop_ID JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID 
 SELECT DISTINCT shop.District FROM employee JOIN shop ON employee.Shop_ID = shop.Shop_ID WHERE shop.Number_products < 3000 INTERSECT   SELECT DISTINCT shop.District   FROM employee   JOIN shop ON employee.Shop_ID = shop.Shop_ID WHERE shop.Number_products > 10000 
 SELECT DISTINCT shop.District FROM employee JOIN shop ON employee.Shop_ID = shop.Shop_ID JOIN hiring ON employee.Employee_ID = hiring.Employee_ID JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID WHERE shop.Number_products < 3000 INTERSECT   SELECT DISTINCT shop.District   FROM employee   JOIN shop ON employee.Shop_ID = shop.Shop_ID   JOIN hiring ON employee.Employee_ID = hiring.Employee_ID   JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID WHERE shop.Number_products > 10000 
 SELECT count(DISTINCT shop.Location) FROM employee JOIN shop ON employee.Shop_ID = shop.Shop_ID JOIN hiring ON hiring.Shop_ID = shop.Shop_ID JOIN evaluation ON evaluation.Employee_ID = employee.Employee_ID 
 SELECT count(DISTINCT shop.Location) FROM employee JOIN shop ON employee.Shop_ID = shop.Shop_ID JOIN hiring ON hiring.Shop_ID = shop.Shop_ID JOIN evaluation ON evaluation.Employee_ID = employee.Employee_ID 
 SELECT count(*) FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID 
 SELECT count(*) FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID 
 SELECT Documents.Document_ID,        Documents.Document_Name,        Documents.Document_Description FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID 
 SELECT Documents.Document_ID,        Documents.Document_Name,        Documents.Document_Description,        Templates.Template_Type_Description FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID 
 SELECT Documents.Document_name,        Templates.Template_id FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_type_code = Templates.Template_type_code JOIN Documents ON Templates.Template_id = Documents.Template_id WHERE Documents.Document_description LIKE '%w%' 
 SELECT Documents.Document_name,        Templates.Template_type_code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_type_code = Templates.Template_type_code JOIN Documents ON Templates.Template_id = Documents.Template_id JOIN Paragraphs ON Documents.Document_id = Paragraphs.Document_id WHERE Documents.Document_description LIKE '%w%' 
 SELECT Templates.template_id,        Templates.template_type_code,        Documents.document_name FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id WHERE Documents.document_name = "Robbin CV" 
 SELECT Templates.template_id,        Templates.template_type_code,        Documents.document_name FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id WHERE Documents.document_name = "Robbin CV" 
 SELECT count(DISTINCT templates.template_type_code) FROM templates JOIN documents ON templates.template_type_code = documents.template_id JOIN paragraphs ON documents.document_id = paragraphs.document_id 
 SELECT count(DISTINCT templates.template_type_code) FROM templates JOIN documents ON templates.template_type_code = documents.template_id JOIN paragraphs ON documents.document_id = paragraphs.document_id 
 SELECT count(*) FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Templates.Template_Type_Description = "PPT" 
 SELECT count(*) FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Templates.Template_Type_Description = "PPT" 
 SELECT Templates.template_type_code,        count(*) FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id GROUP BY Templates.template_type_code 
 SELECT Templates.template_type_code,        count(*) FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id GROUP BY Templates.template_type_code 
 SELECT Templates.template_type_code,        Templates.template_type_code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id GROUP BY Templates.template_type_code ORDER BY count(*) DESC LIMIT 1 
 SELECT Templates.template_type_code,        Templates.template_type_description FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id GROUP BY Templates.template_type_code ORDER BY count(*) DESC LIMIT 1 
 SELECT Templates.Template_Type_Code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Templates.Template_Type_Code HAVING COUNT(*) > 1 
 SELECT Templates.template_type_code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id GROUP BY Templates.template_type_code HAVING count(*) > 1 
 SELECT template_type_code FROM Ref_Template_Types EXCEPT SELECT Templates.template_type_code FROM Templates JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Templates.template_id = Paragraphs.template_id 
 SELECT template_id FROM Ref_template_types EXCEPT SELECT Templates.template_id FROM Templates JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Templates.template_id = Paragraphs.template_id 
 SELECT count(*) FROM Ref_Template_Types UNION SELECT count(*) FROM Templates UNION SELECT count(*) FROM Documents UNION SELECT count(*) FROM Paragraphs 
 SELECT count(*) FROM Ref_Template_Types UNION SELECT count(*) FROM Templates UNION SELECT count(*) FROM Documents UNION SELECT count(*) FROM Paragraphs 
 SELECT Templates.template_type_code,        Templates.version_number,        Templates.template_type_code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id 
 SELECT Templates.template_type_code,        Templates.version_number,        Templates.template_type_code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id 
 SELECT DISTINCT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID 
 SELECT DISTINCT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID 
 SELECT Templates.template_type_code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id WHERE Ref_Template_Types.template_type_description = "PP" OR Ref_Template_Types.template_type_description = "PPT" 
 SELECT Templates.template_type_code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id WHERE Ref_Template_Types.template_type_code = "PP"   OR Ref_Template_Types.template_type_code = "PPT" 
 SELECT count(*) FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Ref_Template_Types.Template_Type_Description = "CV" 
 SELECT count(*) FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Templates.Template_Type_Description = "CV" 
 SELECT Templates.version_number,        Templates.template_type_code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id WHERE Templates.version_number > 5 
 SELECT Templates.version_number,        Templates.template_type_code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id WHERE Templates.version_number > 5 
 SELECT Ref_Template_Types.template_type_code,        count(*) FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id GROUP BY Ref_Template_Types.template_type_code 
 SELECT Ref_Template_Types.template_type_code,        count(*) FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id GROUP BY Ref_Template_Types.template_type_code 
 SELECT Ref_Template_Types.template_type_code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id GROUP BY Ref_Template_Types.template_type_code ORDER BY count(*) DESC LIMIT 1 
 SELECT Ref_Template_Types.template_type_code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id GROUP BY Ref_Template_Types.template_type_code ORDER BY count(*) DESC LIMIT 1 
 SELECT Ref_Template_Types.template_type_code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id GROUP BY Ref_Template_Types.template_type_code HAVING count(*) < 3 
 SELECT Ref_Template_Types.template_type_code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id GROUP BY Ref_Template_Types.template_type_code HAVING count(*) < 3 
 SELECT min(Templates.version_number),        Templates.template_type_code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id GROUP BY Templates.template_type_code ORDER BY min(Templates.version_number) LIMIT 1 
 SELECT Templates.version_number,        Templates.template_type_code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id ORDER BY Templates.version_number LIMIT 1 
 SELECT Ref_Template_Types.template_type_code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id WHERE Documents.document_name = "Data base" 
 SELECT Ref_Template_Types.template_type_code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id WHERE Documents.document_name = "Data base" 
 SELECT Documents.Document_name FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Ref_Template_Types.Template_Type_Description = "BK" 
 SELECT Documents.Document_name FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Ref_Template_Types.Template_Type_Description = "BK" 
 SELECT Ref_Template_Types.template_type_code,        count(*) FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id GROUP BY Ref_Template_Types.template_type_code 
 SELECT Ref_Template_Types.template_type_code,        count(*) FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id GROUP BY Ref_Template_Types.template_type_code 
 SELECT Ref_Template_Types.template_type_code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id GROUP BY Ref_Template_Types.template_type_code ORDER BY count(*) DESC LIMIT 1 
 SELECT Ref_Template_Types.template_type_code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id GROUP BY Ref_Template_Types.template_type_code ORDER BY count(*) DESC LIMIT 1 
 SELECT template_type_code FROM Ref_Template_Types EXCEPT SELECT template_type_code FROM Templates JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Templates.template_id = Paragraphs.template_id 
 SELECT template_type_code FROM Ref_Template_Types EXCEPT SELECT template_type_code FROM Templates JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Templates.template_id = Paragraphs.template_id 
 SELECT Ref_Template_Types.template_type_code,        Ref_Template_Types.template_type_description FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id 
 SELECT Ref_Template_Types.template_type_code,        Ref_Template_Types.template_type_description FROM Ref_Template_Types UNION SELECT Templates.template_type_code,        Templates.template_type_description FROM Templates JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id 
 SELECT Ref_Template_Types.template_type_description FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id 
 SELECT Ref_Template_Types.template_type_description FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id WHERE Ref_Template_Types.template_type_code = "AD" 
 SELECT Ref_Template_Types.template_type_code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id WHERE Templates.template_type_description = "Book" 
 SELECT Ref_Template_Types.template_type_code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id WHERE Ref_Template_Types.template_type_description = "Book" 
 SELECT DISTINCT Ref_Template_Types.template_type_description FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id 
 SELECT DISTINCT Ref_Template_Types.template_type_description FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id 
 SELECT Templates.template_type_code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id WHERE Ref_Template_Types.template_type_description = "Presentation" 
 SELECT Templates.Template_Type_Code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Ref_Template_Types.Template_Type_Description = "Presentation" 
 SELECT count(*) FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID 
 SELECT count(*) FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID 
 SELECT count(*) FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Documents.Document_Name = "Summer Show" 
 SELECT count(*) FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Documents.Document_Name = "Summer Show" 
 SELECT Paragraphs.other_details FROM Templates JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id WHERE Paragraphs.paragraph_text = "Korea " 
 SELECT Templates.template_type_description FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id WHERE Paragraphs.paragraph_text = "Korea " 
 SELECT Paragraphs.paragraph_id,        Paragraphs.paragraph_text FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id WHERE Documents.document_name = "Welcome to NY" 
 SELECT Paragraphs.paragraph_id,        Paragraphs.paragraph_text FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id WHERE Documents.document_name = "Welcome to NY" 
 SELECT Paragraphs.paragraph_text FROM Templates JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id WHERE Documents.document_name = "Customer reviews" 
 SELECT Paragraphs.paragraph_text FROM Templates JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id WHERE Documents.document_name = "Customer reviews" 
 SELECT Documents.Document_id,        count(*) FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_id ORDER BY Documents.Document_id 
 SELECT Documents.Document_id,        count(*) FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_id ORDER BY count(*) DESC 
 SELECT Documents.Document_ID,        Documents.Document_Name,        count(*) FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID 
 SELECT Documents.Document_ID,        Documents.Document_name,        count(*) FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID 
 SELECT document_id FROM Templates JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id GROUP BY document_id HAVING count(*) >= 2 
 SELECT document_id FROM Templates JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id GROUP BY document_id HAVING count(*) >= 2 
 SELECT Documents.Document_ID,        Documents.Document_Name FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID ORDER BY count(*) DESC LIMIT 1 
 SELECT Documents.Document_ID,        Documents.Document_Name FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID ORDER BY count(*) DESC LIMIT 1 
 SELECT Documents.document_id FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id GROUP BY Documents.document_id ORDER BY count(*) ASC LIMIT 1 
 SELECT Documents.Document_ID FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID ORDER BY count(*) ASC LIMIT 1 
 SELECT Documents.document_id FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id GROUP BY Documents.document_id HAVING count(*) BETWEEN 1 AND 2 
 SELECT Documents.Document_ID FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID HAVING count(*) BETWEEN 1 AND 2 
 SELECT Documents.Document_id FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Paragraphs.Paragraph_text = "Brazil" INTERSECT   SELECT Documents.Document_id   FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Paragraphs.Paragraph_text = "Ireland" 
 SELECT Documents.Document_ID FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Paragraphs.Paragraph_Text = "Brazil"   AND Paragraphs.Paragraph_Text = "Ireland" 
 SELECT count(*) FROM teacher 
 SELECT count(*) FROM course JOIN teacher ON course.teacher_id = teacher.teacher_id JOIN course_arrange ON course.course_id = course_arrange.course_id 
 SELECT teacher.Name FROM course JOIN teacher ON course.teacher_id = teacher.teacher_id JOIN course_arrange ON course.course_id = course_arrange.course_id ORDER BY teacher.age ASC 
 SELECT teacher.Name FROM course JOIN teacher ON course.teacher_id = teacher.teacher_id JOIN course_arrange ON course.course_id = course_arrange.course_id ORDER BY teacher.age 
 SELECT teacher.age,        teacher.hometown FROM course JOIN teacher ON course.teacher_id = teacher.teacher_id JOIN course_arrange ON course.course_id = course_arrange.course_id 
 SELECT teacher.Name,        teacher.Age,        teacher.Hometown FROM course JOIN teacher ON course.teacher_id = teacher.teacher_id JOIN course_arrange ON course.course_id = course_arrange.course_id 
 SELECT teacher.Name FROM course JOIN teacher ON course.teacher_id = teacher.teacher_id WHERE teacher.Hometown!= "Little Lever Urban District" 
 SELECT teacher.Name FROM course JOIN teacher ON course.teacher_id = teacher.teacher_id WHERE teacher.Hometown!= "Little Lever Urban District" 
 SELECT teacher.Name FROM course JOIN teacher ON course.Teacher_ID = teacher.Teacher_ID JOIN course_arrange ON course.Course_ID = course_arrange.Course_ID WHERE teacher.Age = 32   OR teacher.Age = 33 
 SELECT teacher.Name FROM course JOIN teacher ON course.Teacher_ID = teacher.Teacher_ID JOIN course_arrange ON course.Course_ID = course_arrange.Course_ID WHERE teacher.Age = 32   OR teacher.Age = 33 
 SELECT teacher.Hometown FROM course JOIN teacher ON course.teacher_id = teacher.teacher_id ORDER BY teacher.age LIMIT 1 
 SELECT teacher.Hometown FROM course JOIN teacher ON course.teacher_id = teacher.teacher_id WHERE course.staring_date =     (SELECT min(staring_date)      FROM course) 
 SELECT teacher.Hometown,        count(*) FROM course JOIN teacher ON course.teacher_id = teacher.teacher_id GROUP BY teacher.Hometown 
 SELECT teacher.Hometown,        count(*) FROM course JOIN teacher ON course.teacher_id = teacher.teacher_id GROUP BY teacher.Hometown 
 SELECT teacher.Hometown FROM course JOIN teacher ON course.teacher_id = teacher.teacher_id GROUP BY teacher.Hometown ORDER BY COUNT(*) DESC LIMIT 1 
 SELECT teacher.Hometown FROM course JOIN teacher ON course.teacher_id = teacher.teacher_id GROUP BY teacher.Hometown ORDER BY count(*) DESC LIMIT 1 
 SELECT teacher.Hometown FROM course JOIN teacher ON course.teacher_id = teacher.teacher_id GROUP BY teacher.Hometown HAVING COUNT(*) >= 2 
 SELECT teacher.Hometown FROM course JOIN teacher ON course.teacher_id = teacher.teacher_id GROUP BY teacher.Hometown HAVING COUNT(*) >= 2 
 SELECT teacher.Name,        course.course FROM course JOIN teacher ON course.teacher_id = teacher.teacher_id JOIN course_arrange ON course.course_id = course_arrange.course_id 
 SELECT teacher.Name,        course.course FROM course JOIN teacher ON course.teacher_id = teacher.teacher_id JOIN course_arrange ON course.course_id = course_arrange.course_id 
 SELECT teacher.Name,        course.course FROM course JOIN teacher ON course.teacher_id = teacher.teacher_id JOIN course_arrange ON course.course_id = course_arrange.course_id ORDER BY teacher.Name ASC 
 SELECT course,        teacher.Name FROM course JOIN teacher ON course.teacher_id = teacher.teacher_id ORDER BY teacher.Name 
 SELECT teacher.Name FROM course JOIN teacher ON course.teacher_id = teacher.teacher_id JOIN course_arrange ON course.course_id = course_arrange.course_id WHERE course.course = "Math" 
 SELECT teacher.Name FROM course JOIN teacher ON course.teacher_id = teacher.teacher_id JOIN course_arrange ON course.course_id = course_arrange.course_id WHERE course.course = "Math" 
 SELECT teacher.Name,        count(*) FROM course JOIN teacher ON course.teacher_id = teacher.teacher_id JOIN course_arrange ON course.course_id = course_arrange.course_id GROUP BY teacher.Name 
 SELECT teacher.Name,        count(*) FROM course JOIN teacher ON course.teacher_id = teacher.teacher_id JOIN course_arrange ON course.course_id = course_arrange.course_id GROUP BY teacher.teacher_id 
 SELECT teacher.Name FROM course JOIN teacher ON course.teacher_id = teacher.teacher_id JOIN course_arrange ON course.course_id = course_arrange.course_id GROUP BY teacher.Name HAVING count(*) >= 2 
 SELECT teacher.Name FROM course JOIN teacher ON course.teacher_id = teacher.teacher_id JOIN course_arrange ON course.course_id = course_arrange.course_id GROUP BY teacher.Name HAVING count(*) >= 2 
 SELECT name FROM teacher EXCEPT SELECT teacher.name FROM course JOIN course_arrange ON course.course_id = course_arrange.course_id JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id 
 SELECT name FROM teacher EXCEPT SELECT teacher.name FROM course JOIN course_arrange ON course.course_id = course_arrange.course_id JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id 
 SELECT COUNT (DISTINCT visitor.Name) FROM museum JOIN visitor ON museum.Museum_ID = visitor.visitor_ID WHERE visitor.age < 30 
 SELECT visitor.Name FROM museum JOIN visitor ON museum.Museum_ID = visitor.visitor_ID WHERE visitor.Level_of_membership > 4 ORDER BY visitor.Level_of_membership DESC 
 SELECT avg(visitor.age) FROM museum JOIN visitor ON museum.Museum_ID = visitor.visitor_ID WHERE visitor.Level_of_membership <= 4 
 SELECT visitor.Name,        museum.Num_of_Staff,        visitor.Level_of_membership FROM museum JOIN visitor ON museum.Museum_ID = visitor.visitor_ID WHERE visitor.Level_of_membership > 4 ORDER BY visitor.Age 
 SELECT museum.name,        museum.name FROM museum JOIN visitor ON museum.museum_id = visitor.visitor_id JOIN visit ON museum.museum_id = visit.museum_id GROUP BY museum.museum_id ORDER BY count(*) DESC LIMIT 1 
 SELECT avg(museum.Num_of_Staff) FROM museum JOIN visitor ON museum.Museum_ID = visitor.Museum_ID JOIN visit ON museum.Museum_ID = visit.Museum_ID WHERE visit.Open_Year < 2009 
 SELECT museum.open_year,        museum.num_of_staff FROM museum JOIN visitor ON museum.Museum_ID = visitor.Museum_ID JOIN visit ON visit.Museum_ID = museum.Museum_ID WHERE museum.Name = "Plaza Museum" 
 SELECT museum.name FROM museum JOIN visitor ON museum.museum_id = visitor.visitor_id JOIN visit ON museum.museum_id = visit.museum_id WHERE visit.open_year > 2010   AND museum.num_of_staff >     (SELECT min(num_of_staff)      FROM museum      WHERE open_year > 2010) 
 SELECT DISTINCT visitor.ID,                 museum.Name,                 visitor.Age FROM museum JOIN visitor ON museum.Museum_ID = visitor.visitor_ID GROUP BY visitor.ID HAVING COUNT(*) > 1 
 SELECT visitor.ID,        museum.Name,        visitor.Level_of_membership FROM museum JOIN visitor ON museum.Museum_ID = visitor.visitor_ID JOIN visit ON museum.Museum_ID = visit.Museum_ID ORDER BY visit.Total_spent DESC LIMIT 1 
 SELECT museum.Museum_ID,        museum.Name FROM museum JOIN visitor ON museum.Museum_ID = visitor.Museum_ID JOIN visit ON visit.Museum_ID = museum.Museum_ID GROUP BY museum.Museum_ID ORDER BY count(*) DESC LIMIT 1 
 SELECT name FROM museum WHERE museum_id NOT IN     (SELECT museum_id      FROM visitor) 
 SELECT visitor.Name,        visitor.Age FROM museum JOIN visitor ON museum.Museum_ID = visitor.visitor_ID JOIN visit ON museum.Museum_ID = visit.Museum_ID GROUP BY museum.Museum_ID ORDER BY sum(visit.Num_of_Ticket) DESC LIMIT 1 
 SELECT avg(visit.Num_of_Ticket),        max(visit.Num_of_Ticket) FROM museum JOIN visitor ON museum.Museum_ID = visitor.visitor_ID JOIN visit ON museum.Museum_ID = visit.Museum_ID 
 SELECT sum(visit.Total_spent) FROM museum JOIN visitor ON museum.Museum_ID = visitor.visitor_ID WHERE visitor.Level_of_membership = 1 
 SELECT visitor.Name FROM museum JOIN visitor ON museum.Museum_ID = visitor.visitor_ID WHERE museum.Open_Year < 2011 INTERSECT   SELECT visitor.Name   FROM museum   JOIN visitor ON museum.Museum_ID = visitor.visitor_ID WHERE museum.Open_Year > 2009 
 SELECT count(*) FROM museum WHERE open_year < 2010 EXCEPT SELECT count(*) FROM museum 
 SELECT count(*) FROM museum WHERE open_year > 2013   OR open_year < 2008 
 SELECT count(*) FROM players UNION SELECT count(*) FROM matches UNION SELECT count(*) FROM rankings 
 SELECT count(*) FROM players UNION SELECT count(*) FROM matches UNION SELECT count(*) FROM rankings 
 SELECT count(*) FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON players.player_id = rankings.player_id 
 SELECT count(*) FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON players.player_id = rankings.player_id 
 SELECT players.first_name,        players.birth_date FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON players.player_id = rankings.player_id WHERE players.country_code = "USA" 
 SELECT players.first_name,        players.birth_date FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON players.player_id = rankings.player_id WHERE players.country_code = "USA" 
 SELECT avg(matches.loser_age),        avg(matches.winner_age) FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON players.player_id = rankings.player_id 
 SELECT avg(matches.loser_age),        avg(matches.winner_age) FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON players.player_id = rankings.player_id 
 SELECT avg(rankings.ranking) FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id 
 SELECT avg(rankings.ranking) FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id 
 SELECT max(rankings.ranking) FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON players.player_id = rankings.player_id 
 SELECT rankings.ranking FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY rankings.ranking ORDER BY count(*) DESC LIMIT 1 
 SELECT count(DISTINCT players.country_code) FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON players.player_id = rankings.player_id 
 SELECT count(DISTINCT players.country_code) FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON players.player_id = rankings.player_id 
 SELECT count(DISTINCT players.last_name) FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON players.player_id = rankings.player_id 
 SELECT count(DISTINCT players.loser_name) FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON players.player_id = rankings.player_id 
 SELECT tourney_name FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY tourney_name HAVING count(*) > 10 
 SELECT tourney_name FROM matches JOIN players ON matches.loser_id = players.player_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY tourney_name HAVING count(*) > 10 
 SELECT players.first_name,        players.last_name FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.year = 2013 INTERSECT   SELECT players.first_name,      players.last_name   FROM players   JOIN matches ON players.player_id = matches.winner_id   JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.year = 2016 
 SELECT players.first_name,        players.last_name FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.year = 2013 INTERSECT   SELECT players.first_name,      players.last_name   FROM players   JOIN matches ON players.player_id = matches.winner_id   JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.year = 2016 
 SELECT count(*) FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.year = 2013   OR rankings.year = 2016 
 SELECT count(*) FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.year = 2013   OR rankings.year = 2016 
 SELECT players.country_code,        players.first_name FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id WHERE matches.tourney_name = "WTA Championships" INTERSECT   SELECT players.country_code,      players.first_name   FROM players   JOIN matches ON players.player_id = matches.winner_id   JOIN rankings ON players.player_id = rankings.player_id WHERE matches.tourney_name = "Australian Open" 
 SELECT players.first_name,        players.country_code FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id WHERE matches.tourney_name = "WTA Championships" INTERSECT   SELECT players.first_name,          players.country_code   FROM players   JOIN matches ON players.player_id = matches.winner_id   JOIN rankings ON players.player_id = rankings.player_id WHERE matches.tourney_name = "Australian Open" 
 SELECT players.first_name,        players.country_code FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON players.player_id = rankings.player_id ORDER BY rankings.ranking_points DESC LIMIT 1 
 SELECT players.first_name,        players.country_code FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON players.player_id = rankings.player_id ORDER BY rankings.ranking_points DESC LIMIT 1 
 SELECT players.first_name,        players.last_name FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON players.player_id = rankings.player_id ORDER BY players.birth_date 
 SELECT players.first_name,        players.last_name FROM players ORDER BY players.birth_date 
 SELECT players.first_name,        players.last_name FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON players.player_id = rankings.player_id WHERE players.hand = "L" ORDER BY players.birth_date 
 SELECT players.first_name,        players.last_name FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON players.player_id = rankings.player_id WHERE players.hand = "left" ORDER BY players.birth_date 
 SELECT players.first_name,        players.country_code FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id ORDER BY count(*) DESC LIMIT 1 
 SELECT players.first_name,        players.country_code FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id ORDER BY count(*) DESC LIMIT 1 
 SELECT match_year FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY match_year ORDER BY count(*) DESC LIMIT 1 
 SELECT match_year FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY match_year ORDER BY count(*) DESC LIMIT 1 
 SELECT players.winner_name,        rankings.ranking_points FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY rankings.ranking_points ORDER BY count(*) DESC LIMIT 1 
 SELECT players.winner_name,        rankings.ranking_points FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id ORDER BY matches.score DESC LIMIT 1 
 SELECT players.winner_name FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id WHERE matches.tourney_name = "Australian Open" ORDER BY rankings.ranking_points DESC LIMIT 1 
 SELECT players.winner_name FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id WHERE matches.tourney_name = "Australian Open" ORDER BY rankings.ranking_points DESC LIMIT 1; 
 SELECT players.loser_name,        players.winner_name FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON players.player_id = rankings.player_id WHERE matches.minutes =     (SELECT max(minutes)      FROM matches) 
 SELECT players.winner_name,        players.loser_name FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id WHERE matches.match_num =     (SELECT max(match_num)      FROM matches      JOIN rankings ON matches.winner_id = rankings.player_id      WHERE players.first_name = "John"        AND players.last_name = "Doe") 
 SELECT players.first_name,        avg(rankings.ranking),        players.first_name FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.first_name 
 SELECT players.first_name,        avg(rankings.ranking) FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id 
 SELECT players.first_name,        sum(rankings.ranking_points) FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.first_name 
 SELECT players.first_name,        sum(rankings.ranking_points) FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id 
 SELECT players.country_code,        count(*) FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.country_code 
 SELECT players.country_code,        count(*) FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.country_code 
 SELECT players.country_code FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.country_code ORDER BY count(*) DESC LIMIT 1 
 SELECT players.country_code FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.country_code ORDER BY count(*) DESC LIMIT 1 
 SELECT players.country_code FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.country_code HAVING count(*) > 50 
 SELECT country_code FROM players GROUP BY country_code HAVING count(player_id) > 50 
 SELECT rankings.ranking_date,        count(*) FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY rankings.ranking_date 
 SELECT rankings.ranking_date,        count(*) FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY rankings.ranking_date 
 SELECT matches.year,        count(*) FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY matches.year 
 SELECT matches.year,        count(*) FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY matches.year 
 SELECT rankings.player_name,        rankings.ranking FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id WHERE matches.year = 2015 GROUP BY rankings.player_id ORDER BY rankings.ranking LIMIT 3; 
 SELECT players.first_name,        rankings.ranking FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id ORDER BY rankings.ranking LIMIT 3 
 SELECT count(DISTINCT players.player_id) FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id WHERE players.hand = "Left"   AND matches.score = "Win" 
 SELECT count(*) FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id WHERE players.hand = "Left"   AND matches.tourney_name = "WTA Championships" 
 SELECT players.first_name,        players.country_code,        players.birth_date FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id ORDER BY rankings.ranking_points DESC LIMIT 1 
 SELECT players.first_name,        players.country_code,        players.birth_date FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id ORDER BY sum(rankings.ranking_points) DESC LIMIT 1 
 SELECT players.hand,        count(*) FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.hand 
 SELECT players.hand,        count(*) FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.hand 
 SELECT count(*) FROM battle JOIN ship ON battle.lost_in_battle = ship.id JOIN death ON ship.id = death.caused_by_ship_id WHERE battle.result = "Captured" 
 SELECT ship.name,        ship.tonnage FROM battle JOIN ship ON battle.lost_in_battle = ship.id JOIN death ON battle.id = death.caused_by_ship_id ORDER BY ship.name DESC 
 SELECT battle.name,        battle.date,        battle.result FROM battle JOIN ship ON battle.lost_in_battle = ship.id JOIN death ON ship.id = death.caused_by_ship_id 
 SELECT max(death.killed),        min(death.injured) FROM battle JOIN ship ON battle.lost_in_battle = ship.id JOIN death ON ship.id = death.caused_by_ship_id 
 SELECT avg(death.injured) FROM battle JOIN ship ON battle.lost_in_battle = ship.lost_in_battle JOIN death ON ship.id = death.caused_by_ship_id 
 SELECT death.note,        death.injured FROM battle JOIN ship ON battle.lost_in_battle = ship.id JOIN death ON ship.id = death.caused_by_ship_id WHERE ship.tonnage = 't' 
 SELECT battle.name,        battle.result FROM battle JOIN ship ON battle.lost_in_battle = ship.lost_in_battle JOIN death ON ship.id = death.cause_by_ship_id WHERE ship.ship_type = 'Bulgar'   AND ship.name!= 'Boril' 
 SELECT battle.id,        ship.name FROM battle JOIN ship ON battle.lost_in_battle = ship.id WHERE ship.ship_type = 'Brig' 
 SELECT battle.id,        battle.name FROM battle JOIN ship ON battle.lost_in_battle = ship.id JOIN death ON ship.id = death.caused_by_ship_id GROUP BY battle.id HAVING sum(death.killed) > 10 
 SELECT ship.id,        ship.name FROM battle JOIN ship ON battle.lost_in_battle = ship.id JOIN death ON battle.id = death.cause_ship_id GROUP BY death.cause_ship_id ORDER BY sum(death.injured) DESC LIMIT 1 
 SELECT DISTINCT battle.name FROM battle JOIN ship ON battle.lost_in_battle = ship.lost_in_battle JOIN death ON ship.id = death.caused_by_ship_id WHERE battle.bulgarian_commander = 'Kaloyan'   AND battle.latin_commander = 'Baldwin I' 
 SELECT count(DISTINCT battle.result) FROM battle JOIN ship ON battle.lost_in_battle = ship.id JOIN death ON ship.id = death.caused_by_ship_id 
 SELECT count(*) FROM battle WHERE tonnage!= 225   AND result = "No" 
 SELECT battle.name,        battle.date FROM battle JOIN ship ON battle.lost_in_battle = ship.id WHERE ship.name = 'Lettice'   AND ship.name = 'HMS Atalanta' 
 SELECT battle.name,        battle.result,        battle.bulgarian_commander FROM battle JOIN ship ON battle.lost_in_battle = ship.id WHERE ship.ship_type = 'Ship' INTERSECT   SELECT battle.name,          battle.result,          battle.bulgarian_commander FROM battle JOIN ship ON battle.lost_in_battle = ship.id WHERE ship.ship_type = 'Ship' INTERSECT 
 SELECT death.note FROM battle JOIN ship ON battle.lost_in_battle = ship.lost_in_battle JOIN death ON ship.id = death.caused_by_ship_id WHERE ship.location = "East" 
 SELECT Addresses.line_1,        Addresses.line_2 FROM Addresses JOIN Courses ON Addresses.address_id = Courses.course_id JOIN Departments ON Courses.department_id = Departments.department_id JOIN Sections ON Courses.course_id = Sections.course_id JOIN Semesters ON Courses.semester_id = Semesters.semester_id JOIN Students ON Courses.course_id = Students.student_id JOIN Student_Enrolment_Courses ON Students.student_id = Student_Enrolment_Courses.student_id JOIN Transcripts ON Student_Enrolment_Courses.student_course_id = Transcripts.student_course_id JOIN Transcript_Contents ON Student_Enrolment_Courses.student_course_id = Transcript_Contents.student_course_id WHERE Addresses.line_1 = "Line 1"   AND Addresses.line_2 = "Line 2" 
 SELECT Addresses.line_1,        Addresses.line_2 FROM Addresses JOIN Courses ON Addresses.address_id = Courses.course_id JOIN Degrees ON Courses.course_id = Degrees.course_id JOIN Sections ON Courses.course_id = Sections.course_id JOIN Semesters ON Courses.course_id = Semesters.course_id JOIN Students ON Students.student_id = Courses.student_id JOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id JOIN Transcripts ON Student_Enrolment_Courses.student_course_id = Transcripts.student_course_id JOIN Transcript_Contents ON Student_Enrolment_Courses.student_course_id = Transcripts.student_course_id WHERE Addresses.city = "Toronto"   AND Addresses.state_province_county = "ONTARIO"   AND Addresses.country = "CANADA" 
 SELECT count(*) FROM Addresses JOIN Courses ON Addresses.address_id = Courses.course_id JOIN Departments ON Courses.department_id = Departments.department_id JOIN Degree_Programs ON Courses.course_id = Degree_Programs.course_id JOIN Sections ON Courses.course_id = Sections.course_id JOIN Semesters ON Courses.course_id = Semesters.course_id JOIN Students ON Courses.course_id = Students.student_id JOIN Student_Enrolment_Courses ON Students.student_id = Student_Enrolment_Courses.student_id JOIN Transcripts ON Student_Enrolment_Courses.student_course_id = Transcripts.student_course_id JOIN Transcript_Contents ON Student_Enrolment_Courses.student_course_id = Transcript_Contents.student_course_id 
 SELECT count(*) FROM Addresses JOIN Courses ON Addresses.address_id = Courses.course_id JOIN Departments ON Courses.department_id = Departments.department_id JOIN Degree_Programs ON Courses.degree_program_id = Degree_Programs.degree_program_id JOIN Sections ON Courses.course_id = Sections.course_id JOIN Semesters ON Courses.semester_id = Semesters.semester_id JOIN Students ON Students.student_id = Courses.student_id JOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id JOIN Transcripts ON Student_Enrolment_Courses.student_course_id = Transcripts.student_course_id JOIN Transcript_Contents ON Student_Enrolment_Courses.student_course_id = Transcript_Contents.student_course_id WHERE Addresses.city = "Toronto"   AND Addresses.state_province_county = "ONTARIO"   AND Addresses.country = "CANADA"; 
 SELECT Courses.course_description FROM Addresses JOIN Courses ON Addresses.address_id = Courses.course_id JOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id JOIN Transcripts ON Student_Enrolment_Courses.student_course_id = Transcripts.student_course_id WHERE Courses.course_name = "Math" 
 SELECT Courses.course_description FROM Addresses JOIN Courses ON Addresses.address_id = Courses.course_id JOIN Departments ON Courses.department_id = Departments.department_id JOIN Degree_Programs ON Courses.department_id = Degree_Programs.department_id JOIN Sections ON Courses.course_id = Sections.course_id JOIN Semesters ON Courses.course_id = Semesters.course_id JOIN Students ON Students.student_id = Courses.student_id JOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id JOIN Transcripts ON Student_Enrolment_Courses.student_course_id = Transcripts.student_course_id JOIN Transcript_Contents ON Student_Enrolment_Courses.student_course_id = Transcripts.student_course_id WHERE Courses.course_name = "Math" 
 SELECT Addresses.zip_postcode FROM Addresses JOIN Courses ON Addresses.address_id = Courses.address_id JOIN Departments ON Courses.department_id = Departments.department_id JOIN Sections ON Courses.course_id = Sections.course_id JOIN Semesters ON Courses.semester_id = Semesters.semester_id JOIN Students ON Courses.student_id = Students.student_id JOIN Student_Enrolment_Courses ON Students.student_id = Student_Enrolment_Courses.student_id JOIN Transcripts ON Student_Enrolment_Courses.student_course_id = Transcripts.student_course_id JOIN Transcript_Contents ON Student_Enrolment_Courses.student_course_id = Transcript_Contents.student_course_id WHERE Courses.course_name = "Port Chelsea"   AND Addresses.city = "Port Chelsea" 
 SELECT Addresses.zip_postcode FROM Addresses JOIN Courses ON Addresses.address_id = Courses.course_id JOIN Departments ON Courses.department_id = Departments.department_id JOIN Sections ON Courses.course_id = Sections.course_id JOIN Semesters ON Courses.semester_id = Semesters.semester_id JOIN Students ON Students.student_id = Courses.student_id JOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id JOIN Transcripts ON Student_Enrolment_Courses.student_course_id = Transcripts.student_course_id JOIN Transcript_Contents ON Student_Enrolment_Courses.student_course_id = Transcripts.student_course_id WHERE Addresses.city = "Port Chelsea"; 
 SELECT DEPARTMENTS.department_name,        DEGREE_PROGRAMS.department_id FROM DEPARTMENTS JOIN DEGREE_PROGRAMS ON DEPARTMENTS.department_id = DEGREE_PROGRAMS.department_id GROUP BY DEPARTMENTS.department_id ORDER BY count(*) DESC LIMIT 1 
 SELECT DEPARTMENTS.department_name,        DEGREE_PROGRAMS.department_id FROM DEPARTMENTS JOIN DEGREE_PROGRAMS ON DEPARTMENTS.department_id = DEGREE_PROGRAMS.department_id GROUP BY DEPARTMENTS.department_id ORDER BY count(*) DESC LIMIT 1 
 SELECT count(*) FROM DEPARTMENTS JOIN DEGREE_PROGRAMS ON DEPARTMENTS.department_id = DEGREE_PROGRAMS.department_id JOIN COURSES ON DEGREE_PROGRAMS.course_id = COURSES.course_id JOIN STUDENTS ON DEGREE_PROGRAMS.department_id = STUDENTS.current_address_id JOIN STUDENT_ENROLLMENT ON STUDENTS.student_id = STUDENT_ENROLLMENT.student_id JOIN STUDENT_ENROLLMENT_CROSS REFERENCES ON STUDENT_ENROLLMENT.student_course_id = STUDENT_ENROLLMENT_CROSS REFERENCES.student_course_id JOIN TRANSCRIPTS ON STUDENTS.student_id = TRANSCRIPTS.student_id JOIN TRANSCRIPT_CONTENTS ON TRANSCRIPTS.transcript_id = TRANSCRIPT_CONTENTS.transcript_id WHERE DEPTORIES.department_name = "Computer Science" 
 SELECT count(DISTINCT departments.department_name) FROM addresses JOIN courses ON courses.department_id = addresses.department_id JOIN degree_programs ON courses.course_id = degree_programs.course_id JOIN sections ON courses.course_id = sections.course_id JOIN semesters ON courses.course_id = sections.course_id JOIN students ON students.student_id = sections.student_id JOIN student_enrolment ON student_enrolment.student_id = sections.student_id JOIN student_enrolment_courses ON student_enrolment.student_id = student_enrolment_courses.student_id JOIN transcripts ON student_enrolment_courses.transcript_id = transcripts.transcript_id JOIN transcript_contents ON student_enrolment_courses.transcript_id = transcript_contents.transcript_id WHERE courses.course_name = "How to get a degree" GROUP BY departments.department_name 
 SELECT count(DISTINCT degree_programs.degree_summary_name) FROM degree_programs JOIN courses ON degree_programs.department_id = courses.department_id JOIN sections ON courses.course_id = sections.course_id JOIN semesters ON courses.semester_id = semesters.semester_id JOIN students ON students.student_id = courses.student_id JOIN student_enrolment_courses ON courses.course_id = student_enrolment_courses.course_id JOIN transcript_contents ON student_enrolment_courses.student_course_id = transcript_contents.student_course_id JOIN transcripts ON transcript_contents.transcript_id = transcripts.transcript_id GROUP BY transcript_contents.transcript_id 
 SELECT count(DISTINCT degree_program_id) FROM DEPARTMENTS JOIN COURSES JOIN DEGREE_PROGRAMS JOIN SECTIONs JOIN SEMESTERS JOIN STUDENTS JOIN STUDENT_ENROLMENT_CROSSINGS JOIN TRANSCRIPTS JOIN TRANSCRIPT_CONTENTS 
 SELECT count(*) FROM DEPARTMENTS JOIN DEGREE_PROGRAMS ON DEPARTMENTS.department_id = DEGREE_PROGRAMS.department_id JOIN COURSES ON DEGREE_PROGRAMS.course_id = COURSES.course_id JOIN DEPARTMENTS ON COURSES.department_id = DEPARTMENTS.department_id WHERE DEPARTMENTS.department_name = "Engineering" 
 SELECT count(*) FROM DEPARTMENTS JOIN DEGREE_PROGRAMS JOIN COURSES JOIN SECTIONS JOIN SEMESTERS JOIN STUDENTS JOIN STUDENT_ENROLMENT_CROSSINGS JOIN TRANSCRIPTS JOIN TRANSCRIPT_CONTENTS WHERE DEPARTMENTS.department_name = "Engineering"   AND DEGREE_PROGRAMS.degree_program_id = COURSES.course_id   AND COURSES.course_name = "Engineering"   AND SECTIONS.section_name = "Spring"   AND TRANSCRIPTS.transcript_date >= "2015-01-01"   AND TRANSCRIPTS.transcript_date <= "2017-12-31"   AND TRANSCRIPT_CONTENTS.student_course_id = STUDENT_ENROLMENT_CROSSINGS.student_course_id 
 SELECT Courses.course_name,        Courses.course_description FROM Addresses JOIN Courses ON Addresses.address_id = Courses.course_id JOIN Sections ON Courses.course_id = Sections.course_id 
 SELECT Courses.course_name,        Courses.course_description FROM Addresses JOIN Courses ON Addresses.address_id = Courses.course_id JOIN Sections ON Courses.course_id = Sections.course_id 
 SELECT Courses.course_name,        Courses.course_id FROM Addresses JOIN Courses ON Addresses.address_id = Courses.course_id JOIN Sections ON Courses.course_id = Sections.course_id GROUP BY Courses.course_id HAVING count(*) <= 2 
 SELECT Courses.course_name,        Courses.course_id FROM Addresses JOIN Courses ON Addresses.address_id = Courses.course_id JOIN Sections ON Courses.course_id = Sections.course_id GROUP BY Courses.course_id HAVING count(*) < 2 
 SELECT Sections.section_name FROM Addresses JOIN Courses ON Addresses.address_id = Courses.course_id JOIN Departments ON Courses.department_id = Departments.department_id JOIN Degree_Programs ON Courses.department_id = Degree_Programs.department_id JOIN Sections ON Courses.course_id = Sections.course_id JOIN Semesters ON Courses.semester_id = Semesters.semester_id JOIN Students ON Courses.student_id = Students.student_id JOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id JOIN Student_Enrolment ON Student_Enrolment.student_id = Student_Enrolment_Courses.student_id JOIN Transcripts ON Student_Enrolment.student_id = Transcripts.student_id JOIN Transcript_Contents ON Student_Enrolment.student_id = Transcripts.student_id ORDER BY Transcripts.transcript_date DESC 
 SELECT Sections.section_name FROM Addresses JOIN Courses ON Addresses.address_id = Courses.course_id JOIN Departments ON Courses.department_id = Departments.department_id JOIN Sections ON Courses.course_id = Sections.course_id ORDER BY Addresses.line_3 DESC 
 SELECT semesters.semester_name,        semesters.semester_id FROM addresses JOIN courses ON addresses.address_id = courses.address_id JOIN degree_programs ON courses.department_id = degree_programs.department_id JOIN sections ON courses.course_id = sections.course_id JOIN semesters ON courses.course_id = semesters.course_id JOIN student_enrolment ON student_enrolment.student_id = sections.student_id JOIN student_enrolment_courses ON student_enrolment.student_id = student_enrolment_courses.student_id JOIN transcripts ON student_enrolment_courses.transcript_id = transcripts.transcript_id JOIN transcript_contents ON student_enrolment_courses.transcript_id = transcript_contents.transcript_id GROUP BY semesters.semester_name ORDER BY count(*) DESC LIMIT 1 
 SELECT semesters.semester_name,        semesters.semester_id FROM addresses JOIN courses ON addresses.address_id = courses.course_id JOIN degree_programs ON courses.department_id = degree_programs.department_id JOIN sections ON courses.course_id = sections.course_id JOIN semesters ON courses.course_id = semesters.course_id JOIN student_enrolment ON student_enrolment.student_id = sections.student_id JOIN student_enrolment_courses ON student_enrolment.student_id = student_enrolment_courses.student_id JOIN transcripts ON student_enrolment_courses.transcript_id = transcripts.transcript_id JOIN transcript_contents ON student_enrolment_courses.transcript_id = transcript_contents.transcript_id GROUP BY semesters.semester_name ORDER BY count(*) DESC LIMIT 1 
 SELECT DEPARTMENTS.department_description FROM DEPARTMENTS JOIN COURSES ON DEPARTMENTS.department_id = COURSES.department_id JOIN DEGREE_PROGRAMS ON COURSES.course_id = DEGREE_PROGRAMS.course_id JOIN SECTIONS ON DEGREE_PROGRAMS.degree_program_id = SECTIONS.course_id JOIN STUDENTS ON DEPARTMENTS.department_id = STUDENTS.current_address_id JOIN STUDENT_ENROLLMENT ON STUDENTS.student_id = STUDENT_ENROLLMENT.student_id JOIN STUDENT_ENROLLMENT_CROSS REFERENCES ON STUDENT_ENROLLMENT.student_course_id = STUDENT_ENROLLMENT_CROSS REFERENCES.student_course_id JOIN TRANSCRIPTS ON STUDENT_ENROLLMENT.student_course_id = TRANSCRIPTS.student_course_id JOIN TRANSCRIPT_CONTENTS ON TRANSCRIPTS.transcript_id = TRANSCRIPT_CONTENTS.transcript_id WHERE DEPARTMENTS.department_name LIKE "%the computer%" 
 SELECT DEPARTMENTS.department_description FROM DEPARTMENTS JOIN COURSES ON DEPARTMENTS.department_id = COURSES.department_id JOIN DEGREE_PROGRAMS ON COURSES.course_id = DEGREE_PROGRAMS.course_id JOIN SECTIONS ON DEGREE_PROGRAMS.degree_program_id = SECTIONS.course_id JOIN STUDENTS ON DEGREE_PROGRAMS.degree_program_id = STUDENTS.degree_program_id JOIN STUDENT_ENROLMENT_CROSS REFERENCES ON STUDENTS.student_id = STUDENT_ENROLMENT_CROSS REFERENCES.student_enrolment.student_enrolment_id JOIN STUDENT_ENROLMENT ON STUDENTS.student_id = STUDENT_ENROLMENT.student_id JOIN TRANSCRIPTS ON STUDENTS.student_id = TRANSCRIPTS.student_id JOIN TRANSCRIPT_CONTENTS ON STUDENTS.student_id = TRANSCRIPT_CONTENTS.student_course_id WHERE TRANSCRIPTS.transcript_description LIKE '%computer%' 
 SELECT students.first_name,        students.middle_name,        students.last_name,        student_enrolment_course_id FROM addresses JOIN courses ON courses.course_id = student_enrolment_course_id JOIN student_enrolment ON student_enrolment.student_id = student_enrolment_course_id JOIN student_Enrolment_Courses ON student_Enrolment.student_id = student_Enrolment_Courses.student_id JOIN transcripts ON student_Enrolment.student_id = student_Enrolment_Courses.student_id JOIN transcript_Contents ON student_Enrolment.student_id = student_Enrolment_Courses.student_id WHERE transcript_contents.semester_id = 1 GROUP BY students.first_name,          students.middle_name,          students.last_name,          student_Enrolment_course_id 
 SELECT students.first_name,        students.middle_name,        students.last_name,        student_enrolment.student_id FROM addresses JOIN courses ON courses.course_id = student_enrolment.course_id JOIN student_enrolment ON student_enrolment.student_id = student_enrolment.student_id JOIN student_ enrolment ON student_ enrolment.student_id = student_enrolment.student_id JOIN student_ enrolment_courses ON student_ enrolment_courses.student_course_id = student_ enrolment.student_course_id JOIN transcripts ON transcripts.transcript_id = student_ enrolment_courses.transcript_id JOIN transcript_contents ON transcript_contents.transcript_id = transcripts.transcript_id WHERE transcript_contents.semester_id = 1   AND courses.course_name = "2" 
 SELECT students.first_name,        students.middle_name,        students.last_name FROM addresses JOIN courses ON courses.course_id = courses.course_id JOIN departments ON courses.department_id = courses.department_id JOIN degree_programs ON courses.degree_program_id = degree_programs.degree_program_id JOIN sections ON courses.course_id = sections.course_id JOIN semesters ON courses.semester_id = semesters.semester_id JOIN students ON students.student_id = student_enrolment.student_id JOIN student_enrolment_courses ON student_enrolment.student_id = student_enrolment_courses.student_id JOIN transcript_contents ON student_enrolment_courses.student_course_id = transcript_contents.student_course_id JOIN transcripts ON transcript_contents.transcript_id = transcripts.transcript_id WHERE degree_programs.department_name = "Computer Science"   AND transcript_contents.transcript_date > "2010-01-01"   AND transcript_contents.other_details = "Yes"; 
 SELECT students.first_name,        students.middle_name,        students.last_name FROM addresses JOIN courses ON courses.course_id = courses.course_id JOIN departments ON courses.department_id = departments.department_id JOIN degree_programs ON courses.degree_program_id = degree_programs.degree_program_id JOIN sections ON courses.course_id = sections.course_id JOIN semesters ON courses.semester_id = semesters.semester_id JOIN students ON students.student_id = student_enrolment.student_id JOIN student_enrolment_courses ON student_enrolment.student_id = student_enrolment_courses.student_id JOIN transcript_contents ON student_enrolment_courses.student_course_id = transcript_contents.student_course_id JOIN transcripts ON transcript_contents.transcript_id = transcripts.transcript_id WHERE degree_programs.department_name = "Bachelors" 
 SELECT DEGREE_PROGRAMS.degree_SUMMARY_NAME FROM DEGREE_PROGRAMS JOIN Sections ON DEGREE_PROGRAMS.degree_PROGRAM_ID = Sections.course_id JOIN STUDENT_ENROLMENT ON DEGREE_PROGRAMS.degree_PROGRAM_ID = STUDENT_ENROLMENT.degree_PROGRAM_ID JOIN STUDENT_ENROLMENT_CROSS REFERENCES ON STUDENT_ENROLMENT.student_course_id = STUDENT_ENROLMENT_CROSS REFERENCES.student_course_id GROUP BY DEGREE_PROGRAMS.degree_SUMMARY_NAME ORDER BY count(*) DESC LIMIT 1 
 SELECT degree_programs.degree_summary_name FROM addresses JOIN courses ON courses.course_id = sections.course_id JOIN degree_programs ON degree_programs.degree_program_id = courses.course_id JOIN student_enrolment ON student_enrolment.student_id = courses.student_id JOIN student_enrolment_courses ON student_enrolment.student_course_id = student_enrolment_courses.student_course_id JOIN transcripts ON student_enrolment_courses.transcript_id = transcripts.transcript_id GROUP BY degree_programs.degree_summary_name ORDER BY count(*) DESC LIMIT 1 
 SELECT DEGREE_PROGRAMS.degree_PROGRAMS.id,        DEGREE_PROGRAMS.degree_PROGRAMS.degree_SUMMARY_NAME FROM DEGREE_PROGRAMS JOIN COURSES ON DEGREE_PROGRAMS.course_id = COURSES.course_id JOIN DEPARTMENTS ON DEGREE_PROGRAMS.department_id = DEPARTMENTS.department_id JOIN STUDENTS ON DEGREE_PROGRAMS.course_id = STUDENTS.course_id JOIN STUDENT_ENROLLMENT_CROSS REFERENCES ON STUDENTS.student_id = STUDENT_ENROLLMENT_CROSS REFERENCES.student_enrolment.student_enrolment_id JOIN TRANSCRIPTS ON STUDENT_ENROLLMENT_CROSS REFERENCES.transcript_id = TRANSCRIPTS.transcript_id JOIN TRANSCRIPT_CONTENTS ON TRANSCRIPTS.transcript_id = TRANSCRIPT_CONTENTS.transcript_id GROUP BY DEGREE_PROGRAMS.degree_PROGRAMS.id ORDER BY count(*) DESC LIMIT 1 
 SELECT DEGREE_PROGRAMS.degree_PROGRAMS_ID,        DEGREE_PROGRAMS.degree_PROGRAMS_DESCRIPTION FROM DEGREE_PROGRAMS JOIN COURSES ON DEGREE_PROGRAMS.COURSE_ID = COURSES.COURSE_ID JOIN DEPARTMENTS ON DEGREE_PROGRAMS.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID JOIN STUDENTS ON DEGREE_PROGRAMS.DEPARTMENT_ID = STUDENTS.Permanent_ADDRESS_ID JOIN STUDENT_ENROLLMENT ON STUDENTS.Student_ID = STUDENT_ENROLLMENT.Student_ID JOIN STUDENT_ENROLLMENT_CROSS REFERENCES ON STUDENT_ENROLLMENT.Student_ID = STUDENT_ENROLLMENT_CROSS REFERENCES.Student_ID JOIN TRANSCRIPTS ON STUDENT_ENROLLMENT.COURSE_ID = TRANSCRIPTS.COURSE_ID JOIN TRANSCRIPT_CONTENTS ON TRANSCRIPTS.Transcript_ID = TRANSCRIPT_CONTENTS.Transcript_ID GROUP BY DEGREE_PROGRAMS.DEPARTMENT_ID ORDER BY count(*) DESC LIMIT 1 
 SELECT students.student_id,        students.first_name,        students.middle_name,        students.last_name,        count(*) FROM addresses JOIN courses ON courses.course_id = sections.course_id JOIN sections ON courses.course_id = sections.course_id JOIN degree_programs ON courses.department_id = degree_programs.department_id JOIN student_enrolment ON student_enrolment.student_id = courses.student_id JOIN student_enrolment_courses ON student_enrolment.student_id = student_enrolment_courses.student_id JOIN transcripts ON student_enrolment_courses.transcript_id = transcripts.transcript_id JOIN transcript_contents ON student_enrolment_courses.transcript_id = transcript_contents.transcript_id GROUP BY students.student_id ORDER BY count(*) DESC LIMIT 1; 
 SELECT students.first_name,        students.middle_name,        students.last_name,        count(*) FROM addresses JOIN courses ON courses.course_id = sections.course_id JOIN sections ON courses.course_id = sections.course_id JOIN degree_programs ON courses.degree_program_id = degree_programs.degree_program_id JOIN student_enrolment ON student_enrolment.student_id = courses.student_id JOIN student_enrolment_courses ON student_enrolment.student_id = student_enrolment_courses.student_id JOIN transcripts ON student_enrolment_courses.transcript_id = transcripts.transcript_id JOIN transcript_contents ON student_enrolment_courses.transcript_id = transcript_contents.transcript_id GROUP BY students.first_name,          students.middle_name,          students.last_name ORDER BY count(*) DESC LIMIT 1 
 SELECT DISTINCT semesters.semester_name FROM addresses JOIN courses ON addresses.address_id = courses.course_id JOIN departments ON courses.department_id = departments.department_id JOIN degree_programs ON courses.degree_program_id = degree_programs.degree_program_id JOIN sections ON courses.course_id = sections.course_id JOIN semesters ON courses.course_id = sections.course_id JOIN student_enrolment ON student_enrolment.student_id = sections.student_id JOIN student_enrolment_courses ON student_enrolment.student_course_id = student_enrolment_courses.student_course_id JOIN transcripts ON student_enrolment_courses.transcript_id = transcripts.transcript_id WHERE transcripts.transcript_date = "null" 
 SELECT DISTINCT semester_name FROM semesters EXCEPT SELECT DISTINCT semester_name FROM student_enrolment_courses 
 SELECT Courses.course_name FROM Addresses JOIN Courses ON Addresses.address_id = Courses.course_id JOIN Student_Enrolment ON Courses.course_id = Student_Enrolment.course_id JOIN Student_Enrolment_Courses ON Student_Enrolment.course_id = Student_Enrolment_Courses.course_id JOIN Transcripts ON Student_Enrolment_Courses.student_course_id = Transcripts.student_course_id JOIN Transcript_Contents ON Student_Enrolment_Courses.student_course_id = Transcript_Contents.student_course_id WHERE Transcripts.transcript_contents = 1 
 SELECT Courses.course_name FROM Addresses JOIN Courses ON Addresses.address_id = Courses.course_id JOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id JOIN Transcripts ON Student_Enrolment_Courses.student_course_id = Transcripts.student_course_id WHERE Transcripts.transcript_details = "Yes" 
 SELECT Courses.course_name FROM Addresses JOIN Courses ON Addresses.address_id = Courses.course_id JOIN Student_Enrolment ON Student_Enrolment.student_id = Courses.student_id JOIN Student_Enrolment_Courses ON Student_Enrolment.student_id = Student_Enrolment_Courses.student_id GROUP BY Courses.course_name ORDER BY count(*) DESC LIMIT 1 
 SELECT Courses.course_name FROM Addresses JOIN Courses ON Addresses.address_id = Courses.course_id JOIN Student_Enrolment ON Student_Enrolment.student_id = Courses.student_id JOIN Student_Enrolment_Courses ON Student_Enrolment.student_id = Student_Enrolment_Courses.student_id GROUP BY Courses.course_name ORDER BY count(*) DESC LIMIT 1 
 SELECT students.last_name FROM addresses JOIN courses ON courses.course_id = sections.course_id JOIN semesters ON semesters.semester_id = sections.section_id JOIN students ON students.student_id = student_enrolment.student_id WHERE addresses.state_province_county = "North Carolina" EXCEPT SELECT students.last_name FROM students JOIN student_enrolment ON students.student_id = student_enrolment.student_id JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_program_id 
 SELECT students.last_name FROM addresses JOIN courses ON addresses.address_id = courses.address_id JOIN departments ON courses.department_id = departments.department_id JOIN degree_programs ON courses.degree_program_id = degree_programs.degree_program_id JOIN sections ON courses.course_id = sections.course_id JOIN semesters ON courses.semester_id = semesters.semester_id JOIN students ON students.student_id = student_enrolment.student_id WHERE addresses.state_province_county = "North Carolina" EXCEPT SELECT students.last_name FROM students JOIN student_enrolment ON students.student_id = student_enrolment.student_id JOIN student_enrolment_courses ON student_enrolment.student_course_id = student_enrolment_courses.student_course_id JOIN transcripts ON student_enrolment_courses.transcript_id = transcripts.transcript_id WHERE transcripts.transcript_date >= semester.semester_id   AND transcripts.transcript_date <= semester.semester_id   AND courses.department_name = "North Carolina" 
 SELECT transcript_date,        student_enrolment_course_id FROM student_enrolment_courses JOIN transcripts ON student_enrolment_course_id = student_enrolment_courses.student_course_id GROUP BY student_enrolment_course_id HAVING count(*) >= 2 
 SELECT TRANSCRIPTS.transcript_date,       TRANSCRIPTS.transcript_id FROM TRANSCRIPTS JOIN TRANSCRIPT_COMMENTS ON TRANSCRIPTS.transcript_id = TRANSCRIPT_COMMENTS.transcript_id JOIN COURSES ON TRANSCRIPTS.course_id = COURSES.course_id GROUP BY TRANSCRIPTS.transcript_id HAVING count(*) >= 2 
 SELECT Addresses.line_2 FROM Addresses JOIN Courses ON Addresses.address_id = Courses.course_id JOIN Departments ON Courses.department_id = Departments.department_id JOIN Sections ON Courses.course_id = Sections.course_id JOIN Semesters ON Courses.semester_id = Semesters.semester_id JOIN Students ON Courses.course_id = Students.student_id JOIN Student_Enrolment_Courses ON Students.student_id = Student_Enrolment_Courses.student_id JOIN Student_Enrolment ON Student_Enrolment.student_id = Student_Enrolment_Courses.student_id JOIN Transcripts ON Student_Enrolment.student_id = Student_Enrolment_Courses.student_id JOIN Transcript_Contents ON Student_Enrolment.student_id = Student_Enrolment_Courses.student_id WHERE Courses.course_name = "Timmothy Ward"   AND Addresses.first_name = "Timmothy"   AND Addresses.last_name = "Ward"; 
 SELECT Students.cell_mobile_number FROM Addresses JOIN Courses ON Addresses.address_id = Courses.course_id JOIN Departments ON Courses.department_id = Departments.department_id JOIN Sections ON Courses.course_id = Sections.course_id JOIN Semesters ON Courses.semester_id = Semesters.semester_id JOIN Students ON Students.student_id = Sections.student_id WHERE Students.first_name = "Timmothy"   AND Students.last_name = "Ward" 
 SELECT students.first_name,        students.middle_name,        students.last_name FROM addresses JOIN courses ON courses.course_id = student_enrolment_courses.course_id JOIN student_enrolment ON student_enrolment.student_id = student_enrolment_courses.student_id WHERE student_enrolment.semester_id = 1 ORDER BY student_enrolment.student_id LIMIT 1 
 SELECT students.first_name,        students.middle_name,        students.last_name FROM addresses JOIN courses ON courses.course_id = student_enrolment_courses.course_id JOIN student_enrolment ON student_enrolment.student_id = student_enrolment_courses.student_id WHERE student_enrolment.semester_id = 1 ORDER BY student_enrolment.student_id LIMIT 1 
 SELECT students.first_name,        students.middle_name,        students.last_name FROM addresses JOIN courses ON courses.course_id = courses.course_id JOIN departments ON courses.department_id = courses.department_id JOIN degree_programs ON courses.degree_program_id = degree_programs.degree_program_id JOIN sections ON courses.course_id = sections.course_id JOIN semesters ON courses.semester_id = semesters.semester_id JOIN students ON students.student_id = student_enrolment.student_id JOIN student_enrolment_courses ON student_enrolment.student_id = student_enrolment_courses.student_id JOIN transcripts ON student_enrolment_courses.student_course_id = transcripts.student_course_id JOIN transcript_contents ON transcripts.transcript_id = transcript_contents.transcript_id WHERE transcript_contents.transcript_date =     (SELECT min(transcript_date)      FROM transcripts      WHERE course_id IN          (SELECT course_id           FROM courses           WHERE department_name = "School of Education")        ) 
 SELECT students.first_name,        students.middle_name,        students.last_name FROM addresses JOIN courses ON courses.course_id = courses.course_id JOIN departments ON courses.department_id = courses.department_id JOIN degree_programs ON courses.degree_program_id = courses.degree_program_id JOIN sections ON courses.course_id = courses.course_id JOIN semesters ON courses.semester_id = courses.semester_id JOIN students ON students.student_id = student_enrolment.student_id WHERE courses.course_name = "School Graduate" ORDER BY courses.semester_id LIMIT 1 
 SELECT students.first_name FROM addresses JOIN courses ON addresses.address_id = courses.course_id JOIN student_enrolment ON student_enrolment.student_id = courses.student_id JOIN student_enrolment_courses ON student_enrolment.student_id = student_enrolment_courses.student_id JOIN transcripts ON student_enrolment_courses.course_id = transcripts.course_id JOIN transcript_contents ON student_enrolment_courses.course_id = transcripts.course_id WHERE addresses.city!= student_enrolment.current_address.city 
 SELECT students.first_name FROM addresses JOIN courses ON addresses.address_id = courses.address_id JOIN departments ON courses.department_id = departments.department_id JOIN degree_programs ON courses.degree_program_id = degree_programs.degree_program_id JOIN sections ON courses.course_id = sections.course_id JOIN semesters ON courses.semester_id = semesters.semester_id JOIN students ON students.student_id = student_enrolment.student_enrolment_id WHERE addresses.city!= students.current_address_id 
 SELECT Addresses.address_id,        Addresses.line_1,        Addresses.line_2,        Addresses.line_3,        Addresses.city,        Addresses.zip_postcode,        Addresses.state_province_county,        Addresses.country FROM Addresses JOIN Courses ON Addresses.address_id = Courses.address_id JOIN Departments ON Courses.department_id = Departments.department_id JOIN Degree_Programs ON Courses.degree_program_id = Degree_Programs.degree_program_id JOIN Sections ON Courses.course_id = Sections.course_id JOIN Semesters ON Courses.semester_id = Semesters.semester_id JOIN Students ON Students.student_id = Courses.student_id JOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id JOIN Transcripts ON Student_Enrolment_Courses.student_course_id = Transcripts.student_course_id JOIN Transcript_Contents ON Student_Enrolment_Courses.student_course_id = Transcript_Contents.student_course_id GROUP BY Addresses.address_id ORDER BY count(*) DESC LIMIT 1; 
 SELECT Addresses.address_id,        Addresses.line_1,        Addresses.line_2 FROM Addresses JOIN Courses ON Addresses.course_id = Courses.course_id JOIN Departments ON Courses.department_id = Departments.department_id JOIN Sections ON Courses.course_id = Sections.course_id JOIN Semesters ON Courses.semester_id = Semesters.semester_id JOIN Students ON Students.student_id = Courses.student_id JOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id JOIN Transcripts ON Student_Enrolment_Courses.student_course_id = Transcripts.student_course_id JOIN Transcript_Contents ON Student_Enrolment_Courses.student_course_id = Transcript_Contents.student_course_id GROUP BY Addresses.address_id ORDER BY count(*) DESC LIMIT 1 
 SELECT avg(transcript_date) FROM TRANSCRIPTS JOIN TRANSCRIPT_CONTENTS ON TRANSCRIPTS.transcript_id = TRANSCRIPT_CONTENTS.transcript_id JOIN STUDENT_ENROLMENT_CROSS REFERENCES ON STUDENT_ENROLMENT.COURSE_ID = TRANSCRIPT_CONTENTS.COURSE_ID JOIN DEGREE_PROGRAMS.COURSE_ID = TRANSCRIPT_CONTENTS.COURSE_ID WHERE DEGREE_PROGRAMS.department_name = "Computer Science" GROUP BY TRANSCRIPTS.transcript_date ORDER BY TRANSCRIPTS.transcript_date DESC; 
 SELECT avg(Transcripts.transcript_date) FROM Addresses JOIN Courses ON Addresses.address_id = Courses.course_id JOIN Departments ON Courses.department_id = Departments.department_id JOIN Sections ON Courses.course_id = Sections.course_id JOIN Semesters ON Courses.semester_id = Semesters.semester_id JOIN Students ON Students.student_id = Courses.student_id JOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id JOIN Transcripts ON Student_Enrolment_Courses.student_course_id = Transcripts.student_course_id JOIN Transcript_Contents ON Student_Enrolment_Courses.student_course_id = Transcripts.student_course_id 
 SELECT TRANSCRIPTS.transcript_date,        TRANSCRIPTS.other_details FROM Addresses JOIN Courses ON Addresses.address_id = Courses.course_id JOIN DEPARTMENTS ON Courses.department_id = DEPARTMENTS.department_id JOIN STUDENT_ENROLMENT ON STUDENT_ENROLMENT.student_id = Courses.student_id JOIN STUDENT_ENROLMENT_CROSS REFERENCES ON STUDENT_ENROLMENT.student_course_id = STUDENT_ENROLMENT_CROSS REFERENCES.student_course_id JOIN TRANSCRIPTS ON STUDENT_ENROLMENT.student_course_id = TRANSCRIPTS.student_course_id JOIN TRANSCRIPT_CONTENTS ON TRANSCRIPTS.transcript_id = TRANSCRIPT_CONTENTS.transcript_id WHERE TRANSCRIPT_CONTENTS.other_details = "First" 
 SELECT min(Transcripts.transcript_date),        Courses.course_description FROM Addresses JOIN Courses ON Addresses.address_id = Courses.course_id JOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id JOIN Transcripts ON Student_Enrolment_Courses.student_course_id = Transcripts.student_course_id WHERE Transcripts.transcript_date =     (SELECT min(Transcripts.transcript_date)      FROM Transcripts      JOIN Student_Enrolment_Courses ON Transcripts.student_course_id = Student_Enrolment_Courses.student_course_id      WHERE Courses.course_description = "Course Name") 
 SELECT count(*) FROM Transcripts JOIN Transcript_Contents ON Transcripts.transcript_id = Transcript_Contents.transcript_id JOIN Student_Enrolment_Courses ON Student_Enrolment_Courses.student_course_id = Transcript_Contents.student_course_id WHERE Student_Enrolment_Courses.student_id = 1 
 SELECT count(*) FROM TRANSCRIPTS JOIN TRANSCRIPT_CONTENTS ON TRANSCRIPTS.transcript_id = TRANSCRIPT_CONTENTS.transcript_id JOIN STUDENT_ENROLMENT_CROSSINGS ON TRANSCRIPT_CONTENTS.student_course_id = STUDENT_ENROLMENT_CROSSINGS.student_course_id JOIN COURSES ON COURSES.course_id = STUDENT_ENROLMENT_CROSSINGS.course_id WHERE COURSES.department_name = "Computer Science" 
 SELECT transcript_date FROM Transcripts WHERE transcript_id =     (SELECT transcript_id      FROM Student_Enrolment_Courses      WHERE course_id = 1      ORDER BY transcript_date DESC      LIMIT 1) 
 SELECT transcript_date FROM Transcripts WHERE transcript_id =     (SELECT transcript_id      FROM Student_Enrolment_Courses      WHERE course_id = 1      ORDER BY transcript_date DESC      LIMIT 1) 
 SELECT count(*),        Courses.course_id FROM Addresses JOIN Courses ON Addresses.address_id = Courses.course_id JOIN Student_Enrolment ON Courses.course_id = Student_Enrolment.course_id JOIN Student_Enrolment_Courses ON Student_Enrolment.course_id = Student_Enrolment_Courses.course_id JOIN Transcripts ON Student_Enrolment_Courses.transcript_id = Transcripts.transcript_id GROUP BY Courses.course_id ORDER BY count(*) DESC LIMIT 10 
 SELECT max(course_id),        courses.course_name FROM addresses JOIN courses ON courses.course_id = courses.course_id JOIN departments ON courses.department_id = courses.department_id JOIN degree_programs ON courses.degree_program_id = degree_programs.degree_program_id JOIN sections ON courses.course_id = sections.course_id JOIN semesters ON courses.course_id = sections.course_id JOIN students ON courses.course_id = students.student_enrolment_id JOIN student_enrolment_courses ON students.student_id = student_enrolment_courses.student_id JOIN transcript_contents ON student_enrolment_courses.course_id = transcript_contents.course_id WHERE transcript_contents.transcript_date =     (SELECT max(transcript_date)      FROM transcripts      WHERE course_id IN          (SELECT course_id           FROM courses           WHERE course_name = "Course Name")        GROUP BY course_id        ORDER BY count(*) DESC        LIMIT 1) 
 SELECT transcript_date FROM transcripts JOIN student_enrolment_courses ON transcripts.transcript_id = student_enrolment_courses.transcript_id JOIN student_enrolment ON student_enrolment.student_id = student_enrolment_courses.student_id WHERE student_enrolment.student_id IN     (SELECT student_id      FROM student_enrolment      GROUP BY student_id      ORDER BY count(*) ASC      LIMIT 1) 
 SELECT transcript_date,        transcript_contents.student_course_id FROM transcripts JOIN transcript_contents ON transcripts.transcript_id = transcript_contents.transcript_id GROUP BY transcript_contents.student_course_id ORDER BY count(*) ASC LIMIT 1 
 SELECT DISTINCT semesters.semester_name FROM addresses JOIN courses ON addresses.address_id = courses.course_id JOIN departments ON courses.department_id = departments.department_id JOIN degree_programs ON courses.degree_program_id = degree_programs.degree_program_id JOIN sections ON courses.course_id = sections.course_id JOIN semesters ON courses.course_id = sections.course_id JOIN students ON students.student_id = student_enrolment.student_id JOIN student_enrolment_courses ON student_enrolment.student_id = student_enrolment_courses.student_id JOIN transcripts ON student_enrolment_courses.student_course_id = transcripts.student_course_id JOIN transcript_contents ON transcripts.transcript_id = transcript_contents.transcript_id WHERE students.first_name = "Master"   AND students.last_name = "Student"   AND courses.course_name = "Bachelor"   AND courses.course_name = "Master"; 
 SELECT semesters.semester_id FROM addresses JOIN courses ON addresses.address_id = courses.address_id JOIN departments ON courses.department_id = departments.department_id JOIN degree_programs ON courses.degree_program_id = degree_programs.degree_program_id JOIN sections ON courses.course_id = sections.course_id JOIN semesters ON courses.course_id = semesters.course_id JOIN students ON students.student_id = semesters.student_id JOIN student_enrolment_courses ON student_enrolment_courses.student_course_id = courses.course_id JOIN transcripts ON student_enrolment_courses.transcript_id = transcripts.transcript_id WHERE courses.course_name = "Masters" INTERSECT   SELECT semesters.semester_id   FROM addresses JOIN courses ON addresses.address_id = courses.address_id JOIN departments ON courses.department_id = departments.department_id JOIN degree_programs ON courses.degree_program_id = degree_programs.degree_program_id JOIN sections ON courses.course_id = sections.course_id JOIN semesters ON courses.course_id = semesters.course_id JOIN students ON students.student_id = semesters.student_id JOIN student_enrolment_courses ON student_enrolment_courses.student_course_id = courses.course_id JOIN transcripts ON student_en
 SELECT count(DISTINCT Addresses.address_id) FROM Addresses JOIN Student_Enrolment ON Addresses.address_id = Student_Enrolment.current_address_id JOIN Student_Enrolment_Courses ON Student_Enrolment.student_course_id = Student_Enrolment_Courses.student_course_id JOIN Transcripts ON Student_Enrolment_Courses.student_course_id = Transcripts.student_course_id GROUP BY Addresses.address_id 
 SELECT DISTINCT Addresses.address_id FROM Addresses JOIN Student_Enrolment_Courses ON Addresses.address_id = Student_Enrolment_Courses.student_course_id JOIN Student_Enrolment ON Student_Enrolment.student_course_id = Student_Enrolment_Courses.student_course_id JOIN Transcripts ON Student_Enrolment.student_course_id = Student_Enrolment_Courses.student_course_id JOIN Transcript_Contents ON Student_Enrolment.student_course_id = Student_Enrolment_Courses.student_course_id WHERE Addresses.city = "City"   AND Addresses.state_province_county = "State"   AND Addresses.country = "Country" 
 SELECT Addresses.line_1,        Addresses.city,        Addresses.zip_postcode,        Addresses.state_province_county,        Addresses.country,        Students.first_name,        Students.last_name FROM Addresses JOIN Courses ON Addresses.address_id = Courses.address_id JOIN Departments ON Courses.department_id = Departments.department_id JOIN Degree_Programs ON Courses.degree_program_id = Degree_Programs.degree_program_id JOIN Sections ON Courses.course_id = Sections.course_id JOIN Semesters ON Courses.semester_id = Semesters.semester_id JOIN Students ON Courses.course_id = Students.student_enrolment_id JOIN Student_Enrolment_Courses ON Students.student_id = Student_Enrolment_Courses.student_enrolment_id JOIN Transcripts ON Student_Enrolment_Courses.student_course_id = Transcripts.student_course_id JOIN Transcript_Contents ON Student_Enrolment_Courses.student_course_id = Transcript_Contents.student_course_id ORDER BY Transcript_Contents.other_details 
 SELECT Addresses.other_address_details FROM Addresses JOIN Courses ON Addresses.address_id = Courses.course_id JOIN Departments ON Courses.department_id = Departments.department_id JOIN Sections ON Courses.course_id = Sections.course_id JOIN Semesters ON Courses.semester_id = Semesters.semester_id JOIN Students ON Courses.course_id = Students.student_id JOIN Student_Enrolment_Courses ON Students.student_id = Student_Enrolment_Courses.student_id JOIN Student_Enrolment ON Student_Enrolment.student_id = Student_Enrolment_Courses.student_id JOIN Transcripts ON Student_Enrolment.student_id = Student_Enrolment_Courses.student_id JOIN Transcript_Contents ON Student_Enrolment.student_id = Student_Enrolment_Courses.student_id ORDER BY Addresses.other_address_details 
 SELECT Sections.section_name FROM Addresses JOIN Courses ON Addresses.address_id = Courses.course_id JOIN Departments ON Courses.department_id = Departments.department_id JOIN Sections ON Courses.course_id = Sections.course_id WHERE Courses.course_name = "h"; 
 SELECT Courses.course_description FROM Addresses JOIN Courses ON Addresses.address_id = Courses.course_id JOIN Sections ON Courses.course_id = Sections.course_id WHERE Sections.section_name = "h" 
 SELECT students.first_name FROM addresses JOIN courses ON addresses.address_id = courses.address_id JOIN departments ON courses.department_id = departments.department_id JOIN degree_programs ON courses.degree_program_id = degree_programs.degree_program_id JOIN sections ON courses.course_id = sections.course_id JOIN semesters ON courses.semester_id = semesters.semester_id JOIN students ON students.student_id = student_enrolment.student_id WHERE departments.country = "Haiti"   OR students.cell_mobile_number = "09700166582" 
 SELECT DISTINCT students.first_name FROM addresses JOIN courses ON addresses.address_id = courses.address_id JOIN departments ON courses.department_id = departments.department_id JOIN sections ON courses.course_id = sections.course_id JOIN semesters ON courses.semester_id = semesters.semester_id JOIN students ON students.student_id = student_enrolment.student_id WHERE addresses.city = "Haiti"   OR students.cell_mobile_number = "09700166582" 
 SELECT Cartoon.Title FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel JOIN Cartoon ON TV_Channel.id = Cartoon.id ORDER BY Cartoon.Title 
 SELECT Cartoon.Title FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel JOIN Cartoon ON TV_Channel.id = Cartoon.id ORDER BY Cartoon.Title 
 SELECT Cartoon.Title FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel JOIN Cartoon ON TV_Channel.id = Cartoon.id WHERE Cartoon Directed_by = "Ben Jones" 
 SELECT Cartoon.Title FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel JOIN Cartoon ON Cartoon.id = TV_Channel.id WHERE TV_Channel.Directed_by = "Ben Jones" 
 SELECT COUNT (DISTINCT CARTOON.Title) FROM TV_CHANNEL JOIN TV_series ON TV_CHANNEL.id = TV_series.channel JOIN CARTOON ON TV_CHANNEL.id = CARTOON.id WHERE CARTOON.WRITTEN_BY = "Joseph Kuhr" 
 SELECT COUNT (DISTINCT TV_channel.title) FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN CARTOON ON TV_channel.id = CARTOON.id WHERE CARTOON.WRITTEN_BY = "Joseph Kuhr" 
 SELECT Cartoon.Title,        Cartoon.Directed_by FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel ORDER BY TV_series.Air_Date 
 SELECT Cartoon.Title,        Cartoon.Directed_by FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel ORDER BY TV_series.Original_air_date 
 SELECT Cartoon.Title FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel JOIN Cartoon ON Cartoon.id = TV_Channel.id WHERE Cartoon Directed_by = "Ben Jones"   OR Cartoon.Directed_by = "Brandon Vietti" 
 SELECT Cartoon.Title FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel JOIN Cartoon ON Cartoon.id = TV_Channel.id WHERE Cartoon.Directed_by = "Ben Jones"   OR Cartoon.Directed_by = "Brandon Vietti" 
 SELECT TV_Channel.Country,        COUNT(*) FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel JOIN Cartoon ON Cartoon.id = TV_Channel.id GROUP BY TV_Channel.Country ORDER BY COUNT(*) DESC LIMIT 1; 
 SELECT TV_Channel.Country,        count(*) FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel JOIN Cartoon ON Cartoon.id = TV_series.id GROUP BY TV_Channel.Country ORDER BY count(*) DESC LIMIT 1 
 SELECT count(DISTINCT TV_channel.content),        TV_channel.series_name FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN cartoon ON TV_channel.id = cartoon.channel GROUP BY TV_channel.id 
 SELECT count(DISTINCT TV_channel.content) FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN CARTOON ON TV_channel.id = CARTOON.channel 
 SELECT TV_channel.content FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN CARTOON ON TV_channel.id = CARTOON.channel WHERE TV_series.series_name = "Sky Radio" 
 SELECT TV_channel.content FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN CARTOON ON TV_channel.id = CARTOON.channel WHERE CARTOON.title = "Sky Radio"; 
 SELECT TV_channel.package_option FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN CARTOON ON TV_channel.id = CARTOON.channel WHERE TV_series.series_name = "Sky Radio" 
 SELECT TV_channel.package_option FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN CARTOON ON TV_channel.id = CARTOON.channel WHERE TV_series.series_name = "Sky Radio" 
 SELECT count(*) FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN CARTOON ON CARTON.id = TV_series.id WHERE CARTOON.language = "English" 
 SELECT count(*) FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN CARTOON ON CARTON.id = TV_series.id WHERE CARTOON.language = "English" 
 SELECT TV_channel.language,        count(*) FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN CARTOON ON TV_channel.id = CARTOON.channel GROUP BY TV_channel.language ORDER BY count(*) ASC LIMIT 1; 
 SELECT TV_channel.language,        count(*) FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN CARTOON ON TV_channel.id = CARTOON.channel GROUP BY CARTOON.channel ORDER BY count(*) ASC LIMIT 1 
 SELECT TV_channel.language,        count(*) FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN CARTOON ON TV_channel.id = CARTOON.channel GROUP BY TV_channel.language 
 SELECT TV_Channel.Language,        COUNT(*) FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel JOIN Cartoon ON Cartoon.id = TV_Channel.id GROUP BY TV_Channel.Language 
 SELECT TV_channel.series_name FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN CARTOON ON TV_channel.id = CARTOON.channel WHERE CARTOON.title = "The Rise of the Blue Beetle!" 
 SELECT TV_channel.series_name FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN CARTOON ON TV_channel.id = CARTOON.channel WHERE CARTOON.title = "The Rise of the Blue Beetle" 
 SELECT CARTOON.Title FROM TV_CHANNEL JOIN TV_series ON TV_CHANNEL.id = TV_series.Channel JOIN CARTOON ON TV_CHANNEL.id = CARTOON.Channel WHERE TV_series.series_name = "Sky Radio" 
 SELECT CARTOON.Title FROM TV_CHANNEL JOIN TV_series ON TV_CHANNEL.id = TV_series.Channel JOIN CARTOON ON TV_CHANNEL.id = CARTOON.Channel WHERE TV_series.Series_name = "Sky Radio" 
 SELECT TV_series.EPISODE FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN CARTOON ON TV_channel.id = CARTOON.channel ORDER BY CARTOON.RATING DESC 
 SELECT TV_series.EPISODE FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN CARTOON ON TV_channel.id = CARTOON.channel ORDER BY CARTOON.Rating 
 SELECT TV_series.EPISODE,        TV_series.RATING FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN CARTOON ON TV_channel.id = CARTOON.channel ORDER BY CARTOON.RATING DESC LIMIT 3; 
 SELECT TV_series.episode,        TV_series.rating FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN CARTOON ON TV_channel.id = CARTOON.channel ORDER BY CARTOON.18_49_Rating_Share DESC LIMIT 3; 
 SELECT min(TV_series.Share),        max(TV_series.Share) FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN CARTOON ON TV_channel.id = CARTOON.channel 
 SELECT max(TV_series.Share),        min(TV_series.Share) FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN CARTOON ON TV_channel.id = CARTOON.channel 
 SELECT TV_series.Air_Date FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN CARTOON ON TV_channel.id = CARTOON.channel WHERE CARTOON.Title = "A Love of a Lifetime" 
 SELECT TV_series.Air_Date FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN CARTOON ON TV_channel.id = CARTOON.channel WHERE CARTOON.Title = "A Love of a Lifetime"; 
 SELECT TV_series.Weekly_Rank FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN CARTOON ON TV_channel.id = CARTOON.channel WHERE CARTOON.Title = "A Love of a Lifetime" 
 SELECT TV_series.Weekly_Rank FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN CARTOON ON TV_channel.id = CARTOON.channel WHERE CARTOON.Title = "A Love of a Lifetime" 
 SELECT TV_channel.series_name FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN CARTOON ON TV_channel.id = CARTOON.channel WHERE TV_series.episode = "A Love of a Lifetime" 
 SELECT TV_series.series_name FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN CARTOON ON TV_channel.id = CARTOON.channel WHERE CARTOON.episode = "A Love of a Lifetime" 
 SELECT TV_series.EPISODE FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN CARTOON ON TV_channel.id = CARTOON.channel WHERE TV_channel.name = "Sky Radio" 
 SELECT TV_series.EPISODE FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN CARTOON ON TV_channel.id = CARTOON.channel WHERE CARTOON.title = "Sky Radio"; 
 SELECT TV_channel.director,        count(*) FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN CARTOON ON TV_channel.id = CARTOON.channel GROUP BY TV_channel.director 
 SELECT TV_channel.director,        count(*) FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN cartoon ON TV_channel.id = cartoon.channel GROUP BY TV_channel.director 
 SELECT TV_channel.production_code,        TV_channel.channel FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN cartoon ON TV_channel.id = cartoon.channel ORDER BY TV_series.air_date DESC LIMIT 1 
 SELECT TV_channel.production_code,        TV_channel.channel FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN CARTOON ON TV_channel.id = CARTOON.id ORDER BY CARTOON.Original_air_date DESC LIMIT 1 
 SELECT TV_channel.package_option,        TV_series.series_name FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN CARTOON ON TV_channel.id = CARTOON.channel WHERE TV_series.hight_definition_TV = 1 
 SELECT TV_channel.package_option,        TV_series.channel FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN cartoon ON TV_channel.id = cartoon.channel WHERE TV_channel.hight_definition_tv = 1 
 SELECT TV_channel.country FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN cartoon ON TV_series.channel = cartoon.channel WHERE cartoon.written_by = "Todd Casey" 
 SELECT TV_channel.country FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN cartoon ON TV_channel.id = cartoon.channel WHERE cartoon.written_by = "Todd Casey" 
 SELECT TV_channel.country FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN cartoon ON TV_series.channel = cartoon.channel WHERE cartoon.written_by = "Todd Casey" EXCEPT SELECT TV_channel.country FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN cartoon ON TV_series.channel = cartoon.channel 
 SELECT TV_channel.country FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN cartoon ON TV_series.channel = cartoon.channel WHERE cartoon.written_by!= "Todd Casey" 
 SELECT TV_channel.series_name,        TV_channel.country FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN cartoon ON TV_channel.id = cartoon.channel WHERE cartoon.directed_by = "Ben Jones" INTERSECT   SELECT TV_channel.series_name,          TV_channel.country   FROM TV_channel   JOIN TV_series ON TV_channel.id = TV_series.channel   JOIN cartoon ON TV_channel.id = cartoon.channel WHERE cartoon.directed_by = "Michael Chang" 
 SELECT TV_channel.series_name,        TV_channel.country FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN cartoon ON TV_channel.id = cartoon.channel WHERE cartoon.directed_by = "Ben Jones"   AND cartoon.directed_by = "Michael Chang" 
 SELECT TV_channel.name,        TV_channel.pixel_aspect_ratio_par FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN CARTOON ON TV_channel.id = CARTOON.channel WHERE CARTOON.language!= "English" 
 SELECT TV_channel.content,        TV_channel.country FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN CARTOON ON TV_channel.id = CARTOON.channel WHERE CARTOON.english = 'No' 
 SELECT TV_channel.id FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN TV_channel ON TV_channel.id = TV_series.channel JOIN CARTOON ON TV_channel.id = CARTOON.channel GROUP BY TV_channel.id HAVING COUNT(*) > 2 
 SELECT TV_channel.id FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN CARTOON ON TV_channel.id = CARTOON.channel GROUP BY TV_channel.id HAVING count(*) > 2 
 SELECT id FROM TV_channel EXCEPT SELECT TV_channel.id FROM TV_series JOIN TV_channel ON TV_series.channel = TV_channel.id JOIN cartoon ON TV_series.channel = cartoon.channel WHERE cartoon.directed_by = "Ben Jones" 
 SELECT id FROM TV_channel EXCEPT SELECT TV_channel.id FROM TV_series JOIN TV_channel ON TV_series.channel = TV_channel.id JOIN cartoon ON TV_series.channel = cartoon.channel WHERE cartoon.directed_by = "Ben Jones" 
 SELECT TV_channel.package_option FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN CARTOON ON TV_channel.id = CARTOON.channel WHERE CARTOON.directed_by = "Ben Jones" EXCEPT SELECT TV_channel.package_option FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN CARTOON ON TV_channel.id = CARTOON.channel WHERE CARTOON.directed_by = "Ben Jones" 
 SELECT TV_channel.package_option FROM TV_channel EXCEPT SELECT TV_channel.package_option FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN CARTOON ON TV_channel.id = CARTOON.channel WHERE CARTOON.directed_by = "Ben Jones" 
 SELECT count(*) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID 
 SELECT count(*) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID 
 SELECT earnings FROM poker_player ORDER BY earnings DESC 
 SELECT earnings FROM poker_player ORDER BY earnings DESC 
 SELECT poker_player.Final_Table_Made,        poker_player.Best_Finish FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID 
 SELECT poker_player.final_table_made,        poker_player.best_finish FROM poker_player JOIN people ON poker_player.people_id = people.people_id 
 SELECT avg(poker_player.Earnings) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID 
 SELECT avg(poker_player.Earnings) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID 
 SELECT money_rank FROM poker_player ORDER BY earnings DESC LIMIT 1 
 SELECT money_rank FROM poker_player ORDER BY earnings DESC LIMIT 1 
 SELECT max(poker_player.final_table_made) FROM poker_player JOIN people ON poker_player.people_id = people.people_id WHERE poker_player.earnings < 200000 
 SELECT max(poker_player.final_table_made) FROM poker_player JOIN people ON poker_player.people_id = people.people_id WHERE poker_player.earnings < 200000 
 SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID 
 SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID 
 SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE poker_player.Earnings > 300000 
 SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE poker_player.Earnings > 300000 
 SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY poker_player.Final_Table_Made 
 SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY poker_player.Final_Table_Made 
 SELECT people.Birth_Date FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY poker_player.Earnings LIMIT 1 
 SELECT people.Birth_Date FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY poker_player.Earnings LIMIT 1 
 SELECT money_rank FROM poker_player WHERE height =     (SELECT MAX (height)      FROM people) 
 SELECT poker_player.Money_Rank FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY people.Height DESC LIMIT 1 
 SELECT avg(poker_player.Earnings) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height > 200 
 SELECT avg(poker_player.Earnings) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height > 200 
 SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY poker_player.Earnings DESC 
 SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY poker_player.Earnings DESC 
 SELECT people.Nationality,        count(*) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID GROUP BY people.Nationality 
 SELECT people.Nationality,        count(*) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID GROUP BY people.Nationality 
 SELECT people.Nationality FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID GROUP BY people.Nationality ORDER BY COUNT(*) DESC LIMIT 1 
 SELECT people.Nationality FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID GROUP BY poker_player.People_ID ORDER BY COUNT(*) DESC LIMIT 1 
 SELECT people.Nationality FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID GROUP BY poker_player.People_ID HAVING COUNT(*) >= 2 
 SELECT people.Nationality FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID GROUP BY people.Nationality HAVING COUNT(*) >= 2 
 SELECT people.Name,        people.Birth_Date FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY people.Name ASC 
 SELECT people.Name,        people.Birth_Date FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY people.Name 
 SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Nationality!= "Russia" 
 SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Nationality!= "Russia" 
 SELECT Name FROM people WHERE People_ID NOT IN     (SELECT People_ID      FROM poker_player) 
 SELECT Name FROM people EXCEPT SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID 
 SELECT count(DISTINCT people.Nationality) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID 
 SELECT count(DISTINCT people.Nationality) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID 
 SELECT count(DISTINCT area_code_state.state) FROM area_code_state JOIN contestants ON area_code_state.state = contestants.state JOIN votes ON contestants.contestant_number = votes.contestant_number 
 SELECT CONTESTANTS.contestant_number,        CONTESTANTS.contestant_name FROM AREA_CODE_STATE JOIN CONTESTANTS ON AREA_CODE_STATE.state = CONTESTANTS.state JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number ORDER BY CONTESTANTS.contestant_name DESC 
 SELECT votes.vote_id,        votes.phone_number,        area_code_state.state FROM area_code_state_state JOIN contestants ON area_code_state_state.state = contestants.state JOIN votes ON area_code_state_state.state = votes.state AND contestants.contestant_number = votes.contestant_number 
 SELECT max(area_code),        min(area_code) FROM AREA_CODE_STATE 
 SELECT votes.created FROM area_code_state JOIN contestants ON area_code_state.state = contestants.state JOIN votes ON area_code_state.state = contestants.state WHERE contestants.state = "CA" ORDER BY votes.created DESC LIMIT 1 
 SELECT contestant_name FROM contestants EXCEPT SELECT contestants.contestant_name FROM AREA_CODE_STATE JOIN CONTESTANTS ON AREA_CODE_STATE.state = CONTESTANTS.state JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number WHERE CONTESTANTS.contestant_name = "Jessie Alloway" 
 SELECT DISTINCT AREA_CODE_STATE.state,                 votes.created FROM AREA_CODE_STATE JOIN CONTESTANTS ON AREA_CODE_STATE.area_code = CONTESTANTS.area_code JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number 
 SELECT CONTESTANTS.contestant_number,        CONTESTANTS.contestant_name FROM AREA_CODE_STATE JOIN CONTESTANTS ON AREA_CODE_STATE.state = CONTESTANTS.state JOIN VOTES ON VOTES.contestant_number = CONTESTANTS.contestant_number GROUP BY CONTESTANTS.contestant_number HAVING COUNT(*) >= 2 
 SELECT CONTESTANTS.contestant_number,        CONTESTANTS.contestant_name FROM AREA_CODE_STATE JOIN CONTESTANTS ON AREA_CODE_STATE.state = CONTESTANTS.state JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number GROUP BY CONTESTANTS.contestant_number ORDER BY count(*) ASC LIMIT 1 
 SELECT COUNT(*) FROM AREA_CODE_STATE JOIN CONTESTANTS ON AREA_CODE_STATE.state = CONTESTANTS.state JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number WHERE CONTESTANTS.state = "NY"   OR CONTESTANTS.state = "CA" 
 SELECT COUNT(*) FROM AREA_CODE_STATE JOIN CONTESTANTS ON AREA_CODE_STATE.state = CONTESTANTS.state JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number WHERE CONTESTANTS.contestant_name = "null" 
 SELECT AREA_CODE_STATE.state,        COUNT(*) FROM AREA_CODE_STATE JOIN CONTESTANTS ON AREA_CODE_STATE.area_code = CONTESTANTS.area_code JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number GROUP BY AREA_CODE_STATE.state ORDER BY COUNT(*) DESC LIMIT 1 
 SELECT votes.created,        area_code_state.state,        votes.phone_number FROM area_code_state_state JOIN contestants ON area_code_state_state.contestant_number = contestants.contestant_number JOIN votes ON area_code_state_state.contestant_number = votes.contestant_number WHERE contestants.contestant_name = "Tabatha Gehling" 
 SELECT AREA_CODE_STATE.state FROM AREA_CODE_STATE JOIN CONTESTANTS ON AREA_CODE_STATE.area_code = CONTESTANTS.area_code JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number WHERE CONTESTANTS.contestant_name = "Tabatha Gehling"   AND CONTESTANTS.contestant_name = "Kelly Clauss" 
 SELECT CONTESTANTS.contestant_name FROM AREA_CODE_STATE JOIN CONTESTANTS ON AREA_CODE_STATE.state = CONTESTANTS.state JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number WHERE CONTESTANTS.contestant_name LIKE '%Al%' 
 SELECT country.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.IsOfficial = 'Yes'   AND countrylanguage.Percentage > 0   AND city.DependencyYear > 1950 
 SELECT country.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.IsOfficial = 'Yes'   AND city.Founded > 1950 
 SELECT COUNT(*) FROM country WHERE GovernmentForm = "Republic" 
 SELECT COUNT (DISTINCT country.Name) FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrygovernmentform = "Republic"; 
 SELECT sum(country.surfacearea) FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.region = "Caribbean" 
 SELECT country.surfacearea FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "Caribbean" GROUP BY city.id 
 SELECT country.continent FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE city.name = "Anguilla" 
 SELECT country.continent FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE city.name = "Anguilla" 
 SELECT country.region FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE city.name = "Kabul" 
 SELECT country.region FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE city.name = "Kabul" 
 SELECT countrylanguage.language FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.name = "Aruba" GROUP BY countrylanguage.language ORDER BY count(*) DESC LIMIT 1; 
 SELECT countrylanguage.language FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.name = "Aruba" GROUP BY city.name ORDER BY count(*) DESC LIMIT 1; 
 SELECT country.population,        country.lifeexpectancy FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.name = "Brazil" 
 SELECT country.Name,        countrylanguage.Language,        country.LifeExpectancy FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Name = "Brazil"; 
 SELECT country.region,        country.population FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.name = "Angola" 
 SELECT country.region,        city.population FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.name = "Angola" 
 SELECT avg(country.lifeexpectancy) FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.region = "Central Africa" 
 SELECT avg(countrylifeexpectancy) FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode JOIN country ON countrylanguage.countrycode = country.code WHERE country.region = "Central Africa"; 
 SELECT country.name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrycontinent = "Asia"   AND countrylanguage.percentage =     (SELECT min(percentage)      FROM countrylanguage      WHERE countrycontinent = "Asia") 
 SELECT country.name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrycontinent = "Asia"   AND countrylifeexpectancy =     (SELECT min(countrylifeexpectancy)      FROM countrylanguage      WHERE countrylanguage.isofficial = 'Yes') 
 SELECT country.population,        country.gnp FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countryregion = "Asia" GROUP BY country.population ORDER BY country.population DESC LIMIT 2; 
 SELECT countrylanguage.GNP,        country.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrycontinent = "Asia" ORDER BY countrylanguage.Percentage DESC LIMIT 1; 
 SELECT avg(countrylifeexpectancy) FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode JOIN country ON countrylanguage.countrycode = country.code WHERE country.region = "African"   AND country.language = "republic" 
 SELECT avg(countrylifeexpectancy) FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode JOIN country ON countrylanguage.countrycode = country.code WHERE countrycontinent = "Africa"   AND countrylanguage.isofficial = "Yes"   AND country.language = "English" 
 SELECT country.surfacearea FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrycontinent = "Asia" INTERSECT   SELECT country.surfacearea   FROM city   JOIN country ON city.countrycode = country.code   JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrycontinent = "Europe" 
 SELECT sum(country.surfacearea) FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrycontinent = "Asia"   OR countrycontinent = "Europe" 
 SELECT countrylanguage.Name FROM city JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode WHERE city.District = "Gelderland" 
 SELECT sum(city.population) FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE city.district = "Gelderland" 
 SELECT avg(country.gnp),        avg(country.population) FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.governmentform = "US" 
 SELECT avg(country.gnp),        sum(country.population) FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.name = "United States" 
 SELECT count(DISTINCT countrylanguage.language) FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode 
 SELECT count(DISTINCT countrylanguage.language) FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode 
 SELECT count(*) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrycontinent = "Africa" 
 SELECT count(DISTINCT countrygovernmentform) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrycontinent = "Africa" 
 SELECT count(*) FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode JOIN country ON country.code = countrylanguage.countrycode WHERE country.name = "Aruba"; 
 SELECT count(*) FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode WHERE country.name = "Aruba" 
 SELECT count(*) FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode JOIN country ON country.code = countrylanguage.countrycode WHERE country.name = "Afghanistan"   AND countrylanguage.isofficial = "yes"; 
 SELECT count(*) FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode JOIN country ON country.code = countrylanguage.countrycode WHERE country.name = "Afghanistan"   AND countrylanguage.isofficial = "yes"; 
 SELECT country.name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY city.name ORDER BY count(*) DESC LIMIT 1 
 SELECT country.name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY city.name ORDER BY count(*) DESC LIMIT 1 
 SELECT countrycontinent FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode GROUP BY countrycontinent ORDER BY count(*) DESC LIMIT 1; 
 SELECT countrycontinent FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode GROUP BY countrycontinent ORDER BY count(*) DESC LIMIT 1; 
 SELECT COUNT(*) FROM city JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode JOIN country ON countrylanguage.CountryCode = country.Code WHERE countrylanguage.Language = "Dutch"   AND countrylanguage.IsOfficial = "Yes"   AND country.Name = "English"; 
 SELECT count(*) FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode JOIN country ON countrylanguage.countrycode = country.code WHERE countrylanguage.language = 'English'   AND countrylanguage.language = 'Dutch' 
 SELECT country.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = "French"   AND countrylanguage.IsOfficial = "Yes"   AND countrylanguage.Percentage > 0; 
 SELECT country.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = "English" INTERSECT   SELECT country.Name   FROM city   JOIN country ON city.CountryCode = country.Code   JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = "French" 
 SELECT country.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = "English"   AND countrylanguage.Language = "French" 
 SELECT country.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = "English"   AND countrylanguage.Language = "French" 
 SELECT DISTINCT country.continent FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "Chinese" 
 SELECT countrycontinent FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "Chinese" GROUP BY countrycontinent 
 SELECT country.region FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English'   OR countrylanguage.language = 'Dutch' 
 SELECT country.region FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'Dutch'   OR countrylanguage.language = 'English' 
 SELECT country.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.IsOfficial = 'Yes'   OR countrylanguage.Language = 'Dutch' 
 SELECT country.name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English'   OR countrylanguage.language = 'Dutch' 
 SELECT countrylanguage.language FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.continent = "Asia" GROUP BY countrylanguage.language ORDER BY count(*) DESC LIMIT 1 
 SELECT countrylanguage.language FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.region = "Asia" GROUP BY city.name ORDER BY count(*) DESC LIMIT 1 
 SELECT countrylanguage.language FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.governmentform = "republic" GROUP BY city.name HAVING count(*) = 1 
 SELECT countrylanguage.language FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrygovernmentform = "Republic" GROUP BY city.name HAVING count(*) = 1 
 SELECT city.name FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode JOIN country ON countrylanguage.countrycode = country.code WHERE countrylanguage.language = 'English' ORDER BY city.population DESC LIMIT 1; 
 SELECT city.name FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode JOIN country ON countrylanguage.countrycode = country.code WHERE countrylanguage.language = 'English' ORDER BY city.population DESC LIMIT 1; 
 SELECT country.name,        country.population,        country.lifeexpectancy FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countryregion = "Asia" ORDER BY country.population DESC LIMIT 1; 
 SELECT country.name,        city.population,        country.lifeexpectancy FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrycontinent = "Asia" ORDER BY country.population DESC LIMIT 1; 
 SELECT avg(country.lifeexpectancy) FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language!= 'English' 
 SELECT avg(countrylifeexpectancy) FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode WHERE countrylanguage.language!= 'English' 
 SELECT sum(country.population) FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.isofficial = 'No' 
 SELECT count(*) FROM city WHERE countrycode NOT IN     (SELECT countrycode      FROM countrylanguage      WHERE language = "english") 
 SELECT countrylanguage.language FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE city.HeadOfState = "Beatrix" 
 SELECT countrylanguage.language FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE city.headofstate = "Beatrix" 
 SELECT count(DISTINCT countrylanguage.language) FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE city.founded < 1930 
 SELECT count(DISTINCT countrylanguage.language) FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE city.founded < 1930 
 SELECT country.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrycontinent = "Europe"   AND countrylanguage.IsOfficial = "Yes"   AND city.SurfaceArea >     (SELECT max(surfacearea)      FROM country      WHERE continent = "Europe") 
 SELECT country.name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrycontinent = "Europe"   AND countryarea >     (SELECT min(countryarea)      FROM country      WHERE continent = "Europe") 
 SELECT country.name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrycontinent = "Africa"   AND countrylanguage.percentage < 100   AND city.population <     (SELECT min(population)      FROM city      JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode      WHERE countrycontinent = "Asia") 
 SELECT country.name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrycontinent = "Africa"   AND countrylanguage.isofficial = "Yes"   AND city.population <     (SELECT min(population)      FROM city      JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode      WHERE countrycontinent = "Asia") 
 SELECT country.name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrycontinent = "Asia"   AND country.population >     (SELECT min(population)      FROM city      JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode      WHERE countrycontinent = "Africa") 
 SELECT country.name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrycontinent = "Asia"   AND country.population >     (SELECT min(population)      FROM city      JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode      WHERE countrycontinent = "Africa") 
 SELECT countrycode FROM city WHERE countrycode NOT IN     (SELECT countrycode      FROM countrylanguage      WHERE language = 'english') 
 SELECT countrycode FROM city WHERE countrycode NOT IN     (SELECT countrycode      FROM countrylanguage      WHERE language = 'english') 
 SELECT countrycode FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode WHERE countrylanguage.language!= 'English' 
 SELECT country.code FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language!= 'English' 
 SELECT countrycode FROM city WHERE countrycode NOT IN     (SELECT countrycode      FROM countrylanguage      WHERE language = 'english')   AND countryform!= 'Republic' 
 SELECT country_code FROM city EXCEPT SELECT country_code FROM countrylanguage WHERE language = 'english'   AND countrygovernmentform = 'Republic' 
 SELECT city.name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.name!= "France"   AND countrylanguage.isofficial = "No" 
 SELECT city.name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.name = "Europe"   AND countrylanguage.language!= "English" 
 SELECT DISTINCT city.Name FROM city JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode WHERE countrylanguage.Language = "Chinese"   AND country.CountryCode IN     (SELECT CountryCode      FROM country      WHERE Region = "Asia") 
 SELECT city.Name FROM city JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode WHERE countrylanguage.Language = "Chinese"   AND countrycontinent = "Asia" 
 SELECT country.Name,        country.INDEPYEAR,        country.SurfaceArea FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE city.Population =     (SELECT MIN (city.Population)      FROM city      JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode      WHERE countrylanguage.IsOfficial = 'Yes') 
 SELECT country.Name,        countrylanguage.IsOfficial,        country.SurfaceArea FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode ORDER BY city.Population LIMIT 1 
 SELECT city.Name,        country.Name,        countrylanguage.HeadOfState FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode ORDER BY country.SurfaceArea DESC LIMIT 1 
 SELECT country.name,        city.population,        country.head_of_state FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countryarea =     (SELECT MAX (countryarea)      FROM country      JOIN countrylanguage ON country.code = countrylanguage.countrycode) 
 SELECT country.name,        count(*) FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY city.countrycode HAVING count(*) >= 3 
 SELECT country.name,        countrylanguage.percentage FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY city.countrycode HAVING count(*) > 2 
 SELECT city.District,        count(*) FROM city JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode JOIN country ON countrylanguage.CountryCode = country.CountryCode WHERE city.Population >     (SELECT avg(population)      FROM city) GROUP BY city.District 
 SELECT city.District,        city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE city.Population >     (SELECT avg(population)      FROM city) 
 SELECT countrygovernmentform,        country.population FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylifeexpectancy >     (SELECT avg(countrylifeexpectancy)      FROM countrylanguage) GROUP BY countrygovernmentform 
 SELECT countrygovernmentform,        sum(country.population) FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.gnepop > 72 GROUP BY countrygovernmentform 
 SELECT countrycontinent,        avg(country.lifeexpectancy),        sum(country.population) FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY countrycontinent HAVING avg(country.lifeexpectancy) < 72 
 SELECT country.continent,        country.population,        country.lifeexpectancy,        country.gnp FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON city.countrycode = country.code WHERE country.lifeexpectancy < 72 GROUP BY country.continent 
 SELECT country.name,        country.area FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.percentage =     (SELECT MAX (percentage)      FROM countrylanguage) ORDER BY country.area DESC LIMIT 5; 
 SELECT country.name,        country.surfacearea FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.percentage =     (SELECT MAX (percentage)      FROM countrylanguage) ORDER BY country.surfacearea DESC LIMIT 5; 
 SELECT country.name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.percentage =     (SELECT MAX (percentage)      FROM countrylanguage) ORDER BY city.population DESC LIMIT 3 
 SELECT country.name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY city.name ORDER BY city.population DESC LIMIT 3; 
 SELECT country.name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.population =     (SELECT MIN (country.population)      FROM city      JOIN country ON city.countrycode = country.code      JOIN countrylanguage ON country.code = countrylanguage.countrycode) 
 SELECT country.name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY city.countrycode ORDER BY count(*) ASC LIMIT 3; 
 SELECT count(*) FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrycontinent = "Asia"; 
 SELECT count(*) FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrycontinent = "Asia" 
 SELECT country.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrycontinent = "Europe"   AND city.Population = 80000 
 SELECT country.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrycontinent = "Europe"   AND city.Population = 80000 
 SELECT sum(country.population),        avg(country.surfacearea) FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.continent = "North America"   AND country.surfacearea > 3000 
 SELECT country.population,        country.surfacearea FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrycontinent = "North America"   AND country.surfacearea > 3000 GROUP BY city.name 
 SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE city.Population BETWEEN 160000 AND 900000 
 SELECT city.name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE city.population BETWEEN 160000 AND 900000 
 SELECT countrylanguage.language FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY city.name ORDER BY count(*) DESC LIMIT 1 
 SELECT countrylanguage.language FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY city.name ORDER BY count(*) DESC LIMIT 1 
 SELECT countrylanguage.language,        country.Name,        countrylanguage.Percentage FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY city.Name ORDER BY countrylanguage.Percentage DESC LIMIT 10; 
 SELECT countrylanguage.countrycode,        countrylanguage.language,        countrylanguage.percentage FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode JOIN country ON country.code = city.countrycode GROUP BY countrylanguage.percentage ORDER BY countrylanguage.percentage DESC LIMIT 1 
 SELECT country.name,        country.population FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "Spanish" GROUP BY city.population ORDER BY sum(city.population) DESC LIMIT 1; 
 SELECT COUNT(*) FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode WHERE countrylanguage.language = "Spanish" 
 SELECT country.code FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "Spanish" ORDER BY countrylanguage.percentage DESC LIMIT 1; 
 SELECT country.code FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "Spanish" GROUP BY countrycode 
 SELECT count(*) FROM conductor 
 SELECT count(*) FROM conductor 
 SELECT conductor.name FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id JOIN performance ON orchestra.orchestra_id = performance.orchestra_id JOIN show ON performance.performance_id = show.performance_id ORDER BY conductor.age 
 SELECT conductor.name FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id JOIN performance ON orchestra.orchestra_id = performance.orchestra_id JOIN show ON performance.performance_id = show.performance_id ORDER BY conductor.age 
 SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID WHERE orchestra.Nationality!= "USA" 
 SELECT conductor.name FROM conductor EXCEPT SELECT conductor.name FROM orchestra JOIN conductor ON orchestra.conductor_id = conductor.conductor_id WHERE conductor.nationality = "USA" 
 SELECT orchestra.Record_Company FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID ORDER BY orchestra.Year_of_Founded DESC 
 SELECT orchestra.Record_Company FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON performance.Performance_ID = show.Performance_ID ORDER BY performance.Year_of_Founded DESC 
 SELECT avg(show.Attendance) FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON performance.Performance_ID = show.Performance_ID 
 SELECT avg(show.Attendance) FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON performance.Performance_ID = show.Performance_ID 
 SELECT max(Show.share),        min(Show.share) FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID WHERE performance.Type!= "Live final" 
 SELECT max(Show.Share),        min(Show.Share) FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID WHERE performance.Type!= "Live final" 
 SELECT count(DISTINCT conductor.nationality) FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id JOIN performance ON orchestra.orchestra_id = performance.orchestra_id JOIN show ON performance.performance_id = show.performance_id 
 SELECT count(DISTINCT conductor.Nationality) FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON performance.Performance_ID = show.Performance_ID 
 SELECT conductor.name FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id JOIN performance ON orchestra.orchestra_id = performance.orchestra_id JOIN show ON performance.performance_id = show.performance_id ORDER BY conductor.year_of_work DESC 
 SELECT conductor.name FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id JOIN performance ON orchestra.orchestra_id = performance.orchestra_id JOIN show ON performance.performance_id = show.performance_id ORDER BY conductor.year_of_work DESC 
 SELECT conductor.name FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id JOIN performance ON orchestra.orchestra_id = performance.orchestra_id JOIN show ON performance.performance_id = show.performance_id GROUP BY conductor.name ORDER BY conductor.year_of_work DESC LIMIT 1 
 SELECT conductor.name FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id JOIN performance ON orchestra.orchestra_id = performance.orchestra_id JOIN show ON performance.performance_id = show.performance_id GROUP BY conductor.name ORDER BY count(*) DESC LIMIT 1 
 SELECT conductor.Name,        orchestra.Orchestra FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON performance.Performances_ID = show.Performances_ID 
 SELECT conductor.name,        orchestra.orchestra FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id JOIN performance ON orchestra.orchestra_id = performance.orchestra_id JOIN show ON performance.performance_id = show.performance_id 
 SELECT conductor.name FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id GROUP BY conductor.name HAVING count(*) > 1 
 SELECT conductor.name FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id GROUP BY conductor.name HAVING count(*) > 1 
 SELECT conductor.name FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id JOIN performance ON orchestra.orchestra_id = performance.orchestra_id GROUP BY conductor.name ORDER BY count(*) DESC LIMIT 1 
 SELECT conductor.name FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id GROUP BY conductor.name ORDER BY count(*) DESC LIMIT 1 
 SELECT conductor.name FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id WHERE orchestra.year_of_work > 2008 
 SELECT conductor.name FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id WHERE orchestra.year_of_work > 2008 
 SELECT DISTINCT orchestra.Record_Company,                 orchestra.Year_of_Founded FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON performance.Performance_ID = show.Performance_ID GROUP BY orchestra.Record_Company 
 SELECT count(*),        orchestra.Record_Company FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON performance.Performance_ID = show.Performance_ID GROUP BY orchestra.Record_Company 
 SELECT orchestra.Major_Record_Format FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON performance.Performance_ID = show.Performance_ID GROUP BY orchestra.Major_Record_Format ORDER BY count(*) DESC 
 SELECT major_record_format FROM orchestra GROUP BY major_record_format ORDER BY count(*) DESC 
 SELECT performance.record_company FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id JOIN performance ON orchestra.orchestra_id = performance.orchestra_id GROUP BY conductor.conductor_id ORDER BY count(*) DESC LIMIT 1 
 SELECT record_company FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id JOIN performance ON orchestra.orchestra_id = performance.orchestra_id JOIN show ON performance.performance_id = show.performance_id GROUP BY orchestra.record_company ORDER BY count(*) DESC LIMIT 1 
 SELECT name FROM conductor EXCEPT SELECT orchestra.orchestra FROM orchestra JOIN conductor ON orchestra.conductor_id = conductor.conductor_id JOIN performance ON orchestra.orchestra_id = performance.orchestra_id WHERE performance.type = "Show" 
 SELECT ORCHESTRA FROM conductor EXCEPT SELECT ORCHESTRA FROM orchestra JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON performance.Performance_ID = show.Performance_ID 
 SELECT DISTINCT orchestra.Record_Company FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID WHERE orchestra.Year_of_Founded < 2003 INTERSECT   SELECT DISTINCT orchestra.Record_Company   FROM conductor   JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID WHERE orchestra.Year_of_Founded > 2003 
 SELECT record_company FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id WHERE orchestra.year_of_founded < 2003 INTERSECT   SELECT record_company   FROM conductor   JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id WHERE orchestra.year_of_founded > 2003 
 SELECT count(*) FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON performance.Performance_ID = show.Performance_ID WHERE orchestra.Major_Record_Format = "CD" OR orchestra.Major_Record_Format = "DVD" 
 SELECT count(*) FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON performance.Performance_ID = show.Performance_ID WHERE orchestra.Major_Record_Format = "CD" INTERSECT   SELECT count(*)   FROM conductor   JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID   JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID   JOIN show ON performance.Performance_ID = show.Performance_ID WHERE orchestra.Major_Record_Format = "DVD" 
 SELECT DISTINCT orchestra.year_of_founded FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id JOIN performance ON orchestra.orchestra_id = performance.orchestra_id GROUP BY orchestra.year_of_founded HAVING count(*) > 1 
 SELECT DISTINCT orchestra.year_of_founded FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id JOIN performance ON orchestra.orchestra_id = performance.orchestra_id GROUP BY orchestra.year_of_founded HAVING count(*) > 1 
 SELECT count(*) FROM highschooler 
 SELECT count(*) FROM highschooler 
 SELECT Highschooler.name,        Highschooler.grade FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.friend_id JOIN Likes ON Friend.liked_id = Likes.liked_id 
 SELECT Highschooler.name,        Highschooler.grade FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.friend_id JOIN Likes ON Friend.liked_id = Likes.liked_id 
 SELECT DISTINCT grade FROM highschooler 
 SELECT grade FROM highschooler 
 SELECT grade FROM highschooler WHERE name = "Kyle" 
 SELECT grade FROM highschooler WHERE name = 'Kyle' 
 SELECT name FROM highschooler WHERE grade = 10 
 SELECT name FROM highschooler WHERE grade = 10 
 SELECT highschooler.id FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON likes.student_id = friend.friend_id WHERE highschooler.name = "Kyle" 
 SELECT highschooler.id FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON likes.student_id = friend.friend_id WHERE highschooler.name = "Kyle" 
 SELECT count(*) FROM highschooler WHERE grade = 9   OR grade = 10 
 SELECT count(*) FROM highschooler WHERE grade = 9   OR grade = 10 
 SELECT grade,        count(*) FROM highschooler GROUP BY grade 
 SELECT grade,        count(*) FROM highschooler GROUP BY grade 
 SELECT grade FROM highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1 
 SELECT grade FROM highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1 
 SELECT grade FROM highschooler GROUP BY grade HAVING count(*) >= 4 
 SELECT grade FROM highschooler GROUP BY grade HAVING count(*) >= 4 
 SELECT Highschooler.id,        count(*) FROM Highschooler JOIN Friend ON Highschooler.id = Friend.friend_id JOIN Likes ON Likes.student_id = Friend.friend_id GROUP BY Highschooler.id 
 SELECT count(*),        highschooler.name FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON likes.student_id = friend.friend_id GROUP BY highschooler.name 
 SELECT Highschooler.name,        count(*) FROM Highschooler JOIN Friend ON Highschooler.id = Friend.friend_id JOIN Likes ON Friend.liked_id = Likes.liked_id GROUP BY Highschooler.id 
 SELECT Highschooler.name,        count(*) FROM Highschooler JOIN Friend ON Highschooler.id = Friend.friend_id JOIN Likes ON Friend.liked_id = Likes.liked_id GROUP BY Highschooler.id 
 SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.id = Friend.friend_id JOIN Likes ON Friend.liked_id = Likes.liked_id GROUP BY Highschooler.id ORDER BY count(*) DESC LIMIT 1 
 SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.friend_id JOIN Likes ON Friend.liked_id = Likes.liked_id GROUP BY Highschooler.ID ORDER BY count(*) DESC LIMIT 1 
 SELECT name FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON likes.student_id = friend.friend_id GROUP BY highschooler.id HAVING count(*) >= 3 
 SELECT name FROM highschooler WHERE id IN     (SELECT friend      FROM friend      JOIN likes ON friend.friend_id = likes.liked_id      GROUP BY friend.friend_id      HAVING count(*) >= 3) 
 SELECT DISTINCT friend.friend_id FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON likes.student_id = friend.friend_id WHERE highschooler.name = "Kyle" 
 SELECT Friend.name FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.friend_id JOIN Likes ON Highschooler.ID = Likes.liked_id WHERE Highschooler.name = "Kyle" 
 SELECT count(*) FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON likes.student_id = friend.friend_id WHERE highschooler.name = "Kyle" 
 SELECT count(*) FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON likes.student_id = friend.friend_id WHERE highschooler.name = "Kyle" 
 SELECT id FROM highschooler EXCEPT SELECT highschooler.id FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON likes.student_id = friend.friend_id 
 SELECT id FROM highschooler EXCEPT SELECT highschooler.id FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON likes.student_id = highschooler.id 
 SELECT name FROM highschooler EXCEPT SELECT highschooler.name FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON likes.student_id = friend.friend_id 
 SELECT name FROM highschooler EXCEPT SELECT highschooler.name FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON likes.student_id = friend.friend_id 
 SELECT Highschooler.id FROM Highschooler JOIN Friend ON Highschooler.id = Friend.friend_id JOIN Likes ON Likes.student_id = Friend.friend_id WHERE Highschooler.id NOT IN     (SELECT likes.student_id      FROM likes      JOIN friend ON likes.liked_id = friend.friend_id      WHERE friend.friend_id = Highschooler.id) 
 SELECT DISTINCT highschooler.id FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON likes.student_id = friend.friend_id AND likes.liked_id = highschooler.id 
 SELECT name FROM highschooler WHERE id IN     (SELECT friend.friend_id      FROM friend      JOIN likes ON friend.friend_id = likes.liked_id      JOIN highschooler ON likes.liked_id = highschooler.id      WHERE likes.liked_id NOT IN          (SELECT likes.liked_id           FROM likes           JOIN highschooler ON likes.liked_id = highschooler.id           WHERE highschooler.grade = 1)) 
 SELECT name FROM highschooler WHERE id IN     (SELECT friend.friend_id      FROM friend      JOIN likes ON friend.friend_id = likes.liked_id      JOIN highschooler ON likes.liked_id = highschooler.id      WHERE likes.liked_id = highschooler.id        AND highschooler.grade = 9) 
 SELECT count(*),        highschooler.name FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON likes.student_id = friend.friend_id GROUP BY highschooler.id 
 SELECT likes.student_id,        count(*) FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON likes.student_id = friend.friend_id GROUP BY likes.student_id 
 SELECT Highschooler.name,        count(*) FROM Highschooler JOIN Friend ON Highschooler.id = Friend.friend_id JOIN Likes ON Friend.liked_id = Likes.liked_id GROUP BY Highschooler.id 
 SELECT Highschooler.name,        count(*) FROM Highschooler JOIN Friend ON Highschooler.id = Friend.friend_id JOIN Likes ON Friend.liked_id = Likes.liked_id GROUP BY Highschooler.id 
 SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.id = Friend.friend_id JOIN Likes ON Friend.liked_id = Likes.liked_id GROUP BY Highschooler.id ORDER BY count(*) DESC LIMIT 1 
 SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.friend_id JOIN Likes ON Friend.liked_id = Likes.liked_id GROUP BY Highschooler.ID ORDER BY count(*) DESC LIMIT 1 
 SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.friend_id JOIN Likes ON Friend.liked_id = Likes.liked_id GROUP BY Highschooler.ID HAVING COUNT(*) >= 2 
 SELECT name FROM highschooler WHERE id IN     (SELECT student_id      FROM likes      GROUP BY student_id      HAVING count(*) >= 2) 
 SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.id = Friend.friend_id JOIN Likes ON Likes.student_id = Friend.friend_id WHERE grade > 5 GROUP BY Highschooler.id HAVING count(*) >= 2 
 SELECT name FROM highschooler WHERE grade > 5 UNION SELECT highschooler.name FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON likes.student_id = friend.friend_id GROUP BY highschooler.id HAVING count(*) >= 2 
 SELECT count(*) FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON likes.student_id = friend.friend_id WHERE highschooler.name = "Kyle" 
 SELECT count(*) FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON likes.student_id = friend.friend_id WHERE highschooler.name = "Kyle" 
 SELECT avg(highschooler.grade) FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON likes.student_id = friend.friend_id GROUP BY highschooler.id 
 SELECT avg(highschooler.grade) FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON likes.student_id = friend.friend_id GROUP BY highschooler.id 
 SELECT min(grade) FROM highschooler WHERE id NOT IN     (SELECT student_id      FROM friend      JOIN likes ON friend.friend_id = likes.liked_id      WHERE likes.liked_id IN          (SELECT student_id           FROM highschooler           WHERE grade = 9)) 
 SELECT grade FROM highschooler WHERE id NOT IN     (SELECT student_id      FROM friend      JOIN likes ON friend.friend_id = likes.liked_id      WHERE likes.liked_id IN          (SELECT student_id           FROM highschooler           WHERE grade = 9)) 
 SELECT owners.state FROM breeds JOIN charges ON breeds.breed_code = charges.breed_code JOIN sizes ON breeds.size_code = sizes.size_code JOIN treatment_types ON charges.treatment_type_code = treatment_types.treatment_type_code JOIN owners ON owners.owner_id = breeds.owner_id JOIN professionals ON owners.owner_id = professionals.owner_id WHERE owners.state = professionals.state 
 SELECT owners.state FROM breeds JOIN charges ON breeds.breed_code = charges.breed_code JOIN sizes ON breeds.size_code = sizes.size_code JOIN treatment_types ON charges.treatment_type_code = treatment_types.treatment_type_code JOIN owners ON owners.owner_id = dogs.owner_id JOIN professionals ON professionals.professional_id = dogs.owner_id WHERE breeds.breed_name = "Bulldog"   AND treatment_types.treatment_type_description = "Vaccination" 
 SELECT avg(Dogs.age) FROM Dogs JOIN Owners ON Dogs.owner_id = Owners.owner_id JOIN Professionals ON Owners.owner_id = Professionals.owner_id JOIN Charges ON Charges.charge_id = Charges.charge_id JOIN Treatment_Types ON Charges.treatment_type_code = Treatment_Types.treatment_type_code WHERE Treatment_Types.treatment_type_description = "TREATMENT" 
 SELECT avg(Dogs.age) FROM Dogs JOIN Owners ON Dogs.owner_id = Owners.owner_id JOIN Professionals ON Owners.owner_id = Professionals.owner_id JOIN Charges ON Charges.charge_id = Charges.charge_id JOIN Treatment_Types ON Treatment_Types.treatment_type_code = Charges.treatment_type_code WHERE Treatment_Types.treatment_type_description = "Vaccination" 
 SELECT Professionals.owner_id,        Professionals.last_name,        Professionals.cell_number FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatment_Types ON Charges.treatment_type_code = Treatment_Types.treatment_type_code JOIN Owners ON Owners.owner_id = Dogs.owner_id JOIN Dogs ON Dogs.owner_id = Owners.owner_id JOIN Professionals ON Professionals.professional_id = Dogs.dog_id GROUP BY Professionals.owner_id HAVING count(*) > 2 
 SELECT Professionals.professional_id,        Owners.last_name,        Owners.cell_number FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Breeds.size_code = Sizes.size_code JOIN Treatment_Types ON Charges.treatment_type_code = Treatment_Types.treatment_type_code JOIN Owners ON Owners.owner_id = Dogs.owner_id JOIN Dogs ON Dogs.owner_id = Owners.owner_id GROUP BY Professionals.professional_id HAVING count(*) > 2 UNION SELECT Professionals.professional_id,        Owners.last_name,        Owners.cell_number FROM Professionals JOIN Treatment_Types ON Professionals.professional_id = Treatment_Types.professional_id JOIN Charges ON Charges.treatment_type_code = Treatment_Types.treatment_type_code JOIN Owners ON Owners.owner_id = Treatment_Types.professional_id GROUP BY Professionals.professional_id HAVING count(*) > 2 
 SELECT dogs.name FROM dogs JOIN owners ON dogs.owner_id = owners.owner_id JOIN treatment_types ON dogs.dog_id = treatment_types.dog_id JOIN charges ON treatment_types.treatment_type_code = charges.treatment_type_code WHERE charges.cost_of_treatment > 1000 
 SELECT dogs.name FROM dogs JOIN owners ON dogs.owner_id = owners.owner_id JOIN treatment_types ON dogs.treatment_type_code = treatment_types.treatment_type_code JOIN charges ON treatment_types.charge_amount = charges.charge_amount WHERE owners.email_address!= "owner@example.com"   AND charges.charge_amount > 1000 
 SELECT first_name FROM owners UNION SELECT first_name FROM dogs WHERE first_name NOT IN     (SELECT first_name      FROM professionals      INTERSECT      SELECT first_name      FROM dogs) 
 SELECT first_name FROM owners UNION SELECT first_name FROM dogs UNION SELECT first_name FROM professionals 
 SELECT Professionals.professional_id,        Professionals.role_code,        Professionals.email_address FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Breeds.size_code = Sizes.size_code JOIN Treatment_Types ON Charges.treatment_type_code = Treatment_Types.treatment_type_code JOIN Owners ON Owners.owner_id = Dogs.owner_id JOIN Dogs ON Dogs.owner_id = Owners.owner_id JOIN Professionals ON Professionals.professional_id = Dogs.dog_id WHERE Dogs.name = ""   AND Treatment_Types.treatment_type_description = "" 
 SELECT Professionals.professional_id,        Professionals.role_code,        Owners.email_address FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Breeds.size_code = Sizes.size_code JOIN Treatment_Types ON Charges.treatment_type_code = Treatment_Types.treatment_type_code JOIN Owners ON Owners.owner_id = Dogs.owner_id JOIN Dogs ON Dogs.owner_id = Owners.owner_id WHERE Dogs.name = ""   AND Treatment_Types.treatment_type_description = "" 
 SELECT owners.owner_id,        owners.first_name,        owners.last_name FROM breeds JOIN charges ON breeds.breed_code = charges.breed_code JOIN sizes ON breeds.size_code = sizes.size_code JOIN treatment_types ON charges.treatment_type_code = treatment_types.treatment_type_code JOIN owners ON owners.owner_id = dogs.owner_id JOIN dogs ON dogs.owner_id = owners.owner_id GROUP BY owners.owner_id ORDER BY count(*) DESC LIMIT 1 
 SELECT owners.owner_id,        owners.first_name,        owners.last_name FROM breeds JOIN charges ON breeds.breed_code = charges.breed_code JOIN sizes ON breeds.size_code = sizes.size_code JOIN treatment_types ON charges.treatment_type_code = treatment_types.treatment_type_code JOIN owners ON owners.owner_id = dogs.owner_id JOIN dogs ON dogs.owner_id = owners.owner_id WHERE dogs.age > 3 GROUP BY owners.owner_id ORDER BY count(*) DESC LIMIT 1 
 SELECT Professionals.professional_id,        Professionals.role_code,        Owners.first_name FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatment_Types ON Charges.treatment_type_code = Treatment_Types.treatment_type_code JOIN Owners ON Owners.owner_id = Dogs.owner_id JOIN Dogs ON Dogs.owner_id = Owners.owner_id JOIN Professionals ON Professionals.professional_id = Dogs.dog_id GROUP BY Professionals.professional_id HAVING count(*) >= 2 
 SELECT Professionals.professional_id,        Professionals.role_code,        Owners.first_name FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatment_Types ON Charges.treatment_type_code = Treatment_Types.treatment_type_code JOIN Owners ON Owners.owner_id = Dogs.owner_id JOIN Dogs ON Dogs.owner_id = Owners.owner_id JOIN Professionals ON Professionals.professional_id = Dogs.dog_id GROUP BY Professionals.professional_id HAVING count(*) >= 2 
 SELECT breeds.breed_name FROM breeds JOIN dogs ON breeds.breed_code = dogs.breed_code JOIN professionals ON dogs.dog_id = professionals.dog_id JOIN treatment_types ON treatment_types.treatment_type_code = dogs.treatment_type_code GROUP BY breeds.breed_name ORDER BY count(*) DESC LIMIT 1 
 SELECT Breeds.breed_name FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code JOIN Professionals ON Dogs.dog_id = Professionals.dog_id JOIN Treatment_Types ON Treatment_Types.treatment_type_code = Treatment_Types.treatment_type_code GROUP BY Breeds.breed_name ORDER BY count(*) DESC LIMIT 1 
 SELECT owners.owner_id,        owners.last_name FROM breeds JOIN charges ON breeds.breed_code = charges.breed_code JOIN sizes ON breeds.size_code = sizes.size_code JOIN treatment_types ON charges.treatment_type_code = treatment_types.treatment_type_code JOIN owners ON owners.owner_id = dogs.owner_id WHERE owners.first_name = owners.first_name   AND owners.last_name = owners.last_name GROUP BY owners.owner_id ORDER BY count(*) DESC LIMIT 1 
 SELECT owners.owner_id,        owners.last_name FROM breeds JOIN charges ON breeds.breed_code = charges.breed_code JOIN sizes ON breeds.size_code = sizes.size_code JOIN treatment_types ON charges.treatment_type_code = treatment_types.treatment_type_code JOIN owners ON owners.owner_id = dogs.owner_id WHERE dogs.breed_code = breeds.breed_code GROUP BY owners.owner_id ORDER BY sum(treatment_types.cost_of_treatment) DESC LIMIT 1 
 SELECT treatment_types.treatment_type_description FROM breeds JOIN charges ON breeds.breed_code = charges.breed_code JOIN sizes ON breeds.size_code = sizes.size_code JOIN treatment_types ON charges.treatment_type_code = treatment_types.treatment_type_code JOIN owners ON owners.owner_id = dogs.owner_id JOIN dogs ON dogs.owner_id = owners.owner_id WHERE charges.cost_of_treatment =     (SELECT min(cost_of_treatment)      FROM charges) 
 SELECT treatment_types.treatment_type_description FROM breeds JOIN charges ON breeds.breed_code = charges.breed_code JOIN sizes ON breeds.size_code = sizes.size_code JOIN treatment_types ON charges.treatment_type_code = treatment_types.treatment_type_code JOIN owners ON owners.owner_id = dogs.owner_id JOIN dogs ON dogs.owner_id = owners.owner_id WHERE owners.city = "San Francisco" ORDER BY sum(charges.cost_of_treatment) LIMIT 1 
 SELECT owners.owner_id,        owners.zip_code FROM breeds JOIN charges ON breeds.breed_code = charges.breed_code JOIN sizes ON breeds.size_code = sizes.size_code JOIN treatment_types ON charges.treatment_type_code = treatment_types.treatment_type_code JOIN owners ON owners.owner_id = dogs.owner_id WHERE charges.cost_of_treatment =     (SELECT max(cost_of_treatment)      FROM charges) 
 SELECT owners.owner_id,        owners.zip_code FROM breeds JOIN charges ON breeds.breed_code = charges.breed_code JOIN sizes ON breeds.size_code = sizes.size_code JOIN treatment_types ON charges.treatment_type_code = treatment_types.treatment_type_code JOIN owners ON owners.owner_id = dogs.owner_id WHERE dogs.age > 3 GROUP BY owners.owner_id ORDER BY sum(charges.cost_of_treatment) DESC LIMIT 1 
 SELECT Professionals.professional_id,        Professionals.cell_number FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatment_Types ON Charges.treatment_type_code = Treatment_Types.treatment_type_code JOIN Owners ON Owners.owner_id = Dogs.owner_id JOIN Dogs ON Dogs.owner_id = Owners.owner_id JOIN Professionals ON Professionals.professional_id = Dogs.dog_id GROUP BY Professionals.professional_id HAVING count(*) >= 2 
 SELECT Professionals.professional_id,        Owners.cell_number FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Breeds.size_code = Sizes.size_code JOIN Treatment_Types ON Charges.treatment_type_code = Treatment_Types.treatment_type_code JOIN Owners ON Owners.owner_id = Dogs.owner_id JOIN Dogs ON Dogs.dog_id = Dogs.dog_id JOIN Professionals ON Professionals.professional_id = Professionals.professional_id GROUP BY Professionals.professional_id HAVING count(*) >= 2 
 SELECT Professionals.first_name,        Professionals.last_name FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatment_Types ON Charges.treatment_type_code = Treatment_Types.treatment_type_code JOIN Owners ON Owners.owner_id = Dogs.owner_id JOIN Dogs ON Dogs.dog_id = Dogs.dog_id JOIN Professionals ON Professionals.professional_id = Dogs.dog_id WHERE Charges.cost_of_treatment <     (SELECT avg(cost_of_treatment)      FROM Charges) 
 SELECT Professionals.first_name,        Professionals.last_name FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatment_Types ON Charges.treatment_type_code = Treatment_Types.treatment_type_code JOIN Owners ON Owners.owner_id = Dogs.owner_id JOIN Dogs ON Dogs.owner_id = Owners.owner_id JOIN Professionals ON Professionals.professional_id = Dogs.dog_id WHERE Charges.cost_of_treatment <     (SELECT avg(cost_of_treatment)      FROM Charges) 
 SELECT treatment_TREATMENTS.date_of_treatment,        Professionals.first_name,        Professionals.last_name FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Charges.size_code = Sizes.size_code JOIN Treatment_Types ON Charges.treatment_type_code = Treatment_Types.treatment_type_code JOIN Owners ON Owners.owner_id = Dogs.owner_id JOIN Dogs ON Dogs.owner_id = Owners.owner_id JOIN Professionals ON Professionals.professional_id = Dogs.dog_id 
 SELECT treatment_TREATMENTS.date_of_treatment,        Professionals.first_name,        Professionals.last_name FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Breeds.size_code = Sizes.size_code JOIN Treatment_Types ON Charges.treatment_type_code = Treatment_Types.treatment_type_code JOIN Owners ON Owners.owner_id = Dogs.owner_id JOIN Dogs ON Dogs.dog_id = Owners.dog_id JOIN Professionals ON Professionals.professional_id = Owners.professional_id 
 SELECT Treatment_Types.treatment_type_description,        Treatments.cost_of_treatment FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Breeds.size_code = Sizes.size_code JOIN Owners ON Owners.owner_id = Dogs.owner_id JOIN Professionals ON Professionals.professional_id = Dogs.owner_id JOIN Dogs ON Dogs.dog_id = Treatments.dog_id 
 SELECT Treatment_Types.treatment_type_description,        Charges.cost_of_treatment FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Breeds.size_code = Sizes.size_code JOIN Owners ON Owners.owner_id = Dogs.owner_id JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Professionals ON Professionals.professional_id = Dogs.dog_id JOIN Treatments ON Treatments.treatment_id = Dogs.dog_id 
 SELECT Owners.first_name,        Owners.last_name,        Sizes.size_description FROM Dogs JOIN Owners ON Dogs.owner_id = Owners.owner_id JOIN Sizes ON Sizes.size_code = Dogs.size_code JOIN Treatment_Types ON Treatment_Types.treatment_type_code = Dogs.treatment_type_code 
 SELECT Owners.first_name,        Owners.last_name,        Sizes.size_description FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Breeds.breed_code = Sizes.breed_code JOIN Dogs ON Dogs.owner_id = Owners.owner_id JOIN Professionals ON Professionals.professional_id = Dogs.dog_id JOIN Treatments ON Treatments.dog_id = Dogs.dog_id 
 SELECT Owners.first_name,        Dogs.name FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Breeds.size_code = Sizes.size_code JOIN Treatment_Types ON Charges.treatment_type_code = Treatment_Types.treatment_type_code JOIN Owners ON Owners.owner_id = Dogs.owner_id JOIN Dogs ON Owners.owner_id = Dogs.owner_id 
 SELECT Owners.first_name,        Dogs.name FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Breeds.size_code = Sizes.size_code JOIN Treatment_Types ON Charges.treatment_type_code = Treatment_Types.treatment_type_code JOIN Owners ON Owners.owner_id = Dogs.owner_id WHERE Charges.charge_amount > 100 
 SELECT dogs.name,        treatment.Treatment_date FROM dogs JOIN owners ON dogs.owner_id = owners.owner_id JOIN breeds ON dogs.breed_code = breeds.breed_code JOIN charges ON charges.charge_id = treatment.charge_id JOIN sizes ON breeds.size_code = sizes.size_code JOIN treatment_Types ON treatment.Treatment_type_code = treatment_Types.Treatment_type_code WHERE breeds.breed_name = "Rottweiler" GROUP BY dogs.name ORDER BY count(*) DESC LIMIT 1 
 SELECT dogs.name,        dogs.date_adopted FROM dogs JOIN owners ON dogs.owner_id = owners.owner_id JOIN breeds ON dogs.breed_code = breeds.breed_code JOIN treatment_types ON dogs.dog_id = treatment_types.dog_id JOIN professionals ON treatment_types.professional_id = professionals.professional_id WHERE breeds.breed_name = "Rottweiler" GROUP BY dogs.name ORDER BY count(*) DESC LIMIT 1; 
 SELECT Owners.first_name,        Dogs.name FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Breeds.size_code = Sizes.size_code JOIN Treatment_Types ON Charges.treatment_type_code = Treatment_Types.treatment_type_code JOIN Owners ON Owners.owner_id = Charges.owner_id WHERE Owners.state = "Virginia" 
 SELECT Owners.first_name,        Dogs.name FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Breeds.size_code = Sizes.size_code JOIN Treatment_Types ON Charges.treatment_type_code = Treatment_Types.treatment_type_code JOIN Owners ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = "Virginia" 
 SELECT Dogs.date_arrived,        Dogs.date_departed FROM Dogs JOIN Owners ON Dogs.owner_id = Owners.owner_id JOIN Professionals ON Owners.owner_id = Professionals.owner_id JOIN Charges ON Charges.charge_id = Charges.charge_id JOIN Sizes ON Sizes.size_code = Sizes.size_code JOIN Treatment_Types ON Treatment_Types.treatment_type_code = Treatment_Types.treatment_type_code 
 SELECT Dogs.date_arrived,        Dogs.date_departed FROM Dogs JOIN Owners ON Dogs.owner_id = Owners.owner_id JOIN Professionals ON Owners.owner_id = Professionals.owner_id JOIN Charges ON Charges.charge_id = Charges.charge_id JOIN Treatment_Types ON Charges.treatment_type_code = Treatment_Types.treatment_type_code 
 SELECT owners.last_name FROM breeds JOIN charges ON breeds.breed_code = charges.breed_code JOIN sizes ON breeds.size_code = sizes.size_code JOIN treatment_types ON charges.treatment_type_code = treatment_types.treatment_type_code JOIN dogs ON dogs.owner_id = owners.owner_id AND dogs.dog_id = treatment_types.treatment_id ORDER BY dogs.age LIMIT 1 
 SELECT owners.last_name FROM breeds JOIN charges ON breeds.breed_code = charges.breed_code JOIN sizes ON breeds.size_code = sizes.size_code JOIN treatment_types ON charges.treatment_type_code = treatment_types.treatment_type_code JOIN dogs ON dogs.dog_id = treatment_types.dog_id JOIN owners ON dogs.owner_id = owners.owner_id ORDER BY dogs.age LIMIT 1 
 SELECT DISTINCT owners.email_address FROM breeds JOIN charges ON breeds.breed_code = charges.breed_code JOIN sizes ON breeds.size_code = sizes.size_code JOIN treatment_types ON charges.treatment_type_code = treatment_types.treatment_type_code JOIN owners ON owners.owner_id = dogs.owner_id JOIN professionals ON professionals.professional_id = dogs.owner_id WHERE owners.state = "Hawaii"   OR owners.state = "Wisconsin" 
 SELECT DISTINCT owners.email_address FROM breeds JOIN charges ON breeds.breed_code = charges.breed_code JOIN sizes ON breeds.size_code = sizes.size_code JOIN treatment_types ON charges.treatment_type_code = treatment_types.treatment_type_code JOIN owners ON owners.owner_id = dogs.owner_id JOIN professionals ON professionals.professional_id = dogs.dog_id WHERE owners.state = "Hawaii"   OR owners.state = "Wisconsin" 
 SELECT Dogs.date_arrived,        Dogs.date_departed FROM Dogs JOIN Owners ON Dogs.owner_id = Owners.owner_id JOIN Professionals ON Owners.owner_id = Professionals.owner_id JOIN Charges ON Charges.charge_id = Charges.charge_id JOIN Sizes ON Sizes.size_code = Sizes.size_code JOIN Treatment_Types ON Treatment_Types.treatment_type_code = Treatment_Types.treatment_type_code 
 SELECT Dogs.date_arrived,        Dogs.date_departed FROM Dogs JOIN Owners ON Dogs.owner_id = Owners.owner_id JOIN Professionals ON Owners.owner_id = Professionals.owner_id JOIN Charges ON Charges.charge_id = Charges.charge_id JOIN Sizes ON Sizes.size_code = Sizes.size_code JOIN Treatment_Types ON Treatment_Types.treatment_type_code = Treatment_Types.treatment_type_code 
 SELECT count(*) FROM dogs JOIN owners ON dogs.owner_id = owners.owner_id JOIN dogs_sizes ON dogs.dog_id = dogs_sizes.dog_id JOIN treatment_types ON treatment_types.treatment_type_code = treatment_types.treatment_type_code JOIN owners ON owners.owner_id = dogs.owner_id WHERE treatment_types.treatment_type_description = "treatment" 
 SELECT count(*) FROM dogs JOIN owners ON dogs.owner_id = owners.owner_id JOIN dogs ON dogs.owner_id = owners.owner_id JOIN professionals ON dogs.dog_id = professionals.dog_id JOIN treatments ON dogs.dog_id = treatments.dog_id WHERE treatments.treatment_type_code = "Vaccination" 
 SELECT count(*) FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN professionals ON owners.owner_id = professionals.owner_id JOIN treatments ON dogs.dog_id = treatments.dog_id WHERE treatments.treatment_type_code = "Treatment" 
 SELECT count(*) FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN professionals ON owners.owner_id = professionals.owner_id JOIN treatments ON dogs.dog_id = treatments.dog_id WHERE dogs.name = "Breed Name" 
 SELECT Professionals.role_code,        Professionals.street,        Professionals.city,        Professionals.state FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Breeds.size_code = Sizes.size_code JOIN Treatment_Types ON Charges.treatment_type_code = Treatment_Types.treatment_type_code JOIN Owners ON Owners.owner_id = Dogs.owner_id JOIN Dogs ON Dogs.dog_id = Owners.dog_id JOIN Professionals ON Professionals.professional_id = Dogs.owner_id WHERE Owners.city LIKE "%West%" 
 SELECT Professionals.role_code,        Professionals.street,        Professionals.city,        Professionals.state FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Breeds.size_code = Sizes.size_code JOIN Treatment_Types ON Charges.treatment_type_code = Treatment_Types.treatment_type_code JOIN Owners ON Owners.owner_id = Dogs.owner_id JOIN Dogs ON Dogs.dog_id = Owners.dog_id JOIN Professionals ON Professionals.professional_id = Dogs.owner_id WHERE Owners.city LIKE '%West%' 
 SELECT Owners.first_name,        Owners.last_name,        Owners.email_address FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Breeds.size_code = Sizes.size_code JOIN Treatment_Types ON Charges.treatment_type_code = Treatment_Types.treatment_type_code JOIN Owners ON Owners.owner_id = Dogs.owner_id WHERE Owners.state LIKE '%North%' 
 SELECT Owners.first_name,        Owners.last_name,        Owners.email_address FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Breeds.size_code = Sizes.size_code JOIN Treatment_Types ON Charges.treatment_type_code = Treatment_Types.treatment_type_code JOIN Owners ON Owners.owner_id = Dogs.owner_id WHERE Owners.state LIKE '%North%' 
 SELECT count(*) FROM dogs WHERE age <     (SELECT avg(age)      FROM dogs) 
 SELECT count(*) FROM dogs WHERE age <     (SELECT avg(age)      FROM dogs) 
 SELECT treatment_cost FROM treatments ORDER BY date_of_treatment DESC LIMIT 1 
 SELECT treatment_cost FROM treatments ORDER BY date_of_treatment DESC LIMIT 1 
 SELECT count(*) FROM dogs WHERE dog_id NOT IN     (SELECT dog_id      FROM treatments) 
 SELECT count(*) FROM dogs WHERE dog_id NOT IN     (SELECT dog_id      FROM treatments) 
 SELECT count(*) FROM owners WHERE owner_id NOT IN     (SELECT owner_id      FROM dogs) 
 SELECT count(*) FROM owners EXCEPT SELECT count(*) FROM dogs 
 SELECT count(*) FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN professionals ON dogs.dog_id = professionals.dog_id WHERE professionals.role_code!= 'operates'   AND treatment_type_code = 'none' 
 SELECT count(*) FROM Professionals EXCEPT SELECT count(*) FROM Dogs JOIN Professionals ON Dogs.owner_id = Professionals.owner_id JOIN Treatment_Types ON Treatment_Types.treatment_type_code = Treatment_Types.treatment_type_code JOIN Breeds ON Breeds.breed_code = Treatment_Types.treatment_type_code JOIN Sizes ON Sizes.size_code = Treatment_Types.treatment_type_code JOIN Charges ON Charges.charge_id = Treatment_Types.charge_id JOIN Owners ON Owners.owner_id = Treatment_Types.professional_id 
 SELECT dogs.name,        dogs.age,        dogs.weight FROM dogs JOIN owners ON dogs.owner_id = owners.owner_id JOIN breeds ON breeds.breed_code = dogs.breed_code JOIN charges ON charges.charge_id = dogs.dog_id JOIN sizes ON sizes.size_code = dogs.size_code JOIN treatment_types ON treatment_types.treatment_type_code = dogs.treatment_type_code WHERE owners.abandoned_yn = 1 
 SELECT dogs.name,        dogs.age,        dogs.weight FROM dogs JOIN owners ON dogs.owner_id = owners.owner_id JOIN breeds ON breeds.breed_code = dogs.breed_code JOIN charges ON charges.charge_id = dogs.dog_id JOIN sizes ON sizes.size_code = dogs.size_code JOIN treatment_types ON treatment_types.treatment_type_code = dogs.treatment_type_code WHERE owners.abandoned_yn = 1 
 SELECT avg(Dogs.age) FROM Dogs JOIN Owners ON Dogs.owner_id = Owners.owner_id JOIN Breeds ON Dogs.breed_code = Breeds.breed_code JOIN Sizes ON Breeds.size_code = Sizes.size_code JOIN Treatment_Types ON Treatment_Types.treatment_type_code = Treatment_Types.treatment_type_code JOIN Professionals ON Treatment_Types.professional_id = Professionals.professional_id 
 SELECT avg(Dogs.age) FROM Dogs JOIN Owners ON Dogs.owner_id = Owners.owner_id JOIN Breeds ON Dogs.breed_code = Breeds.breed_code JOIN Sizes ON Breeds.size_code = Sizes.size_code JOIN Treatment_Types ON Treatment_Types.treatment_type_code = Treatment_Types.treatment_type_code JOIN Professionals ON Treatment_Types.professional_id = Professionals.professional_id 
 SELECT dogs.age FROM dogs JOIN owners ON dogs.owner_id = owners.owner_id JOIN sizes ON dogs.size_code = sizes.size_code JOIN treatment_types ON dogs.dog_id = treatment_types.dog_id WHERE dogs.age =     (SELECT max(age)      FROM dogs) 
 SELECT dogs.age FROM dogs JOIN owners ON dogs.owner_id = owners.owner_id JOIN breeds ON dogs.breed_code = breeds.breed_code JOIN treatment_types ON dogs.dog_id = treatment_types.dog_id JOIN professionals ON treatment_types.professional_id = professionals.professional_id WHERE dogs.name = "oldest"   AND dogs.age =     (SELECT max(age)      FROM dogs      JOIN owners ON dogs.owner_id = owners.owner_id      JOIN breeds ON dogs.breed_code = breeds.breed_code      JOIN treatment_types ON dogs.dog_id = treatment_types.dog_id      JOIN professionals ON treatment_types.professional_id = professionals.professional_id) 
 SELECT Treatment_Types.treatment_type_code,        Charges.charge_amount FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Breeds.size_code = Sizes.size_code JOIN Treatment_Types ON Charges.treatment_type_code = Treatment_Types.treatment_type_code JOIN Owners ON Owners.owner_id = Charges.owner_id JOIN Dogs ON Dogs.dog_id = Owners.owner_id WHERE Dogs.age > 3 GROUP BY Charges.charge_amount 
 SELECT Charges.charge_type,        Charges.charge_amount FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Breeds.size_code = Sizes.size_code JOIN Treatment_Types ON Charges.treatment_type_code = Treatment_Types.treatment_type_code JOIN Owners ON Owners.owner_id = Charges.owner_id JOIN Dogs ON Dogs.dog_id = Charges.dog_id JOIN Professionals ON Professionals.professional_id = Charges.professional_id 
 SELECT treatment_types.treatment_type_description,        charges.charge_amount FROM breeds JOIN charges ON breeds.breed_code = charges.breed_code JOIN sizes ON breeds.size_code = sizes.size_code JOIN treatment_types ON charges.treatment_type_code = treatment_types.treatment_type_code GROUP BY charges.charge_amount ORDER BY sum(charges.charge_amount) DESC LIMIT 1 
 SELECT Charges.charge_amount FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Breeds.size_code = Sizes.size_code JOIN Treatment_Types ON Charges.treatment_type_code = Treatment_Types.treatment_type_code WHERE Treatment_Types.treatment_type_description = "Veterinary" GROUP BY Charges.charge_amount ORDER BY Charges.charge_amount DESC LIMIT 1 
 SELECT Owners.email_address,        Owners.cell_number,        Owners.home_phone FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Breeds.size_code = Sizes.size_code JOIN Treatment_Types ON Charges.treatment_type_code = Treatment_Types.treatment_type_code JOIN Owners ON Owners.owner_id = Dogs.owner_id JOIN Professionals ON Professionals.professional_id = Dogs.owner_id 
 SELECT Professionals.email_address,        Professionals.cell_number,        Professionals.home_phone FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Breeds.size_code = Sizes.size_code JOIN Treatment_Types ON Charges.treatment_type_code = Treatment_Types.treatment_type_code JOIN Owners ON Owners.owner_id = Dogs.owner_id JOIN Dogs ON Dogs.owner_id = Owners.owner_id JOIN Professionals ON Professionals.professional_id = Dogs.dog_id 
 SELECT Treatment_Types.treatment_type_description,        Sizes.size_description FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Breeds.size_code = Sizes.size_code JOIN Owners ON Owners.owner_id = Dogs.owner_id JOIN Professionals ON Professionals.professional_id = Dogs.owner_id JOIN Dogs ON Dogs.dog_id = Owners.dog_id JOIN Treatments ON Treatments.treatment_id = Dogs.dog_id 
 SELECT DISTINCT Breeds.breed_name,                 Sizes.size_description FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Breeds.size_code = Sizes.size_code JOIN Treatment_Types ON Charges.treatment_type_code = Treatment_Types.treatment_type_code JOIN Owners ON Owners.owner_id = Dogs.owner_id JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Professionals ON Professionals.professional_id = Dogs.dog_id 
 SELECT Professionals.first_name,        Treatment_Types.treatment_type_description FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Breeds.size_code = Sizes.size_code JOIN Owners ON Owners.owner_id = Dogs.owner_id JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Professionals ON Professionals.professional_id = Dogs.dog_id JOIN Treatments ON Treatments.treatment_id = Dogs.dog_id 
 SELECT Professionals.first_name,        Treatment_Types.treatment_type_description FROM Breeds JOIN Charges ON Breeds.breed_code = Charges.breed_code JOIN Sizes ON Breeds.size_code = Sizes.size_code JOIN Owners ON Owners.owner_id = Dogs.owner_id JOIN Dogs ON Dogs.owner_id = Owners.owner_id JOIN Professionals ON Professionals.professional_id = Dogs.dog_id JOIN Treatments ON Treatments.dog_id = Dogs.dog_id AND Treatments.professional_id = Professionals.professional_id 
 SELECT count(*) FROM singer 
 SELECT count(*) FROM singer 
 SELECT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID ORDER BY singer.Net_Worth_Millions ASC 
 SELECT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID ORDER BY singer.Net_Worth_Millions ASC 
 SELECT singer.birth_year,        singer.citizenship FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID 
 SELECT singer.Birth_Year,        singer.Citizenship FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID 
 SELECT Name FROM singer WHERE Citizenship!= "France" 
 SELECT name FROM singer WHERE citizenship!= 'France' 
 SELECT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE singer.Birth_Year = 1948   OR singer.Birth_Year = 1949 
 SELECT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE singer.Birth_Year = 1948   OR singer.Birth_Year = 1949 
 SELECT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID ORDER BY singer.Net_Worth_Millions DESC LIMIT 1 
 SELECT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID ORDER BY singer.Net_Worth_Millions DESC LIMIT 1 
 SELECT DISTINCT singer.Citizens,                 COUNT(*) FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Citizens 
 SELECT singer.Citizens,        count(*) FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Citizens 
 SELECT singer.Citizenship FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Citizenship ORDER BY COUNT(*) DESC LIMIT 1 
 SELECT singer.Citizenship FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Citizenship ORDER BY COUNT(*) DESC LIMIT 1 
 SELECT DISTINCT singer.Citizens,                 singer.Net_Worth_Millions FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Citizens 
 SELECT singer.Citizenship,        max(singer.Net_Worth_Millions) FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Citizenship 
 SELECT song.Title,        singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID 
 SELECT song.Title,        singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID 
 SELECT DISTINCT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000 
 SELECT DISTINCT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000 
 SELECT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Name HAVING COUNT(*) > 1 
 SELECT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Singer_ID HAVING COUNT(*) > 1 
 SELECT singer.Name,        sum(song.Sales) FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Singer_ID 
 SELECT singer.Name,        sum(song.Sales) FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Name 
 SELECT Name FROM singer WHERE Singer_ID NOT IN     (SELECT Singer_ID      FROM song) 
 SELECT Name FROM singer EXCEPT SELECT singer.Name FROM song JOIN singer ON song.Singer_ID = singer.Singer_ID 
 SELECT singer.Citizenship FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE singer.Birth_Year < 1945 INTERSECT   SELECT singer.Citizenship   FROM singer   JOIN song ON singer.Singer_ID = song.Singer_ID WHERE singer.Birth_Year > 1955 
 SELECT singer.Citizens FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE singer.Birth_Year < 1945 INTERSECT   SELECT singer.Citizens   FROM singer   JOIN song ON singer.Singer_ID = song.Singer_ID WHERE singer.Birth_Year > 1955 
 SELECT count(*) FROM Ref_Feature_Types JOIN Ref_Property_Types ON Ref_Feature_Types.feature_type_code = Ref_Property_Types.property_type_code JOIN Other_Available_Features ON Other_Available_Features.feature_id = Other_Available_Features.feature_id JOIN Properties ON Properties.property_id = Other_Available_Features.property_id 
 SELECT Ref_Feature_Types.feature_type_name FROM Ref_Feature_Types JOIN Other_Available_Features ON Other_Available_Features.feature_id = Other_Available_Features.feature_id JOIN Properties ON Other_Available_Features.property_id = Properties.property_id WHERE Other_Available_Features.feature_name = "AirCon" 
 SELECT Ref_Property_Types.property_type_description FROM Ref_Feature_Types JOIN Other_Available_Features ON Other_Available_Features.feature_id = Other_Available_Features.feature_id JOIN Properties ON Other_Available_Features.property_id = Properties.property_id WHERE Other_Available_Features.property_type_code = "House" 
 SELECT Properties.property_name FROM Ref_Feature_Types JOIN Other_Available_Features ON Other_Available_Features.feature_id = Other_Available_Features.feature_id JOIN Properties ON Other_Available_Features.property_id = Properties.property_id WHERE Properties.room_count > 1   OR Ref_Feature_Types.feature_type_name = "House"   OR Ref_Feature_Types.feature_type_name = "Apartment" 
