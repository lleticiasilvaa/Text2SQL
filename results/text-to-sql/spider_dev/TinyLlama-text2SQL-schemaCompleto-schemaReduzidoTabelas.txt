SELECT count(DISTINCT singer.Name) FROM singer 
SELECT count(*) FROM singer 
SELECT Name,        Country,        Age FROM singer ORDER BY Age 
SELECT Name,        Country,        Age FROM singer ORDER BY Age DESC 
SELECT avg(Age),        min(Age),        max(Age) FROM singer WHERE Country = 'France' 
SELECT avg(Age),        min(Age),        max(Age) FROM singer WHERE Country = 'France' 
SELECT singer.Song_Name,        singer.Song_release_year FROM singer JOIN singer ON singer.Singer_ID = singer.Singer_ID ORDER BY singer.Age ASC LIMIT 1 
SELECT singer.Song_Name,        singer.Song_release_year FROM singer JOIN singer ON singer.Singer_ID = singer.Singer_ID WHERE singer.Is_male = 1 ORDER BY singer.Age LIMIT 1 
SELECT DISTINCT Country FROM singer WHERE Age > 20 
SELECT DISTINCT Country FROM singer WHERE Age > 20 
SELECT Country,        COUNT(*) FROM singer GROUP BY Country 
SELECT Country,        COUNT(*) FROM singer GROUP BY Country 
SELECT Song_Name FROM singer WHERE Age >     (SELECT avg(Age)      FROM singer) 
SELECT Song_Name FROM singer WHERE Age >     (SELECT avg(Age)      FROM singer) 
SELECT LOCATION,        name FROM stadium WHERE capacity BETWEEN 5000 AND 10000 
SELECT LOCATION,        name FROM stadium WHERE capacity BETWEEN 5000 AND 10000 
SELECT max(capacity),        avg(capacity) FROM stadium 
SELECT avg(capacity),        max(capacity) FROM stadium 
SELECT stadium.name,        stadium.capacity FROM stadium JOIN stadium_attendance ON stadium.stadium_id = stadium_attendance.stadium_id ORDER BY stadium_attendance.average_attendance DESC LIMIT 1 
SELECT stadium.name,        stadium.capacity FROM stadium JOIN stadium_attendance ON stadium.stadium_id = stadium_attendance.stadium_id ORDER BY stadium_attendance.attendance_count DESC LIMIT 1 
SELECT count(*) FROM concert WHERE YEAR = 2014   OR YEAR = 2015 
SELECT count(*) FROM concert WHERE YEAR = 2014   OR YEAR = 2015 
SELECT stadium.name,        count(*) FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id GROUP BY stadium.stadium_id 
SELECT stadium.name,        count(*) FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id GROUP BY stadium.stadium_id 
SELECT stadium.name,        stadium.capacity FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE YEAR = 2014   OR YEAR > 2014 
SELECT stadium.name,        stadium.capacity FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year > 2013 
SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1 
SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1 
SELECT stadium.Name FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE stadium.Name NOT IN     (SELECT stadium.Name      FROM stadium      JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID) 
SELECT name FROM stadium WHERE stadium_id NOT IN     (SELECT stadium_id      FROM concert) 
SELECT Country FROM singer WHERE Age > 40 INTERSECT   SELECT Country   FROM singer WHERE Age < 30 
SELECT stadium.Name FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE stadium.capacity > 1000 EXCEPT SELECT stadium.Name FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.year = 2014 
SELECT stadium.Name FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE stadium.capacity!=     (SELECT max(capacity)      FROM stadium      WHERE year = 2014) 
SELECT concert_Name,        count(*) FROM singer_in_concert GROUP BY concert_Name 
SELECT concert_Name,        Theme,        COUNT(*) FROM singer_in_concert GROUP BY concert_Name 
SELECT singer.Name,        count(*) FROM singer_in_concert JOIN singer ON singer_in_concert.Singer_ID = singer.Singer_ID GROUP BY singer.Singer_ID 
SELECT singer.Name,        count(*) FROM singer_in_concert JOIN singer ON singer_in_concert.Singer_ID = singer.Singer_ID GROUP BY singer.Name 
SELECT singer.Name FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID WHERE singer_in_concert.Year = 2014 
SELECT singer.Name FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID WHERE singer_in_concert.concert_release_year = 2014 
SELECT singer.Name,        singer.Country FROM singer JOIN singer ON singer.Singer_ID = singer.Singer_ID WHERE singer.Song_Name = 'Hey' 
SELECT singer.Name,        singer.Country FROM singer JOIN singer ON singer.Singer_ID = singer.Singer_ID WHERE singer.Song_Name LIKE '%Hey%' 
SELECT stadium.name,        stadium.location FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year = 2014 INTERSECT   SELECT stadium.name,          stadium.location   FROM stadium   JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year = 2015 
SELECT stadium.name,        stadium.location FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year = 2014 INTERSECT   SELECT stadium.name,          stadium.location   FROM stadium   JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year = 2015 
SELECT count(*) FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE stadium.highest =     (SELECT max(highest)      FROM stadium) 
SELECT count(*) FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE stadium.capacity =     (SELECT max(capacity)      FROM stadium) 
SELECT count(*) FROM Pets WHERE weight > 10 
SELECT count(*) FROM Pets WHERE weight > 10 
SELECT min(weight) FROM Pets WHERE pet_age =     (SELECT min(pet_age)      FROM Pets) 
SELECT weight FROM Pets ORDER BY pet_age ASC LIMIT 1 
SELECT max(weight),        pettype FROM Pets GROUP BY pettype 
SELECT max(weight),        pettype FROM Pets GROUP BY pettype 
SELECT count(*) FROM Has_pet JOIN student ON has_pet.stuid = student.stuid WHERE student.age > 20 
SELECT count(*) FROM Has_pet JOIN student ON has_pet.stuid = student.stuid WHERE student.age > 20 
SELECT count(*) FROM Has_pet JOIN Pets ON Has_pet.PetID = Pets.PetID JOIN Student ON Has_pet.StuID = Student.StuID WHERE Student.sex = 'F'   AND Pets.pet_type = 'Dog' 
SELECT count(*) FROM Has_pet JOIN Pets ON Has_pet.PetID = Pets.PetID JOIN Student ON Has_pet.StuID = Student.StuID WHERE Student.sex = 'F' 
SELECT count(DISTINCT pet_type) FROM Pets 
SELECT count(DISTINCT pettype) FROM Pets 
SELECT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid WHERE has_pet.pettype = 'Cat'   OR has_pet.pettype = 'Dog' 
SELECT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat'   OR pets.pettype = 'dog' 
SELECT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat' INTERSECT   SELECT student.fname   FROM student   JOIN has_pet ON student.stuid = has_pet.stuid   JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'dog' 
SELECT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat' INTERSECT   SELECT student.fname   FROM student   JOIN has_pet ON student.stuid = has_pet.stuid   JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'dog' 
SELECT major,        age FROM student EXCEPT SELECT student.major,        student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'Cat' 
SELECT major,        age FROM student EXCEPT SELECT student.major,        student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'Cat' 
SELECT StuID FROM Student WHERE StuID NOT IN     (SELECT StuID      FROM Has_pet      WHERE PetType = "Cat") 
SELECT StuID FROM Student WHERE StuID NOT IN     (SELECT StuID      FROM Has_pet      WHERE PetType = 'Cat') 
SELECT student.fname,        student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid WHERE has_pet.pettype = 'Dog' EXCEPT SELECT student.fname,        student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid WHERE has_pet.pettype = 'Cat' 
SELECT DISTINCT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'Dog' EXCEPT SELECT DISTINCT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'Cat' 
SELECT pet_type,        weight FROM Pets ORDER BY pet_age LIMIT 1 
SELECT pet_type FROM Pets ORDER BY pet_age LIMIT 1 
SELECT pet_age,        weight FROM Pets WHERE pet_age > 1 
SELECT pet_age,        weight FROM Pets WHERE pet_age > 1 
SELECT avg(pet_age),        max(pet_age) FROM Pets GROUP BY pet_type 
SELECT avg(pet_age),        max(pet_age) FROM Pets GROUP BY pet_type 
SELECT avg(weight),        pettype FROM Pets GROUP BY pettype 
SELECT avg(weight),        pettype FROM Pets GROUP BY pettype 
SELECT student.fname,        student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid 
SELECT DISTINCT student.fname,                 student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid 
SELECT has_pet.petid FROM has_pet JOIN student ON has_pet.stuid = student.stuid WHERE student.lname = 'Smith' 
SELECT has_pet.petid FROM has_pet JOIN student ON has_pet.stuid = student.stuid WHERE student.lname = 'Smith' 
SELECT count(*),        student.StuID FROM has_pet JOIN student ON has_pet.StuID = student.StuID GROUP BY student.StuID 
SELECT student.StuID,        count(*) FROM has_pet JOIN student ON has_pet.StuID = student.StuID GROUP BY has_pet.StuID 
SELECT student.fname,        student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY student.stuid HAVING count(*) > 1 
SELECT student.fname,        student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY student.stuid HAVING count(*) > 1 
SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pet_age = 3   AND pets.pettype = "Cat"   AND has_pet.stuid = student.stuid 
SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = "Cat"   AND pets.pet_age = 3 
SELECT avg(age) FROM student WHERE StuID NOT IN     (SELECT StuID      FROM Has_pet) 
SELECT avg(age) FROM student WHERE StuID NOT IN     (SELECT StuID      FROM Has_pet) 
SELECT count(ContId) FROM continents 
SELECT count(*) FROM continents 
SELECT continent.Continent,        continents.Continent,        count(*) FROM continents JOIN countries ON continents.ContId = countries.ContId GROUP BY continents.Continent 
SELECT continent.ContId,        continent.Continent,        count(*) FROM continents JOIN countries ON continents.ContId = countries.ContId GROUP BY continent.ContId 
SELECT count(*) FROM countries 
SELECT count(*) FROM countries 
SELECT car_makers.Maker,        count(*),        car_makers.Id FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id GROUP BY car_makers.Maker 
SELECT car_makers.FullName,        car_makers.Id,        count(*) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id GROUP BY car_makers.Id 
SELECT car_names.Model FROM cars_data JOIN car_names ON cars_data.MakeId = car_names.MakeId ORDER BY car_names.Horsepower LIMIT 1 
SELECT car_names.Model FROM cars_data JOIN car_names ON cars_data.MakeId = car_names.MakeId ORDER BY Horsepower LIMIT 1 
SELECT car_names.Model FROM cars_data JOIN car_names ON cars_data.MakeId = car_names.MakeId WHERE cars_data.Weight <     (SELECT avg(Weight)      FROM cars_data) 
SELECT car_names.Model FROM cars_data JOIN car_names ON cars_data.MakeId = car_names.MakeId WHERE cars_data.Weight <     (SELECT avg(Weight)      FROM cars_data) 
SELECT car_makers.Maker FROM model_list JOIN car_names ON model_list.Model = car_names.Make JOIN cars_data ON model_list.Model = cars_data.MakeId WHERE cars_data.Year = 1970 
SELECT DISTINCT car_makers.Maker FROM model_list JOIN car_names ON model_list.Model = car_names.Make JOIN cars_data ON model_list.Model = cars_data.MakeId WHERE cars_data.Year = 1970 
SELECT car_names.Make,        car_names.Year FROM cars_data JOIN car_names ON cars_data.MakeId = car_names.MakeId ORDER BY cars_data.Year LIMIT 1 
SELECT car_names.Make,        cars_data.Year FROM cars_data JOIN car_names ON cars_data.MakeId = car_names.MakeId ORDER BY cars_data.Year LIMIT 1 
SELECT DISTINCT model FROM model_list WHERE YEAR > 1980 
SELECT DISTINCT model FROM cars_data WHERE YEAR > 1980 
SELECT countries.Continent,        count(*) FROM countries JOIN car_makers ON countries.Country = car_makers.Country GROUP BY countries.Continent 
SELECT continent,        COUNT(*) FROM car_makers GROUP BY continent 
SELECT country.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.CountryId GROUP BY countries.CountryId ORDER BY count(*) DESC LIMIT 1 
SELECT country.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName ORDER BY count(*) DESC LIMIT 1 
SELECT count(*),        car_makers.Maker FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id GROUP BY car_makers.Maker 
SELECT count(*),        car_makers.maker,        car_makers.fullname FROM model_list JOIN car_makers ON model_list.maker = car_makers.id GROUP BY car_makers.maker 
SELECT Accelerate FROM cars_data WHERE Car_Names.Make = "Amc"   AND Car_Names.Model = "Hornet Sportabout" 
SELECT Accelerate FROM cars_data WHERE Car_names.Make = "Amc"   AND cars_data.Year = 1975   AND cars_data.Horsepower = "Hornet Sportabout" 
SELECT count(*) FROM car_makers WHERE country = "France" 
SELECT count(*) FROM car_makers WHERE country = 'France' 
SELECT count(*) FROM model_list WHERE country = 'USA' 
SELECT count(*) FROM model_list WHERE country = 'United States' 
SELECT avg(cars_data.mpg) FROM cars_data JOIN cars_data ON cars_data.id = cars_data_id WHERE cars_data.Cylinders = 4 
SELECT avg(MPG) FROM cars_data WHERE Cylinders = 4 
SELECT min(Weight) FROM cars_data WHERE Cylinders = 8   AND YEAR = 1974 
SELECT min(Weight) FROM cars_data WHERE Cylinders = 8   AND YEAR = 1974 
SELECT Maker,        Model FROM model_list 
SELECT Maker,        Model FROM model_list 
SELECT countries.CountryName,        countries.CountryId FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING count(*) >= 1 
SELECT country.CountryName,        countries.CountryId FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING count(*) >= 1 
SELECT count(*) FROM cars_data WHERE Horsepower > 150 
SELECT count(*) FROM cars_data WHERE Horsepower > 150 
SELECT avg(Weight) FROM cars_data 
SELECT avg(Weight),        YEAR FROM cars_data GROUP BY YEAR 
SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING count(*) >= 3 
SELECT country.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE countries.Continent = 'Europe' GROUP BY countries.CountryId HAVING count(*) >= 3 
SELECT max(Horsepower),        car_names.Make FROM cars_data JOIN car_names ON cars_data.Make = car_names.Make GROUP BY car_names.Make HAVING CYLINDERS = 3 
SELECT max(cars_data.Horsepower),        car_names.Make FROM cars_data JOIN car_names ON cars_data.Make = car_names.Make WHERE cars_data.Cylinders = 3 
SELECT car_names.Make FROM cars_data JOIN car_names ON cars_data.MakeId = car_names.MakeId WHERE cars_data.MPG =     (SELECT MAX (MPG)      FROM cars_data) 
SELECT car_names.Model FROM cars_data JOIN car_names ON cars_data.MakeId = car_names.MakeId ORDER BY MPG DESC LIMIT 1 
SELECT avg(Horsepower) FROM cars_data WHERE YEAR < 1980 
SELECT avg(Horsepower) FROM cars_data WHERE YEAR < 1980 
SELECT avg(Edispl) FROM cars_data WHERE Make = "Volvo" 
SELECT avg(Edispl) FROM cars_data WHERE Make = "Volvo" 
SELECT max(Accelerate),        Cylinders FROM cars_data GROUP BY Cylinders 
SELECT max(Accelerate) FROM cars_data 
SELECT Model FROM car_names GROUP BY Model ORDER BY count(*) DESC LIMIT 1 
SELECT Model FROM car_names GROUP BY Model ORDER BY count(*) DESC LIMIT 1 
SELECT count(*) FROM cars_data WHERE Cylinders > 4 
SELECT count(*) FROM cars_data WHERE Cylinders > 4 
SELECT count(*) FROM cars_data WHERE YEAR = 1980 
SELECT count(*) FROM cars_data WHERE YEAR = 1980 
SELECT count(*) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.FullName = "American Motor Company" 
SELECT count(*) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = "American Motor Company" 
SELECT car_makers.Maker,        model_list.ModelId FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id GROUP BY car_makers.Maker HAVING count(*) > 3 
SELECT car_makers.Maker,        model_list.ModelId FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id GROUP BY car_makers.Maker HAVING count(*) > 3 
SELECT DISTINCT car_makers.FullName FROM cars_data JOIN car_makers ON cars_data.Maker = car_makers.Id WHERE car_makers.FullName = "General Motors"   OR cars_data.Weight > 3500 
SELECT DISTINCT cars_data.Model FROM cars_data JOIN car_makers ON cars_data.Maker = car_makers.Maker WHERE car_makers.FullName = "General Motors"   OR cars_data.Weight > 3500 
SELECT YEAR FROM cars_data WHERE Weight BETWEEN 3000 AND 4000 
SELECT DISTINCT YEAR FROM cars_data WHERE Weight < 4000 INTERSECT   SELECT DISTINCT YEAR   FROM cars_data WHERE Weight > 3000 
SELECT Horsepower FROM cars_data ORDER BY Accelerate DESC LIMIT 1 
SELECT Horsepower FROM cars_data ORDER BY Accelerate DESC LIMIT 1 
SELECT Cylinders FROM cars_data WHERE Weight =     (SELECT MIN (Weight)      FROM cars_data      WHERE Accelerate =          (SELECT MIN (Accelerate)           FROM cars_data))   AND car_names.Make = "Volvo" 
SELECT Cylinders FROM cars_data WHERE Year = 2000   AND Car_names.Make = "Volvo" ORDER BY Accelerate LIMIT 1 
SELECT count(*) FROM cars_data WHERE accelerate >     (SELECT max(accelerate)      FROM cars_data) 
SELECT count(*) FROM cars_data WHERE Accelerate >     (SELECT max(Accelerate)      FROM cars_data) 
SELECT count(*) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId GROUP BY car_makers.Country HAVING count(*) > 2 
SELECT count(*) FROM car_makers WHERE id > 2 
SELECT count(*) FROM cars_data WHERE Cylinders > 6 
SELECT count(*) FROM cars_data WHERE Cylinders > 4 
SELECT cars_data.Make FROM cars_data JOIN car_names ON cars_data.Make = car_names.Make WHERE car_names.Make = "Chevrolet"   AND car_names.Cylinders = 4   AND cars_data.Horsepower =     (SELECT max(Horsepower)      FROM cars_data) 
SELECT cars_data.Make FROM cars_data JOIN car_names ON cars_data.Make = car_names.Make WHERE car_names.Make = "Chevrolet"   AND car_names.MakeId = 4 GROUP BY cars_data.Make ORDER BY sum(cars_data.Horsepower) DESC LIMIT 1 
SELECT car_names.MakeId,        car_names.Model FROM cars_data JOIN car_names ON cars_data.MakeId = car_names.MakeId WHERE cars_data.Horsepower >     (SELECT min(Horsepower)      FROM cars_data) EXCEPT SELECT car_names.MakeId,        car_names.Model FROM cars_data JOIN car_names ON cars_data.MakeId = car_names.MakeId WHERE cars_data.Horsepower <     (SELECT max(Horsepower)      FROM cars_data) 
SELECT car_names.MakeId,        car_names.Model FROM cars_data JOIN car_names ON cars_data.MakeId = car_names.MakeId WHERE cars_data.Horsepower < 4 
SELECT max(cars_data.MPG) FROM cars_data JOIN car_make ON cars_data.Make = car_make.Make WHERE cars_data.Cylinders = 8   AND cars_data.Year < 1980 
SELECT max(cars_data.MPG) FROM cars_data JOIN car_make ON cars_data.Make = car_make.Make WHERE cars_data.Cylinders = 8   AND cars_data.Year < 1980 
SELECT model FROM model_list WHERE weight < 3500 EXCEPT SELECT model FROM car_names WHERE Make = 'Ford Motor Company' 
SELECT DISTINCT model_list.model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.modelid WHERE cars_data.Accelerate < 3500   AND model_list.Maker!= "Ford Motor Company" 
SELECT country.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.countryid WHERE countries.countryid =     (SELECT countryid      FROM countries      EXCEPT      SELECT countryid      FROM car_makers) 
SELECT CountryName FROM countries WHERE CountryId NOT IN     (SELECT CountryId      FROM car_makers) 
SELECT car_makers.id,        car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id HAVING count(*) >= 2 INTERSECT SELECT car_makers.id,        car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id HAVING count(*) > 3 
SELECT car_makers.id,        car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id HAVING count(*) >= 2   AND count(*) > 3 
SELECT country.CountryId,        countries.CountryName FROM countries JOIN model_list ON countries.CountryId = model_list.Maker WHERE model_list.Model = 'fiat'   OR count(*) > 3 
SELECT countryid,        countryname FROM countries WHERE countryid > 3 UNION SELECT countryid,        countryname FROM car_makers WHERE countryid IN     (SELECT countryid      FROM car_makers      GROUP BY countryid      HAVING count(*) > 3) 
SELECT Country FROM airlines WHERE Airline = "JetBlue Airways" 
SELECT Country FROM airlines WHERE Airline = "Jetblue Airways" 
SELECT Abbreviation FROM airlines WHERE Airline = "JetBlue Airways" 
SELECT Abbreviation FROM airlines WHERE Airline = "Jetblue Airways" 
SELECT Airline,        Abbreviation FROM airlines WHERE Country = "USA" 
SELECT Airline,        Abbreviation FROM airlines WHERE Country = 'USA' 
SELECT AirportCode,        AirportName FROM airports WHERE City = "Anthony" 
SELECT AirportCode,        AirportName FROM airports WHERE City = "Anthony" 
SELECT count(*) FROM airlines 
SELECT count(*) FROM airlines 
SELECT count(*) FROM airports 
SELECT count(*) FROM airports 
SELECT count(*) FROM flights 
SELECT count(*) FROM flights 
SELECT Airline FROM airlines WHERE Abbreviation = 'UAL' 
SELECT Airline FROM airlines WHERE Abbreviation = 'UAL' 
SELECT count(*) FROM airlines WHERE Country = 'USA' 
SELECT count(*) FROM airlines WHERE Country = 'USA' 
SELECT city,        country FROM airports WHERE AirportCode =     (SELECT AirportCode      FROM airports      WHERE Country = "United States") 
SELECT City,        Country FROM airports WHERE AirportCode = "ALT" 
SELECT AirportName FROM airports WHERE AirportCode = 'AKO' 
SELECT AirportName FROM airports WHERE AirportCode = 'AKO' 
SELECT AirportName FROM airports WHERE City = 'Aberdeen' 
SELECT AirportName FROM airports WHERE Country = "United Kingdom"   AND City = "Aberdeen" 
SELECT count(*) FROM flights WHERE DestAirport = 'APG' 
SELECT count(*) FROM flights WHERE DestAirport = 'APG' 
SELECT count(*) FROM flights WHERE DestAirport = "ATO" 
SELECT count(*) FROM flights WHERE DestAirport = "ATO" 
SELECT count(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = "Aberdeen" 
SELECT count(*) FROM flights WHERE DestAirport = "Aberdeen" 
SELECT count(*) FROM flights WHERE DestAirport = "Aberdeen" 
SELECT count(*) FROM flights WHERE DestAirport = "Aberdeen" 
SELECT count(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode JOIN flights ON flights.Airline = 1 JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Aberdeen'   AND airports.City = 'Ashley' 
SELECT count(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = "Aberdeen"   AND airports.AirportName = "Ashley" 
SELECT count(*) FROM flights JOIN airlines ON flights.Airline = airlines.uid WHERE airlines.Airline = 'JetBlue Airways' 
SELECT count(*) FROM flights JOIN airlines ON flights.Airline = airlines.uid WHERE airlines.Airline = "JetBlue Airways" 
SELECT count(*) FROM flights JOIN airlines ON flights.Airline = airlines.uid WHERE airlines.Airline = 'United Airlines'   AND airlines.Country = 'United States'   AND airlines.Abbreviation = 'ASY' 
SELECT count(*) FROM flights JOIN airlines ON flights.Airline = airlines.uid WHERE airlines.Airline = "United Airlines"   AND airlines.Country = "United States"   AND flights.DestAirport = "ASY" 
SELECT count(*) FROM flights JOIN airlines ON flights.Airline = airlines.uid WHERE airlines.Airline = 'United Airlines'   AND airlines.Country = 'United States'   AND airlines.Abbreviation = 'AHD' 
SELECT count(*) FROM flights JOIN airlines ON flights.Airline = airlines.uid WHERE airlines.Airline = "United Airlines"   AND airlines.Country = "United States"   AND flights.DestAirport = "AHD" 
SELECT count(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode JOIN airlines ON airlines.uid = flights.Airline WHERE airports.City = 'Aberdeen' 
SELECT count(*) FROM flights JOIN airlines ON flights.Airline = airlines.uid JOIN airports ON airports.AirportCode = flights.DestAirport WHERE airlines.Airline = "United Airlines"   AND airports.City = "Aberdeen" 
SELECT airports.City FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode GROUP BY airports.City ORDER BY count(*) DESC LIMIT 1 
SELECT airports.City FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport GROUP BY airports.City ORDER BY count(*) DESC LIMIT 1 
SELECT airports.City FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport GROUP BY airports.City ORDER BY count(*) DESC LIMIT 1 
SELECT airports.City FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport GROUP BY airports.City ORDER BY count(*) DESC LIMIT 1 
SELECT airports.AirportCode FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport GROUP BY airports.AirportCode ORDER BY count(*) DESC LIMIT 1 
SELECT airports.AirportCode FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode GROUP BY airports.AirportCode ORDER BY count(*) DESC LIMIT 1 
SELECT airports.AirportCode FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport GROUP BY airports.AirportCode ORDER BY count(*) ASC LIMIT 1 
SELECT airports.AirportCode FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode GROUP BY airports.AirportCode ORDER BY count(*) LIMIT 1 
SELECT Airline FROM flights GROUP BY Airline ORDER BY count(*) DESC LIMIT 1 
SELECT Airline FROM flights GROUP BY Airline ORDER BY count(*) DESC LIMIT 1 
SELECT Abbreviation,        Country FROM airlines GROUP BY Abbreviation ORDER BY count(*) ASC LIMIT 1 
SELECT Abbreviation,        Country FROM airlines ORDER BY count(*) ASC LIMIT 1 
SELECT flights.SourceAirport FROM airlines JOIN flights ON airlines.uid = flights.Airline WHERE airlines.Country = 'United States'   AND flights.DestAirport = 'AHD' 
SELECT flights.SourceAirport FROM airlines JOIN flights ON airlines.uid = flights.Airline WHERE airlines.Country = "United States"   AND flights.SourceAirport = "AHD" 
SELECT flights.Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline WHERE airports.city = 'AHD' 
SELECT flights.Airline FROM flights JOIN airlines ON flights.Airline = airlines.uid WHERE airlines.Country = "United States"   AND airlines.Airport = "AHD" 
SELECT flights.Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline WHERE airlines.Country = 'United States'   AND flights.SourceAirport = 'APG'   AND flights.SourceAirport = 'CVO' 
SELECT airlines.Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline WHERE flights.SourceAirport = "APG" INTERSECT   SELECT airlines.Airline   FROM airlines   JOIN flights ON airlines.uid = flights.Airline WHERE flights.SourceAirport = "CVO" 
SELECT flights.Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline WHERE airports.city = 'CVO' EXCEPT SELECT flights.Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline WHERE airports.city = 'APG' 
SELECT airlines.Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline WHERE flights.DestAirport!= 'APG' INTERSECT   SELECT airlines.Airline   FROM airlines   JOIN flights ON airlines.uid = flights.Airline WHERE flights.SourceAirport = 'CVO' 
SELECT Airline FROM flights GROUP BY Airline HAVING count(*) >= 10 
SELECT Airline FROM flights GROUP BY Airline HAVING count(*) >= 10 
SELECT Airline FROM flights GROUP BY Airline HAVING count(*) < 200 
SELECT Airline FROM flights GROUP BY Airline HAVING count(*) < 200 
SELECT flights.FlightNo FROM airlines JOIN flights ON airlines.uid = flights.Airline WHERE airlines.Airline = "United Airlines" 
SELECT flights.flightno FROM airlines JOIN flights ON airlines.uid = flights.Airline WHERE airlines.Airline = "United Airlines" 
SELECT flights.FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportId WHERE airports.city = "APG" 
SELECT flights.FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.airport_id WHERE airports.city = "APG" 
SELECT flights.FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportId WHERE airports.city = "APG" 
SELECT flights.FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.airport_id WHERE airports.city = "APG" 
SELECT flights.FlightNo FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport WHERE airports.City = "Aberdeen" 
SELECT flights.FlightNo FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport WHERE airports.City = "Aberdeen" 
SELECT flights.FlightNo FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport WHERE airports.City = "Aberdeen" 
SELECT flights.FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = "Aberdeen" 
SELECT count(*) FROM flights WHERE DestAirport = "Aberdeen"   OR DestAirport = "Abilene" 
SELECT count(*) FROM flights WHERE DestAirport = "Aberdeen"   OR DestAirport = "Abilene" 
SELECT AirportName FROM airports WHERE AirportCode NOT IN     (SELECT DestAirport      FROM flights) 
SELECT AirportCode FROM airports WHERE AirportName!=     (SELECT AirportName      FROM flights) 
SELECT count(*) FROM employee 
SELECT count(*) FROM employee 
SELECT Name FROM employee ORDER BY Age ASC 
SELECT Name FROM employee ORDER BY Age ASC 
SELECT count(*),        city FROM employee GROUP BY city 
SELECT count(*),        city FROM employee GROUP BY city 
SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING count(*) > 1 
SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING count(*) > 1 
SELECT count(*),        LOCATION FROM shop GROUP BY LOCATION 
SELECT count(*),        LOCATION FROM shop GROUP BY LOCATION 
SELECT manager_name,        district FROM shop ORDER BY number_products DESC LIMIT 1 
SELECT manager_name,        district FROM shop ORDER BY number_products DESC LIMIT 1 
SELECT min(number_products),        max(number_products) FROM shop 
SELECT min(number_products),        max(number_products) FROM shop 
SELECT name,        LOCATION,        district FROM shop ORDER BY number_products DESC 
SELECT name,        LOCATION,        district FROM shop ORDER BY number_products DESC 
SELECT name FROM shop WHERE number_products >     (SELECT avg(number_products)      FROM shop) 
SELECT name FROM shop WHERE number_products >     (SELECT avg(number_products)      FROM shop) 
SELECT employee.Name FROM employee JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID GROUP BY employee.Name ORDER BY count(*) DESC LIMIT 1 
SELECT employee.Name FROM employee JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID GROUP BY employee.Name ORDER BY count(*) DESC LIMIT 1 
SELECT employee.Name FROM employee JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID ORDER BY evaluation.Bonus DESC LIMIT 1 
SELECT employee.Name FROM employee JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID ORDER BY evaluation.Bonus DESC LIMIT 1 
SELECT Name FROM employee WHERE Employee_ID NOT IN     (SELECT Employee_ID      FROM evaluation) 
SELECT Name FROM employee WHERE Employee_ID NOT IN     (SELECT Employee_ID      FROM evaluation) 
SELECT shop.name FROM hiring JOIN shop ON hiring.shop_id = shop.shop_id GROUP BY hiring.shop_id ORDER BY count(*) DESC LIMIT 1 
SELECT shop.name FROM hiring JOIN shop ON hiring.shop_id = shop.shop_id GROUP BY hiring.shop_id ORDER BY count(*) DESC LIMIT 1 
SELECT name FROM shop WHERE shop_id NOT IN     (SELECT shop_id      FROM hiring) 
SELECT Name FROM shop WHERE Shop_ID NOT IN     (SELECT Shop_ID      FROM hiring) 
SELECT count(*),        shop.name FROM hiring JOIN shop ON hiring.shop_id = shop.shop_id GROUP BY shop.name 
SELECT count(*),        shop.name FROM hiring JOIN shop ON hiring.shop_id = shop.shop_id GROUP BY shop.name 
SELECT sum(bonus) FROM evaluation 
SELECT sum(bonus) FROM evaluation 
SELECT * FROM hiring 
SELECT * FROM hiring 
SELECT DISTINCT district FROM shop WHERE number_products < 3000 INTERSECT   SELECT DISTINCT district   FROM shop WHERE number_products > 10000 
SELECT DISTINCT district FROM shop WHERE number_products < 3000 INTERSECT   SELECT DISTINCT district   FROM shop WHERE number_products > 10000 
SELECT count(DISTINCT LOCATION) FROM shop 
SELECT count(DISTINCT LOCATION) FROM shop 
SELECT count(*) FROM Documents 
SELECT count(*) FROM Documents 
SELECT Document_ID,        Document_Name,        Document_Description FROM Documents 
SELECT Document_ID,        Document_Name,        Document_Description FROM Documents 
SELECT Document_Name,        Template_ID FROM Documents WHERE Document_Description LIKE '%w%' 
SELECT Documents.document_name,        Documents.template_id FROM Documents JOIN Documents ON Documents.document_id = Documents.document_id WHERE Documents.document_description LIKE "%w%" 
SELECT Documents.document_id,        Documents.template_id,        Documents.document_description FROM Documents JOIN Documents ON Documents.document_id = Documents.document_id WHERE Documents.document_name = "Robbin CV" 
SELECT Documents.document_id,        Documents.template_id,        Documents.document_description FROM Documents JOIN Documents ON Documents.document_id = Documents.document_id WHERE Documents.document_name = "Robbin CV" 
SELECT count(DISTINCT Template_ID) FROM Documents 
SELECT count(DISTINCT Template_ID) FROM Documents 
SELECT count(*) FROM Documents WHERE Template_Type_Code = 'PPT' 
SELECT count(*) FROM Templates WHERE Template_Type_Code = 'PPT' 
SELECT Document_Template_ID,        count(*) FROM Documents GROUP BY Document_Template_ID 
SELECT count(*),        document_template_id FROM Documents GROUP BY document_template_id 
SELECT template_id,        template_type_code FROM Templates ORDER BY count(*) DESC LIMIT 1 
SELECT template_id,        template_type_code FROM templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1 
SELECT DISTINCT Document_Template_ID FROM Documents GROUP BY Document_Template_ID HAVING count(*) > 1 
SELECT DISTINCT Document_Template_ID FROM Documents GROUP BY Document_Template_ID HAVING count(*) > 1 
SELECT Template_ID FROM Templates EXCEPT SELECT Template_ID FROM Documents 
SELECT Template_ID FROM Templates EXCEPT SELECT Template_ID FROM Documents 
SELECT count(*) FROM Templates 
SELECT count(*) FROM Templates 
SELECT Template_ID,        Version_Number,        Template_Type_Code FROM Templates 
SELECT Template_ID,        Version_Number,        Template_Type_Code FROM Templates 
SELECT DISTINCT Template_Type_Code FROM Templates 
SELECT DISTINCT Template_Type_Code FROM Templates 
SELECT Template_ID FROM Templates WHERE Template_Type_Code = 'PP'   OR Template_Type_Code = 'PPT' 
SELECT Template_ID FROM Templates WHERE Template_Type_Code = 'PP'   OR Template_Type_Code = 'PPT' 
SELECT count(*) FROM Templates WHERE Template_Type_Code = "CV" 
SELECT count(*) FROM Templates WHERE Template_Type_Code = "CV" 
SELECT Template_Type_Code,        Version_Number FROM Templates WHERE Version_Number > 5 
SELECT Template_Type_Code,        Version_Number FROM Templates WHERE Version_Number > 5 
SELECT Template_Type_Code,        count(*) FROM Templates GROUP BY Template_Type_Code 
SELECT count(*),        Template_Type_Code FROM Templates GROUP BY Template_Type_Code 
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY count(*) DESC LIMIT 1 
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY count(*) DESC LIMIT 1 
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING count(*) < 3 
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING count(*) < 3 
SELECT min(version_number),        template_type_code FROM Templates GROUP BY template_type_code 
SELECT min(version_number),        template_type_code FROM Templates GROUP BY template_type_code 
SELECT Templates.Template_Type_Code FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Documents.Document_Name = "Data base" 
SELECT Templates.Template_Type_Code FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Documents.Document_Name = "Data base" 
SELECT Document_Name FROM Documents WHERE Template_Type_Code = 'BK' 
SELECT Document_Name FROM Documents WHERE Document_Type_Code = 'BK' 
SELECT Template_Type_Code,        count(*) FROM Documents GROUP BY Template_Type_Code 
SELECT count(*),        templates.template_type_code FROM templates JOIN document ON templates.template_id = document.template_id GROUP BY templates.template_type_code 
SELECT Document_Type_Code FROM Documents GROUP BY Document_Type_Code ORDER BY count(*) DESC LIMIT 1 
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY count(*) DESC LIMIT 1 
SELECT Template_Type_Code FROM Templates EXCEPT SELECT Template_Type_Code FROM Documents 
SELECT Template_Type_Code FROM Templates EXCEPT SELECT Template_Type_Code FROM Documents 
SELECT Template_Type_Code,        Template_Type_Description FROM Ref_Template_Types 
SELECT Template_Type_Code,        Template_Type_Description FROM Ref_Template_Types 
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = "AD" 
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = "AD" 
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = "Book" 
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = "Book" 
SELECT DISTINCT Ref_Template_Types.template_type_description FROM Documents JOIN Templates ON Documents.template_id = Templates.template_id JOIN Ref_Template_Types ON Templates.template_type_code = Ref_Template_Types.template_type_code WHERE Documents.document_name = "Document" 
SELECT Document_Description FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Documents.Document_Name = "Document 1" 
SELECT Template_ID FROM Templates WHERE Template_Type_Description = "Presentation" 
SELECT Template_ID FROM Templates WHERE Template_Details = 'Presentation' 
SELECT count(*) FROM Paragraphs 
SELECT count(*) FROM Paragraphs 
SELECT count(*) FROM Documents JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id WHERE Documents.document_name = 'Summer Show' 
SELECT count(*) FROM Documents JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id WHERE Documents.document_name = 'Summer Show' 
SELECT Paragraphs.Paragraph_Text FROM Paragraphs JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID WHERE Documents.Document_Name = 'Korea' 
SELECT Other_Details FROM Paragraphs WHERE Paragraph_Text LIKE 'Korea%' 
SELECT Paragraphs.Paragraph_ID,        Paragraphs.Paragraph_Text FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Documents.Document_Name = 'Welcome to NY' 
SELECT Paragraphs.Paragraph_ID,        Paragraphs.Paragraph_Text FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Documents.Document_Name = 'Welcome to NY' 
SELECT Paragraphs.Paragraph_Text FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Documents.Document_Name = "Customer reviews" 
SELECT Paragraphs.Paragraph_Text FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Documents.Document_Name = 'Customer reviews' 
SELECT document_id,        count(*) FROM Paragraphs GROUP BY document_id ORDER BY count(*) 
SELECT document_id,        count(*) FROM Paragraphs GROUP BY document_id ORDER BY count(*) 
SELECT Document_Name,        count(Document_Name),        count(*) FROM Documents GROUP BY Document_Name 
SELECT Document_ID,        Document_Name,        count(*) FROM Documents GROUP BY Document_ID 
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(*) >= 2 
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(*) >= 2 
SELECT Document_ID,        Document_Name FROM Documents GROUP BY Document_Name ORDER BY count(*) DESC LIMIT 1 
SELECT Document_ID,        Document_Name FROM Documents GROUP BY Document_Name ORDER BY count(*) DESC LIMIT 1 
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID ORDER BY count(*) DESC LIMIT 1 
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID ORDER BY count(*) ASC LIMIT 1 
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING count(*) BETWEEN 1 AND 2 
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING count(*) BETWEEN 1 AND 2 
SELECT Document_ID FROM Paragraphs WHERE Paragraph_Text = 'Brazil' INTERSECT   SELECT Document_ID   FROM Paragraphs WHERE Paragraph_Text = 'Ireland' 
SELECT Document_ID FROM Paragraphs WHERE Paragraph_Text = 'Brazil' INTERSECT   SELECT Document_ID   FROM Paragraphs WHERE Paragraph_Text = 'Ireland' 
SELECT count(DISTINCT Name) FROM teacher 
SELECT count(*) FROM teacher 
SELECT Name FROM teacher ORDER BY Age ASC 
SELECT Name FROM teacher ORDER BY Age ASC 
SELECT Age,        Hometown FROM teacher 
SELECT Age,        Hometown FROM teacher 
SELECT Name FROM teacher WHERE Hometown!= "Little Lever Urban District" 
SELECT Name FROM teacher WHERE Hometown!= "Little Lever Urban District" 
SELECT Name FROM teacher WHERE Age = 32   OR Age = 33 
SELECT Name FROM teacher WHERE Age = 32   OR Age = 33 
SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1 
SELECT Name FROM teacher ORDER BY Age ASC LIMIT 1 
SELECT DISTINCT hometown,                 COUNT(*) FROM teacher GROUP BY hometown 
SELECT count(*),        Hometown FROM teacher GROUP BY Hometown 
SELECT DISTINCT hometown FROM teacher GROUP BY hometown ORDER BY count(*) DESC LIMIT 1 
SELECT DISTINCT hometown FROM teacher GROUP BY hometown ORDER BY count(*) DESC LIMIT 1 
SELECT DISTINCT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*) >= 2 
SELECT DISTINCT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*) >= 2 
SELECT teacher.Name,        course.Course FROM course_arrange JOIN course ON course_arrange.Course_ID = course.Course_ID JOIN teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID 
SELECT Name,        Course FROM course JOIN teacher ON course.Teacher_ID = teacher.Teacher_ID 
SELECT teacher.Name,        course.Course FROM course_arrange JOIN course ON course_arrange.Course_ID = course.Course_ID JOIN teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID ORDER BY teacher.Name ASC 
SELECT Name,        Course FROM teacher ORDER BY Name ASC 
SELECT Name FROM course WHERE Course = 'Math' 
SELECT Name FROM teacher WHERE CLASS_CODE = 'MATH' 
SELECT Name,        COUNT(*) FROM course_arrange GROUP BY Name 
SELECT Name,        COUNT(*) FROM course_arrange GROUP BY Name 
SELECT Name FROM teacher WHERE COUNT(*) >= 2 
SELECT Name FROM teacher WHERE COUNT(*) >= 2 
SELECT Name FROM teacher WHERE Teacher_ID NOT IN     (SELECT Teacher_ID      FROM course_arrange) 
SELECT Name FROM teacher WHERE Course_ID NOT IN     (SELECT Course_ID      FROM course_arrange) 
SELECT count(*) FROM visitor WHERE age < 30 
SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership 
SELECT avg(age) FROM visitor WHERE membership_level_code!= "4" 
SELECT name,        level_of_membership FROM visitor WHERE level_of_membership > 4 ORDER BY age 
SELECT museum_id,        name FROM museum ORDER BY num_of_staff DESC LIMIT 1 
SELECT avg(Num_of_Staff) FROM museum WHERE Open_Year < 2009 
SELECT Open_Year,        Num_of_Staff FROM museum WHERE Name = "Plaza Museum" 
SELECT name FROM museum WHERE num_of_staff >     (SELECT min(num_of_staff)      FROM museum      WHERE open_year > 2010) 
SELECT visitor.ID,        visitor.Name,        visitor.Age FROM visit JOIN visitor ON visit.visitor_ID = visitor.ID GROUP BY visit.visitor_ID HAVING count(*) > 1 
SELECT visitor.ID,        visitor.Name,        visitor.Level_of_membership FROM visit JOIN visitor ON visit.visitor_ID = visitor.ID GROUP BY visit.visitor_ID ORDER BY sum(visit.Total_spent) DESC LIMIT 1 
SELECT museum.Museum_ID,        museum.Name FROM visit JOIN museum ON visit.Museum_ID = museum.Museum_ID GROUP BY visit.Museum_ID ORDER BY count(*) DESC LIMIT 1 
SELECT name FROM museum WHERE museum_id NOT IN     (SELECT museum_id      FROM visit) 
SELECT visitor.Name,        visitor.Age FROM visit JOIN visitor ON visit.visitor_ID = visitor.ID GROUP BY visit.visitor_ID ORDER BY count(*) DESC LIMIT 1 
SELECT avg(visit.Num_of_Ticket),        max(visit.Num_of_Ticket) FROM visit GROUP BY visit.Museum_ID 
SELECT sum(visit.Total_spent) FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID WHERE visitor.Level_of_membership = 1 
SELECT visitor.Name FROM museum JOIN visit ON museum.Museum_ID = visit.Museum_ID JOIN visitor ON visit.visitor_ID = visitor.ID WHERE visit.Open_Year < 2009 INTERSECT   SELECT visitor.Name   FROM museum   JOIN visit ON museum.Museum_ID = visit.Museum_ID   JOIN visitor ON visit.visitor_ID = visitor.ID WHERE visit.Open_Year > 2011 
SELECT count(*) FROM visitor WHERE visit_id NOT IN     (SELECT visit_id      FROM visit      WHERE open_year > 2010) 
SELECT count(*) FROM museum WHERE Open_Year > 2013   OR Open_Year < 2008 
SELECT count(*) FROM players 
SELECT count(*) FROM players 
SELECT count(*) FROM matches 
SELECT count(*) FROM matches 
SELECT first_name,        birth_date FROM players WHERE country_code = 'USA' 
SELECT first_name,        birth_date FROM players WHERE country_code = 'USA' 
SELECT avg(loser_age),        avg(winner_age) FROM matches 
SELECT avg(loser_age),        avg(winner_age) FROM matches 
SELECT avg(winner_rank) FROM matches 
SELECT avg(winner_rank) FROM matches 
SELECT max(loser_rank) FROM matches 
SELECT max(loser_rank) FROM matches 
SELECT count(DISTINCT country_code) FROM players 
SELECT count(DISTINCT country_code) FROM players 
SELECT count(DISTINCT loser_name) FROM matches 
SELECT count(DISTINCT loser_name) FROM matches 
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*) > 10 
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*) > 10 
SELECT winner_name FROM matches WHERE winner_id IN     (SELECT winner_id      FROM matches      WHERE YEAR = 2013 INTERSECT        SELECT winner_id        FROM matches WHERE YEAR = 2016) 
SELECT winner_name FROM matches WHERE winner_id IN     (SELECT winner_id      FROM matches      WHERE YEAR = 2013 INTERSECT        SELECT winner_id        FROM matches WHERE YEAR = 2016) 
SELECT count(*) FROM matches WHERE YEAR = 2013   OR YEAR = 2016 
SELECT count(*) FROM matches WHERE YEAR = 2013   OR YEAR = 2016 
SELECT players.country_code,        players.first_name FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_id = 1 INTERSECT   SELECT players.country_code,          players.first_name   FROM players   JOIN matches ON players.player_id = matches.loser_id WHERE matches.tourney_id = 1 
SELECT players.first_name,        players.country_code FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_id = 1 INTERSECT   SELECT players.first_name,          players.country_code   FROM players   JOIN matches ON players.player_id = matches.loser_id WHERE matches.tourney_id = 1 
SELECT players.first_name,        players.country_code FROM players JOIN player_age ON players.player_id = player_age.player_id ORDER BY player_age.age DESC LIMIT 1 
SELECT players.first_name,        players.country_code FROM players JOIN player_age ON players.player_id = player_age.player_id ORDER BY player_age.age DESC LIMIT 1 
SELECT first_name,        last_name FROM players ORDER BY birth_date 
SELECT first_name,        last_name FROM players ORDER BY birth_date 
SELECT first_name,        last_name FROM players WHERE hand = 'L' ORDER BY birth_date 
SELECT first_name,        last_name FROM players WHERE hand = 'L' ORDER BY birth_date 
SELECT players.first_name,        players.country_code FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY rankings.player_id ORDER BY count(*) DESC LIMIT 1 
SELECT players.first_name,        players.country_code FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY rankings.player_id ORDER BY count(*) DESC LIMIT 1 
SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1 
SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1 
SELECT winner_name,        winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1 
SELECT winner_name,        winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1 
SELECT winner_name FROM matches WHERE winner_rank =     (SELECT max(winner_rank)      FROM matches      WHERE tourney_id = "Australian Open") 
SELECT winner_name FROM matches WHERE tourney_id =     (SELECT tourney_id      FROM matches      WHERE tourney_level = "Australian Open") ORDER BY rank_points DESC LIMIT 1 
SELECT loser_name,        winner_name FROM matches ORDER BY minutes DESC LIMIT 1 
SELECT loser_name,        loser_id FROM matches ORDER BY loser_time LIMIT 1 
SELECT avg(ranking),        players.first_name FROM rankings JOIN players ON rankings.player_id = players.player_id GROUP BY players.first_name 
SELECT players.first_name,        avg(rankings.ranking) FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.first_name 
SELECT sum(ranking_points),        players.first_name FROM rankings JOIN players ON rankings.player_id = players.player_id GROUP BY players.first_name 
SELECT players.first_name,        sum(rankings.ranking_points) FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.first_name 
SELECT country_code,        count(*) FROM players GROUP BY country_code 
SELECT country_code,        count(*) FROM players GROUP BY country_code 
SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1 
SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1 
SELECT country_code FROM players GROUP BY country_code HAVING count(*) > 50 
SELECT country_code FROM players GROUP BY country_code HAVING count(*) > 50 
SELECT sum(tours),        ranking_date FROM rankings GROUP BY ranking_date 
SELECT sum(tours),        ranking_date FROM rankings GROUP BY ranking_date 
SELECT count(*),        YEAR FROM matches GROUP BY YEAR 
SELECT count(*),        YEAR FROM matches GROUP BY YEAR 
SELECT winner_name,        winner_rank FROM matches ORDER BY winner_age LIMIT 3 
SELECT loser_name,        loser_rank FROM matches WHERE loser_age =     (SELECT min(loser_age)      FROM matches) 
SELECT count(DISTINCT winner_hand) FROM matches WHERE winner_id IN     (SELECT winner_id      FROM matches      WHERE tourney_level = "WTA Championships") 
SELECT count(*) FROM matches WHERE loser_hand = 'Left'   AND loser_id IN     (SELECT loser_id      FROM matches      WHERE tourney_id = 'WTA Championships') 
SELECT players.first_name,        players.country_code,        players.birth_date FROM matches JOIN players ON matches.loser_id = players.player_id ORDER BY players.rank_points DESC LIMIT 1 
SELECT players.first_name,        players.country_code,        players.birth_date FROM players JOIN matches ON players.player_id = matches.loser_id GROUP BY players.player_id ORDER BY sum(matches.winner_rank_points) DESC LIMIT 1 
SELECT count(*),        hand FROM players GROUP BY hand 
SELECT count(*),        hand FROM players GROUP BY hand 
SELECT count(*) FROM ship WHERE disposition_of_ship = 'Captured' 
SELECT name,        tonnage FROM ship ORDER BY name DESC 
SELECT name,        date,        result FROM battle 
SELECT max(killed),        min(killed),        caused_by_ship_id FROM death GROUP BY caused_by_ship_id 
SELECT avg(injured),        id FROM death GROUP BY id 
SELECT death.id,        death.killed,        death.injured FROM ship JOIN death ON ship.id = death.caused_by_ship_id WHERE ship.tonnage = 't' 
SELECT battle.name,        battle.result FROM battle JOIN battle ON battle.id = battle.id WHERE battle.bulgarian_commander!= 'Boril' 
SELECT battle.id,        battle.name FROM battle JOIN ship ON battle.id = ship.battle_id WHERE ship.ship_type = 'Brig' 
SELECT battle.id,        battle.name FROM battle JOIN death ON battle.id = death.caused_by_ship_id GROUP BY battle.id HAVING sum(death.killed) > 10 
SELECT ship.id,        ship.name FROM ship JOIN death ON ship.id = death.caused_by_ship_id GROUP BY death.caused_by_ship_id ORDER BY sum(death.injured) DESC LIMIT 1 
SELECT DISTINCT name FROM battle WHERE bulgarian_commander = 'Kaloyan'   OR latin_commander = 'Baldwin I' 
SELECT count(DISTINCT result) FROM battle 
SELECT count(*) FROM battle WHERE lost_in_battle!= 0   AND tonnage = '225' 
SELECT battle.name,        battle.date FROM battle JOIN ship ON battle.id = ship.id WHERE ship.name = 'Lettice' INTERSECT   SELECT battle.name,          battle.date   FROM battle   JOIN ship ON battle.id = ship.id WHERE ship.name = 'HMS Atalanta' 
SELECT battle.name,        battle.result,        battle.bulgarian_commander FROM battle JOIN ship ON battle.id = ship.battle_id WHERE battle.name NOT IN     (SELECT battle.name      FROM battle      JOIN ship ON battle.id = ship.battle_id      WHERE ship.location = "English Channel") 
SELECT note FROM death WHERE note LIKE '%East%' 
SELECT * FROM addresses WHERE line_1!= ''   AND line_2!= '' 
SELECT line_1,        line_2 FROM addresses 
SELECT count(*) FROM Courses 
SELECT count(*) FROM Courses 
SELECT course_description FROM Courses WHERE course_name = "Math" 
SELECT course_description FROM Courses WHERE course_name = "Math" 
SELECT zip_postcode FROM addresses WHERE city = "Port Chelsea" 
SELECT zip_postcode FROM addresses WHERE city = "Port Chelsea" 
SELECT department_name,        department_id FROM departments ORDER BY count(*) DESC LIMIT 1 
SELECT department_name,        department_id FROM Degree_Programs GROUP BY department_id ORDER BY count(*) DESC LIMIT 1 
SELECT count(DISTINCT department_id) FROM degree_programs 
SELECT count(DISTINCT department_id) FROM degree_programs 
SELECT count(DISTINCT degree_summary_name) FROM degree_programs 
SELECT count(DISTINCT degree_summary_name) FROM degree_programs 
SELECT count(*) FROM Degree_programs WHERE department_id = 1 
SELECT count(*) FROM Degree_programs JOIN departments ON Degree_programs.department_id = departments.department_id WHERE departments.department_name = "Engineering" 
SELECT section_name,        section_description FROM Sections 
SELECT section_name,        section_description FROM Sections 
SELECT course_name,        course_id FROM Courses GROUP BY course_id HAVING count(*) <= 2 
SELECT course_name,        course_id FROM Courses GROUP BY course_id HAVING count(*) < 2 
SELECT section_name FROM Sections ORDER BY section_name DESC 
SELECT section_name FROM sections ORDER BY section_name 
SELECT semester_name,        student_enrolment_id FROM Student_Enrolment GROUP BY student_enrolment_id ORDER BY count(*) DESC LIMIT 1 
SELECT semester_name,        semester_id FROM Student_enrolment GROUP BY semester_id ORDER BY count(*) DESC LIMIT 1 
SELECT department_description FROM departments WHERE department_name LIKE '%the computer%' 
SELECT department_description FROM departments WHERE department_name LIKE "%computer%" 
SELECT Students.first_name,        Students.middle_name,        Students.last_name,        Student_enrolment.student_id FROM Student_enrolment JOIN Students ON Student_enrolment.student_id = Students.student_id WHERE Student_enrolment.semester_id = 1   AND Student_enrolment.degree_program_id = 2 
SELECT Students.first_name,        Students.middle_name,        Students.last_name,        Student_enrolment.student_id FROM Student_enrolment JOIN Students ON Student_enrolment.student_id = Students.student_id WHERE Student_enrolment.semester_id = 1   AND Student_enrolment.degree_program_id = 2 
SELECT students.first_name,        students.middle_name,        students.last_name FROM student_enrollment JOIN students ON student_enrollment.student_id = students.student_id WHERE student_enrollment.degree_program_id = 1 
SELECT students.first_name,        students.middle_name,        students.last_name FROM student_enrollment JOIN students ON student_enrollment.student_id = students.student_id WHERE student_enrollment.degree_program_id = 1 
SELECT degree_summary_description FROM Degree_Programs GROUP BY degree_summary_description ORDER BY count(*) DESC LIMIT 1 
SELECT degree_summary_name FROM Student_enrolment GROUP BY degree_summary_name ORDER BY count(*) DESC LIMIT 1 
SELECT student_enrolment.degree_program_id,        Degree_Programs.degree_summary_name FROM Student_Enrolment JOIN Degree_Programs ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id GROUP BY Student_Enrolment.degree_program_id ORDER BY count(*) DESC LIMIT 1 
SELECT degree_program_id,        degree_summary_description FROM Degree_Programs ORDER BY count(*) DESC LIMIT 1 
SELECT student_id,        first_name,        middle_name,        last_name,        count(*) FROM Student_enrolment GROUP BY student_id ORDER BY count(*) DESC LIMIT 1 
SELECT students.first_name,        students.middle_name,        students.last_name,        count(*) FROM student_enrollment JOIN students ON student_enrollment.student_id = students.student_id GROUP BY student_enrollment.student_id ORDER BY count(*) DESC LIMIT 1 
SELECT semester_name FROM semesters EXCEPT SELECT semester_name FROM student_enrolment 
SELECT semester_name FROM semesters WHERE semester_id NOT IN     (SELECT semester_id      FROM student_enrolment) 
SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id 
SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id 
SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id GROUP BY Courses.course_name ORDER BY count(*) DESC LIMIT 1 
SELECT Courses.course_name FROM Student_Enrolment_Courses JOIN Courses ON Student_Enrolment_Courses.course_id = Courses.course_id GROUP BY Courses.course_name ORDER BY count(*) DESC LIMIT 1 
SELECT students.last_name FROM students JOIN student_enrollment ON students.student_id = student_enrollment.student_id WHERE students.state_province_county = "North Carolina"   AND student_enrollment.semester_id = 1   AND student_enrollment.degree_program_id = 0 
SELECT last_name FROM Students WHERE state_province_county = "North Carolina"   AND student_id NOT IN     (SELECT student_id      FROM Student_Enrolment      WHERE degree_program_id = 1) 
SELECT transcript_date,        transcript_id FROM Transcript_Contents GROUP BY transcript_id HAVING count(*) >= 2 
SELECT transcript_date,        transcript_id FROM Transcript_Contents GROUP BY transcript_id HAVING count(*) >= 2 
SELECT cell_mobile_number FROM students WHERE first_name = "Timmothy"   AND last_name = "Ward" 
SELECT cell_mobile_number FROM Students WHERE first_name = "Timmothy"   AND last_name = "Ward" 
SELECT first_name,        middle_name,        last_name FROM Students ORDER BY date_first_registered LIMIT 1 
SELECT first_name,        middle_name,        last_name FROM Students ORDER BY date_first_registered LIMIT 1 
SELECT first_name,        middle_name,        last_name FROM Students WHERE date_left <     (SELECT max(date_left)      FROM Students) 
SELECT first_name,        middle_name,        last_name FROM Students ORDER BY date_first_registered LIMIT 1 
SELECT first_name FROM Students WHERE permanent_address_id!= current_address_id 
SELECT first_name FROM students WHERE permanent_address_id!= current_address_id 
SELECT addresses.address_id,        addresses.line_1,        addresses.line_2,        addresses.line_3,        addresses.city,        addresses.zip_postcode,        addresses.state_province_county,        addresses.country FROM addresses JOIN students ON addresses.address_id = students.current_address_id GROUP BY addresses.address_id ORDER BY count(*) DESC LIMIT 1 
SELECT addresses.address_id,        addresses.line_1,        addresses.line_2 FROM addresses JOIN students ON addresses.address_id = students.current_address_id GROUP BY addresses.address_id ORDER BY count(*) DESC LIMIT 1 
SELECT avg(transcript_date) FROM Transcripts 
SELECT avg(transcript_date) FROM Transcripts 
SELECT transcript_date,        other_details FROM transcripts ORDER BY transcript_id LIMIT 1 
SELECT min(transcript_date),        other_details FROM Transcripts GROUP BY other_details 
SELECT count(*) FROM Transcripts WHERE transcript_date > "2015-01-01" 
SELECT count(*) FROM transcripts 
SELECT transcript_date FROM transcripts ORDER BY transcript_date DESC LIMIT 1 
SELECT transcript_date FROM Transcripts WHERE transcript_id =     (SELECT transcript_id      FROM Transcripts      ORDER BY transcript_date DESC      LIMIT 1) 
SELECT count(DISTINCT student_course_id),        transcript_id FROM Transcript_Contents GROUP BY transcript_id 
SELECT max(transcript_contents.enrollment_id),        transcript_contents.course_id FROM transcript_contents JOIN transcripts ON transcript_contents.transcript_id = transcripts.transcript_id GROUP BY transcript_contents.course_id 
SELECT transcript_date,        transcript_id FROM Transcripts GROUP BY transcript_id ORDER BY count(*) ASC LIMIT 1 
SELECT transcript_date,        transcript_id FROM Transcripts GROUP BY transcript_date ORDER BY count(*) DESC LIMIT 1 
SELECT semester_id FROM Student_Enrolment WHERE student_id IN     (SELECT student_id      FROM Student_Enrolment      WHERE degree_program_id IN          (SELECT degree_program_id           FROM Degree_Programs           WHERE degree_summary_description = "Master")      INTERSECT      SELECT student_id      FROM Student_Enrolment      WHERE degree_program_id IN          (SELECT degree_program_id           FROM Degree_Programs           WHERE degree_summary_description = "Bachelor")) 
SELECT semester_id FROM Student_Enrolment WHERE student_id IN     (SELECT student_id      FROM Student_Enrolment      WHERE degree_program_id IN          (SELECT degree_program_id           FROM Degree_Programs           WHERE degree_summary_description = "Masters")      INTERSECT      SELECT student_id      FROM Student_Enrolment      WHERE degree_program_id IN          (SELECT degree_program_id           FROM Degree_Programs           WHERE degree_summary_description = "Bachelors")) 
SELECT count(DISTINCT current_address_id) FROM Students 
SELECT DISTINCT current_address_id FROM Students 
SELECT other_student_details FROM Students ORDER BY other_student_details DESC 
SELECT other_student_details FROM Students ORDER BY last_name 
SELECT section_description FROM Sections WHERE course_id =     (SELECT course_id      FROM sections      WHERE section_name = "h") 
SELECT section_description FROM sections WHERE section_name = "h" 
SELECT first_name FROM Students WHERE country = 'Haiti'   OR cell_mobile_number = '09700166582' 
SELECT first_name FROM Students WHERE permanent_address_id = 1   AND cell_mobile_number = "09700166582" 
SELECT Title FROM Cartoon ORDER BY Title 
SELECT Title FROM Cartoon ORDER BY Title ASC 
SELECT directed_by FROM Cartoon WHERE directed_by = "Ben Jones" 
SELECT DISTINCT directed_by FROM Cartoon WHERE directed_by = "Ben Jones" 
SELECT count(*) FROM Cartoon JOIN Written_by ON Cartoon.id = Written_by.id WHERE Written_by.name = "Joseph Kuhr" 
SELECT count(*) FROM Cartoon WHERE written_by = "Joseph Kuhr" 
SELECT Title,        Directed_by FROM Cartoon ORDER BY Original_air_date 
SELECT DISTINCT cartoon.title,                 cartoon.directed_by FROM cartoon JOIN production ON cartoon.id = production.cartoon_id ORDER BY production.original_air_date 
SELECT Title FROM Cartoon WHERE directed_by = "Ben Jones"   OR directed_by = "Brandon Vietti" 
SELECT DISTINCT Title FROM Cartoon WHERE directed_by = "Ben Jones"   OR directed_by = "Brandon Vietti" 
SELECT Country,        count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1 
SELECT Country,        count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1 
SELECT count(DISTINCT series_name),        count(DISTINCT Content) FROM TV_Channel 
SELECT count(DISTINCT series_name),        count(DISTINCT Content) FROM TV_Channel 
SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio" 
SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio" 
SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio" 
SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio" 
SELECT count(*) FROM TV_Channel WHERE Language = "English" 
SELECT count(*) FROM TV_Channel WHERE Language = 'English' 
SELECT Language,        count(*) FROM TV_Channel GROUP BY Language ORDER BY count(*) DESC LIMIT 1 
SELECT Language,        COUNT(*) FROM TV_Channel GROUP BY Language ORDER BY COUNT(*) ASC LIMIT 1 
SELECT Language,        COUNT(*) FROM TV_Channel GROUP BY Language 
SELECT Language,        count(*) FROM TV_Channel GROUP BY Language 
SELECT TV_Channel.series_name FROM Cartoon JOIN TV_Channel ON Cartoon.channel = TV_Channel.id WHERE Cartoon.title = "The Rise of the Blue Beetle!" 
SELECT TV_Channel.series_name FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.channel WHERE Cartoon.title = "The Rise of the Blue Beetle" 
SELECT Cartoon.Title FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE TV_Channel.series_name = "Sky Radio" 
SELECT Cartoon.Title FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE TV_Channel.series_name = "Sky Radio" 
SELECT Episode FROM TV_series ORDER BY Rating 
SELECT Episode FROM TV_series ORDER BY Rating 
SELECT Episode,        max(Rating) FROM TV_series GROUP BY Episode ORDER BY max(Rating) DESC LIMIT 3 
SELECT Episode,        max(Rating) FROM TV_series GROUP BY Episode ORDER BY max(Rating) DESC LIMIT 3 
SELECT min(share),        max(share) FROM TV_series 
SELECT max(Share),        min(Share) FROM TV_series 
SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime" 
SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime" 
SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime" 
SELECT weekly_rank FROM TV_series WHERE Episode = "A Love of a Lifetime" 
SELECT TV_channel.series_name FROM TV_series JOIN TV_channel ON TV_series.channel = TV_channel.id WHERE TV_series.Episode = "A Love of a Lifetime" 
SELECT TV_series.Episode FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_series.Episode = "A Love of a Lifetime" 
SELECT Episode FROM TV_series WHERE TV_Channel.series_name = "Sky Radio" 
SELECT Episode FROM TV_series WHERE Air_Date =     (SELECT max(Air_Date)      FROM TV_series      WHERE Air_Date LIKE "Sky Radio%") 
SELECT count(*),        directed_by FROM Cartoon GROUP BY directed_by 
SELECT count(*),        directed_by FROM Cartoon GROUP BY directed_by 
SELECT Production_code,        Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1 
SELECT Production_code,        Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1 
SELECT Package_Option,        series_name FROM TV_Channel WHERE Hight_definition_TV = 'Yes' 
SELECT Package_Option,        series_name FROM TV_Channel WHERE Hight_definition_TV = 1 
SELECT TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.channel WHERE Cartoon.written_by = "Todd Casey" 
SELECT TV_Channel.Country FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE Cartoon.Written_by = "Todd Casey" 
SELECT TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.channel WHERE Cartoon.written_by!= "Todd Casey" 
SELECT Country FROM TV_Channel WHERE Language!= 'English'   AND Cartoon.Written_by!= 'Todd Casey' 
SELECT TV_Channel.series_name,        TV_Channel.country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.channel WHERE Cartoon.directed_by = "Ben Jones"   AND Cartoon.written_by = "Michael Chang" 
SELECT TV_Channel.series_name,        TV_Channel.country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.channel WHERE Cartoon.directed_by = "Ben Jones"   OR Cartoon.directed_by = "Michael Chang" 
SELECT Pixel_aspect_ratio_PAR,        Country FROM TV_Channel WHERE Language!= 'English' 
SELECT Content,        Pixel_aspect_ratio_PAR,        Country FROM TV_Channel WHERE Language!= 'English' 
SELECT id FROM TV_Channel WHERE Country = 'United States'   OR Country = 'Canada' 
SELECT id FROM TV_Channel GROUP BY id HAVING count(*) > 2 
SELECT id FROM TV_Channel WHERE id NOT IN     (SELECT TV_Channel.id      FROM Cartoon      JOIN TV_Channel ON Cartoon.channel = TV_Channel.id      WHERE Cartoon.directed_by = "Ben Jones") 
SELECT id FROM TV_Channel WHERE id NOT IN     (SELECT TV_Channel.id      FROM Cartoon      JOIN TV_Channel ON Cartoon.channel = TV_Channel.id      WHERE Cartoon.directed_by = "Ben Jones") 
SELECT Package_Option FROM TV_Channel WHERE id NOT IN     (SELECT TV_Channel.id      FROM Cartoon      JOIN TV_Channel ON Cartoon.channel = TV_Channel.id      WHERE Cartoon.directed_by = "Ben Jones") 
SELECT package_option FROM TV_channel WHERE id NOT IN     (SELECT TV_channel.id      FROM cartoon      JOIN TV_channel ON cartoon.channel = TV_channel.id      WHERE cartoon.directed_by = "Ben Jones") 
SELECT count(*) FROM poker_player 
SELECT count(*) FROM poker_player 
SELECT Earnings FROM poker_player ORDER BY Earnings DESC 
SELECT Earnings FROM poker_player ORDER BY Earnings DESC 
SELECT Final_Table_Made,        Best_Finish FROM poker_player ORDER BY Final_Table_Made DESC 
SELECT Final_Table_Made,        Best_Finish FROM poker_player 
SELECT avg(Earnings) FROM poker_player 
SELECT avg(Earnings) FROM poker_player 
SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1 
SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1 
SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings < 200000 
SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings < 200000 
SELECT people.Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID 
SELECT people.Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID 
SELECT people.Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE poker_player.Earnings > 300000 
SELECT people.Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE poker_player.Earnings > 300000 
SELECT people.Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY poker_player.Final_Table_Made ASC 
SELECT people.Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID GROUP BY people.Name ORDER BY count(*) 
SELECT people.Birth_Date FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY poker_player.Earnings LIMIT 1 
SELECT poker_player.Birth_Date FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY poker_player.Earnings LIMIT 1 
SELECT Money_Rank FROM poker_player WHERE Height =     (SELECT MAX (Height)      FROM people) 
SELECT poker_player.Money_Rank FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY people.Height DESC LIMIT 1 
SELECT avg(Earnings) FROM poker_player WHERE Height > 200 
SELECT avg(Earnings) FROM poker_player WHERE Height > 200 
SELECT people.Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY Earnings DESC 
SELECT people.Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY Earnings DESC 
SELECT DISTINCT Nationality,                 COUNT(*) FROM people GROUP BY Nationality 
SELECT count(*),        nationality FROM people GROUP BY nationality 
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1 
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1 
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*) >= 2 
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*) >= 2 
SELECT Name,        Birth_Date FROM people ORDER BY Name ASC 
SELECT Name,        Birth_Date FROM people ORDER BY Name 
SELECT Name FROM people WHERE Nationality!= "Russia" 
SELECT Name FROM people WHERE Nationality!= "Russia" 
SELECT Name FROM people WHERE People_ID NOT IN     (SELECT People_ID      FROM poker_player) 
SELECT Name FROM people WHERE People_ID NOT IN     (SELECT People_ID      FROM poker_player) 
SELECT count(DISTINCT Nationality) FROM people 
SELECT count(DISTINCT Nationality) FROM people 
SELECT count(*) FROM area_code_state 
SELECT contestant_number,        contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC 
SELECT vote_id,        phone_number,        state FROM VOTES 
SELECT max(area_code),        min(area_code) FROM AREA_CODE_STATE 
SELECT created FROM VOTES WHERE state = 'CA' 
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name!= 'Jessie Alloway' 
SELECT DISTINCT state,                 created FROM VOTES 
SELECT contestant_number,        contestant_name FROM CONTESTANTS WHERE contestant_number IN     (SELECT contestant_number      FROM VOTES      GROUP BY contestant_number      HAVING count(*) >= 2) 
SELECT contestant_number,        contestant_name FROM CONTESTANTS JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number ORDER BY count(*) LIMIT 1 
SELECT count(*) FROM VOTES WHERE state = 'NY'   OR state = 'CA' 
SELECT count(DISTINCT contestant_number) FROM CONTESTANTS WHERE contestant_number NOT IN     (SELECT contestant_number      FROM VOTES) 
SELECT area_code FROM AREA_CODE_STATE ORDER BY count(*) DESC LIMIT 1 
SELECT VOTES.created,        VOTES.state,        VOTES.phone_number FROM VOTES JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE CONTESTANTS.contestant_name = 'Tabatha Gehling' 
SELECT area_code FROM VOTES WHERE contestant_number = 1   AND state = 'Texas' UNION SELECT area_code FROM VOTES WHERE contestant_number = 2   AND state = 'Texas' 
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%' 
SELECT country.name FROM country JOIN country_region ON country.code = country_region.country_code WHERE country_region.year > 1950 
SELECT country.name FROM country JOIN country_region ON country.region = country_region.region_code WHERE country_region.year > 1950 
SELECT count(*) FROM country WHERE GovernmentForm = 'Republic' 
SELECT count(*) FROM country WHERE GovernmentForm = 'Republic' 
SELECT sum(SurfaceArea) FROM country WHERE Region = "Caribbean" 
SELECT sum(SurfaceArea) FROM country WHERE Continent = 'Carribean' 
SELECT Continent FROM country WHERE Name = "Anguilla"; 
SELECT Continent FROM country WHERE Code = 'Anguilla' 
SELECT region FROM city WHERE name = "Kabul" 
SELECT Region FROM country WHERE name = "Kabul" 
SELECT Language FROM countrylanguage WHERE CountryCode = "ARU" GROUP BY Language ORDER BY COUNT(*) DESC LIMIT 1 
SELECT countrylanguage.Language FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.Name = "Aruba"   AND countrylanguage.Language = "English"   AND countrylanguage.Percentage =     (SELECT max(Percentage)      FROM countrylanguage      WHERE Language = "English") 
SELECT Population,        LifeExpectancy FROM country WHERE Country = "Brazil" 
SELECT Population,        LifeExpectancy FROM country WHERE Country = "Brazil" 
SELECT region,        population FROM country WHERE name = "Angola" 
SELECT region,        population FROM country WHERE name = "Angola" 
SELECT avg(LifeExpectancy) FROM country WHERE Region = "Central Africa" 
SELECT avg(LifeExpectancy) FROM country WHERE Region = "Central Africa" 
SELECT country.name FROM country JOIN country_region ON country.region = country_region.region_code WHERE country_region.continent = 'Asia'   AND country.lifeexpectancy =     (SELECT min(lifeexpectancy)      FROM country      JOIN country_region ON country.region = country_region.region_code      WHERE country_region.continent = 'Asia') 
SELECT country.name FROM country JOIN country_region ON country.region = country_region.region_code WHERE country_region.region_name = "Asia"   AND country.lifeexpectancy =     (SELECT min(lifeexpectancy)      FROM country) 
SELECT sum(Population),        max(GNP) FROM country WHERE Continent = 'Asia' 
SELECT population,        GNP FROM country WHERE region = 'Asia' GROUP BY GNP ORDER BY GNP DESC LIMIT 1 
SELECT avg(LifeExpectancy) FROM country WHERE Region = 'Africa'   AND Country_name = 'Republic' 
SELECT avg(LifeExpectancy) FROM country WHERE Region = 'Africa'   AND GovernmentForm = 'Republic' 
SELECT sum(SurfaceArea) FROM country WHERE Continent = 'Asia'   OR Continent = 'Europe' 
SELECT sum(SurfaceArea) FROM country WHERE Continent = 'Asia'   OR Continent = 'Europe' 
SELECT Population FROM city WHERE District = "Gelderland" 
SELECT sum(Population) FROM city WHERE District = "Gelderland" 
SELECT avg(GNP),        sum(Population) FROM country WHERE GovernmentForm = 'US' 
SELECT avg(GNP),        sum(Population) FROM country WHERE country_name = "United States" GROUP BY country_name 
SELECT count(DISTINCT language) FROM countrylanguage 
SELECT count(DISTINCT language) FROM countrylanguage 
SELECT count(DISTINCT GovernmentForm) FROM country WHERE continent = 'Africa' 
SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa' 
SELECT sum(countrylanguage.Percentage) FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.Name = "Aruba" 
SELECT count(*) FROM countrylanguage WHERE countrycode = "ARU" 
SELECT count(*) FROM countrylanguage WHERE countrycode = "AFG" 
SELECT count(*) FROM countrylanguage WHERE countrycode = "AF" 
SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.name ORDER BY count(*) DESC LIMIT 1 
SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.name ORDER BY sum(countrylanguage.percentage) DESC LIMIT 1 
SELECT country.Continent FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Continent ORDER BY count(*) DESC LIMIT 1 
SELECT country.Continent FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Continent ORDER BY count(*) DESC LIMIT 1 
SELECT count(*) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Language = "English" INTERSECT   SELECT count(*)   FROM country   JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Language = "Dutch" 
SELECT count(*) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Language = "English" INTERSECT   SELECT count(*)   FROM country   JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Language = "Dutch" 
SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.name =     (SELECT country.name      FROM country      JOIN countrylanguage ON country.code = countrylanguage.countrycode      WHERE country.name =          (SELECT country.name           FROM country           JOIN countrylanguage ON country.code = countrylanguage.countrycode           WHERE country.name =               (SELECT country.name                FROM country                JOIN countrylanguage ON country.code = countrylanguage.countrycode                WHERE country.name =                    (SELECT country.name                     FROM country                     JOIN countrylanguage ON country.code = countrylanguage.countrycode                     WHERE country.name =                         (SELECT country.name                          FROM country                          JOIN countrylanguage ON country.code = countrylanguage.countrycode                          WHERE country.name =                              (SELECT country.name                               FROM country                               JOIN countrylanguage ON country.code = countrylanguage.countrycode                               WHERE country.name =                                   (SELECT country.name                                 
SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.name = "United States" INTERSECT   SELECT country.name   FROM country   JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.name = "France" 
SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "English" INTERSECT   SELECT country.name   FROM country   JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "French" 
SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "English" INTERSECT   SELECT country.name   FROM country   JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "French" 
SELECT count(DISTINCT country.Continent) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Name = "Chinese" 
SELECT count(*) FROM country WHERE language = "Chinese" 
SELECT country.Region FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = "English"   OR countrylanguage.Language = "Dutch" 
SELECT country.Region FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Name = "Dutch"   OR country.Name = "English" 
SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' INTERSECT   SELECT country.Code   FROM country   JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Dutch' 
SELECT country.CountryCode FROM country JOIN countrylanguage ON country.CountryCode = countrylanguage.CountryCode WHERE country.Language = 'English'   OR country.Language = 'Dutch' 
SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Asia' GROUP BY countrylanguage.Language ORDER BY count(*) DESC LIMIT 1 
SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Asia' GROUP BY country.Code ORDER BY count(*) DESC LIMIT 1 
SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.GovernmentForm = 'Republic' GROUP BY countrylanguage.Language HAVING COUNT(*) = 1 
SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.GovernmentForm = 'Republic' GROUP BY countrylanguage.Language HAVING count(*) = 1 
SELECT city.Name FROM city JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode WHERE countrylanguage.Language = "English"   AND city.Population =     (SELECT MAX (city.Population)      FROM city      JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode      WHERE countrylanguage.Language = "English") 
SELECT city.Name FROM city JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode WHERE countrylanguage.Language = "English" ORDER BY city.Population DESC LIMIT 1 
SELECT country.name,        country.Population,        country.LifeExpectancy FROM country JOIN country ON country.Code = country.Country WHERE country.SurfaceArea >     (SELECT max(SurfaceArea)      FROM country      WHERE country.Continent = 'Asia') 
SELECT country.name,        country.Population,        country.LifeExpectancy FROM country JOIN country ON country.Code = country.Country ORDER BY country.Population DESC LIMIT 1 
SELECT avg(LifeExpectancy) FROM country WHERE Language!= "English" 
SELECT avg(LifeExpectancy) FROM country WHERE Language!= "English" 
SELECT sum(Population) FROM country WHERE Language!= 'English' 
SELECT count(*) FROM country WHERE language!= "english" 
SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.HeadOfState = "Beatrix" 
SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.HeadOfState = "Beatrix" 
SELECT count(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.IndepYear < 1930 
SELECT count(DISTINCT language) FROM countrylanguage WHERE countryyear < 1930 
SELECT country.name FROM country JOIN country ON country.code = country.code WHERE country.surfaceArea >     (SELECT max(surfaceArea)      FROM country      WHERE continent = 'Europe') 
SELECT Country.name FROM country JOIN country ON country.code = country.code WHERE country.area >     (SELECT max(area)      FROM country      WHERE continent = 'Europe') 
SELECT country.name FROM country JOIN country_region ON country.code = country_region.country_code WHERE country_region.region = 'Africa'   AND country.population <     (SELECT min(population)      FROM country      JOIN country_region ON country.code = country_region.country_code      WHERE country_region.region = 'Asia') 
SELECT country.name FROM country JOIN country ON country.code2 = country.code2 WHERE country.population <     (SELECT min(population)      FROM country      WHERE continent = 'Asia') 
SELECT country.name FROM country JOIN country ON country.code2 = country.code2 WHERE country.region = 'Asia'   AND country.population >     (SELECT max(population)      FROM country      WHERE region = 'Africa') 
SELECT country.name FROM country JOIN country ON country.code2 = country.code2 WHERE country.Population >     (SELECT max(Population)      FROM country      WHERE continent = 'Asia')   AND country.continent = 'Asia' 
SELECT CountryCode FROM countrylanguage WHERE Language!= "English" 
SELECT CountryCode FROM countrylanguage WHERE Language!= "English" 
SELECT CountryCode FROM countrylanguage WHERE Language!= "English" 
SELECT CountryCode FROM countrylanguage WHERE Language!= "English" 
SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.GovernmentForm!= 'Republic'   AND country.Language!= 'English' 
SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Language!= "English"   AND country.GovernmentForm!= "Republic" 
SELECT city.Name FROM city JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode WHERE countrylanguage.Language = "English"   AND country.Continent = "Europe" 
SELECT city.Name FROM city JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode WHERE countrylanguage.Language = "English"   AND country.Continent = "Europe" 
SELECT city.Name FROM country JOIN countrylanguage ON country.CountryCode = countrylanguage.CountryCode JOIN city ON city.ID = countrylanguage.CityID WHERE country.Continent = "Asian"   AND country.Language = "Chinese" 
SELECT city.Name FROM city JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode WHERE countrylanguage.Language = "Chinese"   AND country.Continent = "Asia" 
SELECT name,        indepYear,        surfaceArea FROM country ORDER BY population ASC LIMIT 1 
SELECT name,        indepYear,        surfaceArea FROM country ORDER BY population LIMIT 1 
SELECT Population,        Country.Name,        Country.Leader FROM country JOIN country ON country.Code = country.Country ORDER BY country.SurfaceArea DESC LIMIT 1 
SELECT country.name,        country.Population,        country.HeadOfState FROM country JOIN country ON country.Code = country.Country ORDER BY country.SurfaceArea DESC LIMIT 1 
SELECT country.name,        countrylanguage.percentage,        country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.percentage >= 3 
SELECT country.name,        country.Language,        country.Percentage FROM country JOIN countrylanguage ON country.CountryCode = countrylanguage.CountryCode WHERE country.Language > 2 
SELECT city.district,        count(*) FROM city JOIN city ON city.id = city.id WHERE city.population >     (SELECT avg(population)      FROM city) GROUP BY city.district 
SELECT city.district,        count(*) FROM city JOIN city ON city.id = city.id WHERE city.population >     (SELECT avg(population)      FROM city) GROUP BY city.district 
SELECT GovernmentForm,        avg(LifeExpectancy),        sum(Population) FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy) > 72 
SELECT GovernmentForm,        sum(Population),        sum(LifeExpectancy) FROM country WHERE LifeExpectancy > 72 GROUP BY GovernmentForm 
SELECT Continent,        avg(LifeExpectancy),        sum(Population) FROM country WHERE LifeExpectancy < 72 GROUP BY Continent 
SELECT Continent,        sum(Population),        avg(LifeExpectancy) FROM country WHERE LifeExpectancy < 72 GROUP BY Continent 
SELECT country.name,        country.area FROM country JOIN country ON country.code = country.code ORDER BY country.area DESC LIMIT 5 
SELECT name,        surfaceArea FROM country ORDER BY surfaceArea DESC LIMIT 5 
SELECT country.name FROM country JOIN country_population ON country.code = country_population.code ORDER BY country_population.Population DESC LIMIT 3 
SELECT name FROM country ORDER BY population DESC LIMIT 3 
SELECT name FROM country ORDER BY population DESC LIMIT 3 
SELECT country.name FROM country JOIN country ON country.code = country.code GROUP BY country.name ORDER BY count(*) LIMIT 3 
SELECT count(*) FROM country WHERE Continent = 'Asia' 
SELECT count(*) FROM country WHERE Continent = 'Asia' 
SELECT country.name FROM country JOIN country_region ON country.region = country_region.region_code WHERE country_region.continent = 'Europe'   AND country.population = 80000 
SELECT country.name FROM country JOIN region ON country.region = region.regionid WHERE region.regionname = "Europe"   AND country.population = 80000 
SELECT sum(SurfaceArea),        avg(SurfaceArea) FROM country WHERE Continent = 'North America'   AND Area > 3000 
SELECT sum(SurfaceArea),        avg(SurfaceArea) FROM country WHERE Continent = 'North America'   AND SurfaceArea > 3000 
SELECT city.Name FROM city JOIN city ON city.ID = city.ID WHERE city.Population BETWEEN 160000 AND 900000 
SELECT city.Name FROM city JOIN city ON city.ID = city.ID WHERE city.Population BETWEEN 160000 AND 900000 
SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(*) DESC LIMIT 1 
SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(*) DESC LIMIT 1 
SELECT countrylanguage.Language,        countrylanguage.Percentage FROM countrylanguage JOIN countrylanguage ON countrylanguage.CountryCode = countrylanguage.CountryCode GROUP BY countrylanguage.CountryCode ORDER BY countrylanguage.Percentage DESC LIMIT 1 
SELECT countrycode,        language FROM countrylanguage GROUP BY countrycode ORDER BY percentage DESC LIMIT 3 
SELECT sum(percentage) FROM countrylanguage WHERE language = "Spanish" GROUP BY countrycode ORDER BY sum(percentage) DESC LIMIT 1 
SELECT count(*) FROM countrylanguage WHERE language = "Spanish" GROUP BY countrycode 
SELECT CountryCode FROM countrylanguage WHERE Language = "Spanish" GROUP BY CountryCode ORDER BY COUNT(*) DESC LIMIT 1 
SELECT CountryCode FROM countrylanguage WHERE Language = "Spanish" GROUP BY CountryCode HAVING COUNT(*) = 1 
SELECT count(DISTINCT Name) FROM conductor 
SELECT count(*) FROM conductor 
SELECT Name FROM conductor ORDER BY Age ASC 
SELECT Name FROM conductor ORDER BY Age 
SELECT Name FROM conductor WHERE Nationality!= "USA" 
SELECT Name FROM conductor WHERE Nationality!= "USA" 
SELECT Record_Company FROM orchestra ORDER BY YEAR_OF_Founded DESC 
SELECT Record_Company FROM orchestra ORDER BY YEAR_OF_Founded DESC 
SELECT avg(Attendance) FROM show 
SELECT avg(Attendance) FROM show 
SELECT max(Share),        min(Share) FROM performance WHERE TYPE!= "Live final" 
SELECT max(Share),        min(Share) FROM performance WHERE TYPE!= "Live final" 
SELECT count(DISTINCT Nationality) FROM conductor 
SELECT count(DISTINCT Nationality) FROM conductor 
SELECT Name FROM conductor ORDER BY YEAR_OF_WORK DESC 
SELECT Name FROM conductor ORDER BY YEAR_OF_WORK DESC 
SELECT Name FROM conductor ORDER BY YEAR_OF_WORK DESC LIMIT 1 
SELECT Name FROM conductor ORDER BY YEAR_OF_WORK DESC LIMIT 1 
SELECT conductor.Name,        orchestra.Orchestra FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID 
SELECT conductor.Name,        orchestra.Orchestra FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID 
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY conductor.Name HAVING count(*) > 1 
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY conductor.Name HAVING count(*) > 1 
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY conductor.Name ORDER BY count(*) DESC LIMIT 1 
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY conductor.Name ORDER BY count(*) DESC LIMIT 1 
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID WHERE orchestra.Year_of_Founded > 2008 
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID WHERE orchestra.Year_of_Founded > 2008 
SELECT Record_Company,        COUNT(*) FROM orchestra GROUP BY Record_Company 
SELECT Record_Company,        COUNT(*) FROM orchestra GROUP BY Record_Company 
SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC 
SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) DESC 
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1 
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1 
SELECT Orchestra_ID FROM orchestra WHERE Orchestra_ID NOT IN     (SELECT Orchestra_ID      FROM performance) 
SELECT Orchestra_ID FROM orchestra WHERE Orchestra_ID NOT IN     (SELECT Orchestra_ID      FROM performance) 
SELECT Record_Company FROM orchestra WHERE YEAR_OF_Founded < 2003 INTERSECT   SELECT Record_Company   FROM orchestra WHERE YEAR_OF_Founded > 2003 
SELECT Record_Company FROM orchestra WHERE YEAR_OF_Founded < 2003 INTERSECT   SELECT Record_Company   FROM orchestra WHERE YEAR_OF_Founded > 2003 
SELECT count(*) FROM orchestra WHERE Major_Record_Format = "CD"   OR Major_Record_Format = "DVD" 
SELECT count(*) FROM orchestra WHERE Major_Record_Format = "CD"   OR Major_Record_Format = "DVD" 
SELECT YEAR_OF_Founded FROM orchestra WHERE Major_Record_Format = "Classical" GROUP BY YEAR_OF_Founded HAVING COUNT(*) > 1 
SELECT YEAR_OF_Founded FROM orchestra GROUP BY YEAR_OF_Founded HAVING COUNT(*) > 1 
SELECT count(*) FROM Highschooler 
SELECT count(*) FROM Highschooler 
SELECT name,        grade FROM Highschooler 
SELECT name,        grade FROM Highschooler 
SELECT DISTINCT grade FROM Highschooler 
SELECT grade FROM Highschooler 
SELECT grade FROM Highschooler WHERE name = "Kyle" 
SELECT grade FROM Highschooler WHERE name = "Kyle" 
SELECT name FROM Highschooler WHERE grade = 10 
SELECT name FROM Highschooler WHERE grade = 10 
SELECT ID FROM Highschooler WHERE name = "Kyle" 
SELECT ID FROM Highschooler WHERE name = "Kyle" 
SELECT count(*) FROM Highschooler WHERE grade = 9   OR grade = 10 
SELECT count(*) FROM Highschooler WHERE grade = 9   OR grade = 10 
SELECT count(*),        grade FROM Highschooler GROUP BY grade 
SELECT count(*),        grade FROM Highschooler GROUP BY grade 
SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1 
SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1 
SELECT DISTINCT grade FROM highschooler GROUP BY grade HAVING count(*) >= 4 
SELECT grade FROM Highschooler GROUP BY grade HAVING count(*) >= 4 
SELECT student_id,        count(*) FROM Friend GROUP BY student_id 
SELECT count(*),        student_id FROM Friend GROUP BY student_id 
SELECT Highschooler.name,        count(*) FROM Friend JOIN Highschooler ON Friend.student_id = Highschooler.ID GROUP BY Friend.student_id 
SELECT name,        count(*) FROM Friend GROUP BY name 
SELECT name FROM highschooler ORDER BY count(*) DESC LIMIT 1 
SELECT name FROM highschooler ORDER BY count(*) DESC LIMIT 1 
SELECT name FROM highschooler WHERE grade >= 3 
SELECT name FROM highschooler WHERE grade = 3 UNION SELECT highschooler.name FROM highschooler JOIN friend ON highschooler.id = friend.friend_id GROUP BY highschooler.id HAVING count(*) >= 3 
SELECT Friend.student_id,        Friend.friend_id FROM Friend JOIN Highschooler ON Friend.student_id = Highschooler.ID WHERE Highschooler.name = "Kyle" 
SELECT Friend.friend_id FROM Friend JOIN Highschooler ON Friend.student_id = Highschooler.ID WHERE Highschooler.name = "Kyle" 
SELECT count(DISTINCT friend_id) FROM Friend WHERE student_id = 10 
SELECT count(DISTINCT friend_id) FROM Friend WHERE student_id = 100 
SELECT DISTINCT student_id FROM highschooler WHERE student_id NOT IN     (SELECT student_id      FROM friend) 
SELECT DISTINCT ID FROM Highschooler WHERE ID NOT IN     (SELECT student_id      FROM friend) 
SELECT name FROM Highschooler WHERE id NOT IN     (SELECT student_id      FROM friend) 
SELECT name FROM highschooler WHERE id NOT IN     (SELECT student_id      FROM friend) 
SELECT student_id FROM friend UNION SELECT student_id FROM likes 
SELECT student_id FROM friend INNER JOIN likes ON friend.student_id = likes.student_id 
SELECT DISTINCT Highschooler.name,                 Likes.student_id FROM Likes JOIN Highschooler ON Likes.student_id = Highschooler.ID JOIN Friend ON Likes.friend_id = Friend.student_id WHERE Friend.friend_id!= Likes.student_id 
SELECT Highschooler.name FROM Likes JOIN Highschooler ON Likes.student_id = Highschooler.ID JOIN Friend ON Likes.liked_id = Friend.student_id WHERE Friend.friend_id!= Friend.student_id 
SELECT count(*),        student_id FROM Likes GROUP BY student_id 
SELECT count(*),        student_id FROM Likes GROUP BY student_id 
SELECT Highschooler.name,        count(*) FROM Likes JOIN Highschooler ON Likes.student_id = Highschooler.ID GROUP BY Likes.student_id 
SELECT Highschooler.name,        count(*) FROM Likes JOIN Highschooler ON Likes.student_id = Highschooler.ID GROUP BY Likes.student_id 
SELECT name FROM Highschooler ORDER BY count(*) DESC LIMIT 1 
SELECT name FROM Likes GROUP BY name ORDER BY count(*) DESC LIMIT 1 
SELECT name FROM Highschooler WHERE id IN     (SELECT student_id      FROM Likes      GROUP BY student_id      HAVING count(*) >= 2) 
SELECT name FROM Likes GROUP BY name HAVING count(*) >= 2 
SELECT name FROM highschooler WHERE grade > 5   AND count(*) >= 2 
SELECT name FROM Highschooler WHERE grade > 5   AND count(*) >= 2 
SELECT count(*) FROM Likes JOIN Highschooler ON Likes.student_id = Highschooler.ID WHERE Highschooler.name = "Kyle" 
SELECT count(*) FROM Likes JOIN Highschooler ON Likes.student_id = Highschooler.ID WHERE Highschooler.name = "Kyle" 
SELECT avg(grade) FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id GROUP BY Highschooler.ID 
SELECT avg(grade) FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.friend_id GROUP BY Highschooler.ID 
SELECT min(grade) FROM Highschooler WHERE id NOT IN     (SELECT student_id      FROM friend) 
SELECT min(grade) FROM Highschooler WHERE student_id NOT IN     (SELECT student_id      FROM friend) 
SELECT state FROM owners UNION SELECT state FROM professionals 
SELECT state FROM owners UNION SELECT state FROM professionals 
SELECT avg(age) FROM Dogs WHERE dog_id IN     (SELECT dog_id      FROM Treatments      GROUP BY dog_id      HAVING count(*) > 1) 
SELECT avg(age) FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Treatments.dog_id 
SELECT professionals.professional_id,        professionals.last_name,        professionals.cell_number FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id WHERE treatments.state = 'Indiana'   OR treatments.cost_of_treatment > 2 
SELECT professionals.professional_id,        professionals.last_name,        professionals.cell_number FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id WHERE state = 'Indiana'   OR treatments.cost_of_treatment > 2 
SELECT Dogs.name FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id WHERE Treatments.cost_of_treatment < 1000 
SELECT Dogs.name FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id WHERE Treatments.cost_of_treatment < 1000   AND Treatments.professional_id = 1 
SELECT first_name FROM professionals EXCEPT SELECT first_name FROM dogs 
SELECT first_name FROM professionals UNION SELECT first_name FROM owners WHERE first_name NOT IN     (SELECT first_name      FROM dogs) 
SELECT professional_id,        role_code,        email_address FROM professionals EXCEPT SELECT professional_id,        role_code,        email_address FROM professionals WHERE role_code = 'Professional'   AND animal_type_code = 'Dog' 
SELECT professional_id,        role_code,        email_address FROM professionals WHERE professional_id NOT IN     (SELECT professional_id      FROM treatments) 
SELECT owners.owner_id,        owners.first_name,        owners.last_name FROM owners JOIN Dogs ON owners.owner_id = Dogs.owner_id GROUP BY owners.owner_id ORDER BY count(*) DESC LIMIT 1 
SELECT owners.owner_id,        owners.first_name,        owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id GROUP BY owners.owner_id ORDER BY count(*) DESC LIMIT 1 
SELECT professionals.professional_id,        professionals.role_code,        professionals.first_name FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id GROUP BY professionals.professional_id HAVING count(*) >= 2 
SELECT professionals.professional_id,        professionals.role_code,        professionals.first_name FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id GROUP BY professionals.professional_id HAVING count(*) >= 2 
SELECT breed_name FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code GROUP BY Breeds.breed_name ORDER BY count(*) DESC LIMIT 1 
SELECT breed_name FROM Dogs GROUP BY breed_name ORDER BY count(*) DESC LIMIT 1 
SELECT owners.owner_id,        owners.last_name FROM treatments JOIN owners ON treatments.professional_id = owners.owner_id GROUP BY treatments.professional_id ORDER BY count(*) DESC LIMIT 1 
SELECT owners.owner_id,        owners.last_name FROM owners JOIN treatments ON owners.owner_id = treatments.owner_id JOIN dogs ON treatments.dog_id = dogs.dog_id GROUP BY owners.owner_id ORDER BY count(*) DESC LIMIT 1 
SELECT treatment_types.treatment_type_description FROM treatments JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code ORDER BY sum(treatments.cost_of_treatment) LIMIT 1 
SELECT treatment_types.treatment_type_description FROM treatments JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code GROUP BY treatment_types.treatment_type_description ORDER BY sum(treatments.cost_of_treatment) LIMIT 1 
SELECT owners.owner_id,        owners.zip_code FROM owners JOIN treatments ON owners.owner_id = treatments.professional_id GROUP BY treatments.professional_id ORDER BY sum(treatments.cost_of_treatment) DESC LIMIT 1 
SELECT owners.owner_id,        owners.zip_code FROM owners JOIN treatments ON owners.owner_id = treatments.owner_id GROUP BY treatments.owner_id ORDER BY sum(treatments.cost_of_treatment) DESC LIMIT 1 
SELECT professional_id,        email_address FROM professionals WHERE first_name = "Jane"   AND role_code = "Veterinarian" UNION SELECT professional_id,        cell_number FROM treatments WHERE treatment_type_code = "Surgery" UNION SELECT professional_id,        cell_number FROM treatments WHERE treatment_type_code = "Vaccination" 
SELECT professionals.professional_id,        professionals.cell_number FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id GROUP BY professionals.professional_id HAVING count(*) >= 2 
SELECT professionals.first_name,        professionals.last_name FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id WHERE treatments.cost_of_treatment <     (SELECT avg(cost_of_treatment)      FROM treatments) 
SELECT professionals.first_name,        professionals.last_name FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id WHERE treatments.cost_of_treatment <     (SELECT avg(cost_of_treatment)      FROM treatments) 
SELECT treatments.date_of_treatment,        professionals.first_name FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id 
SELECT date_of_treatment,        first_name FROM Treatments JOIN Professionals ON Treatments.professional_id = Professionals.professional_id 
SELECT cost_of_treatment,        treatment_type_description FROM Treatments 
SELECT cost_of_treatment,        treatment_type_description FROM Treatments 
SELECT owners.first_name,        owners.last_name,        dogs.size FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id 
SELECT owners.first_name,        owners.last_name,        dogs.size FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id 
SELECT DISTINCT owners.first_name,                 dogs.name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id 
SELECT owners.first_name,        dogs.name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id 
SELECT name,        treatments.date_of_treatment FROM treatments JOIN Dogs ON treatments.dog_id = Dogs.dog_id WHERE Dogs.breed_code =     (SELECT breed_code      FROM Dogs      GROUP BY breed_code      ORDER BY count(*) DESC      LIMIT 1) 
SELECT name,        treatments.date_of_treatment FROM treatments JOIN Dogs ON treatments.dog_id = Dogs.dog_id WHERE Dogs.breed_code =     (SELECT breed_code      FROM Dogs      GROUP BY breed_code      ORDER BY count(*) DESC      LIMIT 1) 
SELECT Dogs.name,        Owners.first_name,        Dogs.name FROM Dogs JOIN Owners ON Dogs.owner_id = Owners.owner_id WHERE Owners.state = "Virginia" 
SELECT owners.first_name,        dogs.name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id WHERE owners.state = "Virginia" 
SELECT date_arrived,        date_departed FROM Dogs WHERE date_of_birth > 2000   AND date_of_birth < 2010   AND gender = 'F'   AND treatments.treatment_type_code = 'Penicillin' 
SELECT date_arrived,        date_departed FROM Treatments JOIN Dogs ON Treatments.dog_id = Dogs.dog_id WHERE Treatments.treatment_type_code = "Behavioral" 
SELECT owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id ORDER BY dogs.age LIMIT 1 
SELECT owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id ORDER BY dogs.age LIMIT 1 
SELECT email_address FROM professionals WHERE state = 'Hawaii'   OR state = 'Wisconsin' 
SELECT email_address FROM professionals WHERE state = 'Hawaii'   OR state = 'Wisconsin' 
SELECT date_arrived,        date_departed FROM Dogs 
SELECT date_arrived,        date_departed FROM Dogs 
SELECT count(DISTINCT dog_id) FROM treatments 
SELECT count(DISTINCT dog_id) FROM treatments 
SELECT count(DISTINCT professional_id) FROM treatments 
SELECT count(DISTINCT professional_id) FROM treatments 
SELECT role_code,        street,        city,        state FROM professionals WHERE city LIKE '%West%' 
SELECT role_code,        street,        city,        state FROM professionals WHERE city LIKE '%West%' 
SELECT owners.first_name,        owners.last_name,        owners.email_address FROM owners JOIN state ON state.state_name = owners.state WHERE state.state_name LIKE '%North%' 
SELECT owners.first_name,        owners.last_name,        owners.email_address FROM owners JOIN state ON state.state_name = owners.state WHERE state.state_name LIKE '%North%' 
SELECT count(*) FROM Dogs WHERE age <     (SELECT avg(age)      FROM Dogs) 
SELECT count(*) FROM Dogs WHERE age <     (SELECT avg(age)      FROM Dogs) 
SELECT cost_of_treatment FROM treatments ORDER BY date_of_treatment DESC LIMIT 1 
SELECT cost_of_treatment FROM treatments ORDER BY date_of_treatment DESC LIMIT 1 
SELECT count(*) FROM Dogs WHERE dog_id NOT IN     (SELECT dog_id      FROM Treatments) 
SELECT count(*) FROM Dogs WHERE dog_id NOT IN     (SELECT dog_id      FROM Treatments) 
SELECT count(*) FROM Owners WHERE owner_id NOT IN     (SELECT owner_id      FROM Dogs) 
SELECT count(*) FROM Owners WHERE owner_id NOT IN     (SELECT owner_id      FROM Dogs) 
SELECT count(DISTINCT professional_id) FROM professionals WHERE professional_id NOT IN     (SELECT professional_id      FROM treatments) 
SELECT count(*) FROM professionals WHERE professional_id NOT IN     (SELECT professional_id      FROM treatments) 
SELECT name,        age,        weight FROM Dogs WHERE abandoned_yn = 1 
SELECT name,        age,        weight FROM Dogs WHERE abandoned_yn = 1 
SELECT avg(age) FROM Dogs 
SELECT avg(age) FROM Dogs 
SELECT max(age) FROM Dogs 
SELECT max(age) FROM Dogs 
SELECT charge_type,        charge_amount FROM Charges 
SELECT charge_type,        charge_amount FROM Charges 
SELECT charge_amount FROM Charges ORDER BY charge_amount DESC LIMIT 1 
SELECT charge_amount FROM Charges ORDER BY charge_amount DESC LIMIT 1 
SELECT email_address,        cell_number,        home_phone FROM professionals 
SELECT email_address,        cell_number,        home_phone FROM professionals 
SELECT breed_code,        size_code FROM Dogs 
SELECT DISTINCT breed_code,                 size_code FROM Dogs 
SELECT professionals.first_name,        treatments.treatment_type_description FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id 
SELECT professionals.first_name,        treatments.treatment_type_description FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id 
SELECT count(DISTINCT Name) FROM singer 
SELECT count(*) FROM singer 
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC 
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC 
SELECT Birth_Year,        Citizenship FROM singer 
SELECT Birth_Year,        Citizenship FROM singer 
SELECT Name FROM singer WHERE Citizenship!= "France" 
SELECT Name FROM singer WHERE Citizenship!= 'French' 
SELECT Name FROM singer WHERE Birth_Year = 1948   OR Birth_Year = 1949 
SELECT Name FROM singer WHERE Birth_Year = 1948   OR Birth_Year = 1949 
SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1 
SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1 
SELECT Citizenship,        COUNT(*) FROM singer GROUP BY Citizenship 
SELECT Citizenship,        COUNT(*) FROM singer GROUP BY Citizenship 
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1 
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1 
SELECT Citizenship,        max(Net_Worth_Millions) FROM singer GROUP BY Citizenship 
SELECT Citizenship,        max(Net_Worth_Millions) FROM singer GROUP BY Citizenship 
SELECT Title,        singer.Name FROM song JOIN singer ON song.Singer_ID = singer.Singer_ID 
SELECT Title,        Singer_ID FROM song 
SELECT DISTINCT singer.Name FROM song JOIN singer ON song.Singer_ID = singer.Singer_ID WHERE song.Sales > 300000 
SELECT DISTINCT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000 
SELECT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Name HAVING COUNT(*) > 1 
SELECT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Name HAVING COUNT(*) > 1 
SELECT singer.Name,        song.Sales FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID 
SELECT singer.Name,        sum(song.Sales) FROM song JOIN singer ON song.Singer_ID = singer.Singer_ID GROUP BY singer.Name 
SELECT Name FROM singer WHERE Singer_ID NOT IN     (SELECT Singer_ID      FROM song) 
SELECT Name FROM singer WHERE Singer_ID NOT IN     (SELECT Singer_ID      FROM song) 
SELECT Citizenship FROM singer WHERE Birth_Year < 1945 INTERSECT   SELECT Citizenship   FROM singer WHERE Birth_Year > 1955 
SELECT Citizenship FROM singer WHERE Birth_Year < 1945 INTERSECT   SELECT Citizenship   FROM singer WHERE Birth_Year > 1955 
SELECT count(*) FROM Other_Available_Features 
SELECT Ref_Feature_Types.feature_type_name FROM Ref_Feature_Types JOIN Other_Available_Features ON Ref_Feature_Types.feature_type_code = Other_Available_Features.feature_type_code WHERE Other_Available_Features.feature_name = "AirCon" 
SELECT property_type_description FROM Ref_Property_Types WHERE property_type_code =     (SELECT property_type_code      FROM properties) 
SELECT property_name FROM properties WHERE property_type_code = 'House'   OR property_type_code = 'Apartment'   AND room_count > 1 
