SELECT count(*) FROM singer 
SELECT count(*) FROM singer 
SELECT Name,        Country,        Age FROM singer ORDER BY Age 
SELECT Name,        Country,        Age FROM singer ORDER BY Age DESC 
SELECT avg(Age),        min(Age),        max(Age) FROM singer WHERE Country = "France" 
SELECT avg(Age),        min(Age),        max(Age) FROM singer WHERE Country = "France" 
SELECT Song_name,        Song_release_year FROM singer ORDER BY Age ASC LIMIT 1 
SELECT Song_name,        Song_release_year FROM singer ORDER BY Age ASC 
SELECT DISTINCT country FROM singer WHERE age > 20 
SELECT DISTINCT country FROM singer WHERE age > 20 
SELECT Country,        COUNT(*) FROM singer GROUP BY Country 
SELECT Country,        COUNT(*) FROM singer GROUP BY Country 
SELECT Song_Name FROM singer WHERE Age >     (SELECT avg(Age)      FROM singer) 
SELECT Song_Name FROM singer WHERE Age >     (SELECT avg(Age)      FROM singer) 
SELECT LOCATION,        NAME FROM stadium WHERE capacity BETWEEN 5000 AND 10000 
SELECT LOCATION,        NAME FROM stadium WHERE capacity BETWEEN 5000 AND 10000 
SELECT max(Capacity),        avg(Capacity) FROM stadium 
SELECT avg(Capacity),        max(Capacity) FROM stadium 
SELECT name,        capacity FROM stadium ORDER BY avg(capacity) DESC LIMIT 1 
SELECT name,        capacity FROM stadium ORDER BY avg(capacity) DESC LIMIT 1 
SELECT count(*) FROM concert WHERE YEAR = 2014   OR YEAR = 2015 
SELECT count(*) FROM concert WHERE YEAR = 2014   OR YEAR = 2015 
SELECT stadium.Name,        count(*) FROM concert JOIN stadium ON concert.Stadium_ID = stadium.Stadium_ID GROUP BY stadium.Name 
SELECT stadium.Name,        count(*) FROM concert JOIN stadium ON concert.Stadium_ID = stadium.Stadium_ID GROUP BY stadium.Name 
SELECT stadium.name,        stadium.capacity FROM concert JOIN stadium ON concert.stadium_id = stadium.stadium_id WHERE concert.year = 2014   OR concert.year > 2014 GROUP BY stadium.name ORDER BY count(*) DESC LIMIT 1 
SELECT stadium.name,        stadium.capacity FROM concert JOIN stadium ON concert.stadium_id = stadium.stadium_id WHERE concert.year > 2013 GROUP BY stadium.stadium_id ORDER BY count(*) DESC LIMIT 1 
SELECT YEAR FROM concert GROUP BY YEAR ORDER BY COUNT(*) DESC LIMIT 1 
SELECT YEAR FROM concert GROUP BY YEAR ORDER BY COUNT(*) DESC LIMIT 1 
SELECT name FROM stadium WHERE stadium_id NOT IN     (SELECT stadium_id      FROM concert) 
SELECT name FROM stadium WHERE stadium_id NOT IN     (SELECT stadium_id      FROM concert) 
SELECT country FROM singer WHERE age > 40   AND age < 30 
SELECT name FROM stadium WHERE stadium_id NOT IN     (SELECT stadium_id      FROM concert      WHERE YEAR = 2014) 
SELECT name FROM stadium WHERE stadium_id NOT IN     (SELECT stadium_id      FROM concert      WHERE YEAR = 2014) 
SELECT concert.theme,        count(*) FROM singer_in_concert JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID GROUP BY concert.theme 
SELECT concert.theme,        COUNT(*) FROM singer_in_concert JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID GROUP BY concert.theme 
SELECT singer.Name,        count(*) FROM singer_in_concert JOIN singer ON singer_in_concert.Singer_ID = singer.Singer_ID GROUP BY singer.Name 
SELECT singer.Name,        count(*) FROM singer_in_concert JOIN singer ON singer_in_concert.Singer_ID = singer.Singer_ID GROUP BY singer.Name 
SELECT singer.Name FROM singer_in_concert JOIN singer ON singer_in_concert.Singer_ID = singer.Singer_ID JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID WHERE concert.Year = 2014 
SELECT singer.Name FROM singer_in_concert JOIN singer ON singer_in_concert.Singer_ID = singer.Singer_ID JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID WHERE concert.Year = 2014 
SELECT Name,        Country FROM singer WHERE Song_Name LIKE '%Hey%' 
SELECT Name,        Country FROM singer WHERE Song_Name LIKE '%Hey%' 
SELECT stadium.name,        stadium.location FROM concert JOIN stadium ON concert.stadium_id = stadium.stadium_id WHERE concert.year = 2014   OR concert.year = 2015 
SELECT stadium.name,        stadium.location FROM concert JOIN stadium ON concert.stadium_id = stadium.stadium_id WHERE concert.year = 2014 INTERSECT   SELECT stadium.name,          stadium.location   FROM concert   JOIN stadium ON concert.stadium_id = stadium.stadium_id WHERE concert.year = 2015 
SELECT count(*) FROM concert JOIN stadium ON concert.Stadium_ID = stadium.Stadium_ID WHERE stadium.Capacity =     (SELECT max(Capacity)      FROM stadium) 
SELECT count(*) FROM concert JOIN stadium ON concert.Stadium_ID = stadium.Stadium_ID WHERE stadium.Capacity =     (SELECT max(Capacity)      FROM stadium) 
SELECT count(*) FROM Pets WHERE weight > 10 
SELECT count(*) FROM Pets WHERE weight > 10 
SELECT weight FROM Pets WHERE pet_age =     (SELECT min(pet_age)      FROM Pets) 
SELECT pet_age,        weight FROM Pets ORDER BY pet_age LIMIT 1 
SELECT max(weight),        pettype FROM Pets GROUP BY pettype 
SELECT max(weight),        pettype FROM Pets GROUP BY pettype 
SELECT count(*) FROM student JOIN has_pet ON student.stuid = has_pet.stuid WHERE student.age > 20 
SELECT count(*) FROM student JOIN has_pet ON student.stuid = has_pet.stuid WHERE student.age > 20 
SELECT count(*) FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.sex = 'F' GROUP BY has_pet.stuid HAVING count(*) = 1 
SELECT count(*) FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.sex = 'F' GROUP BY has_pet.stuid HAVING count(*) = 1 
SELECT count(DISTINCT pettype) FROM Pets 
SELECT count(DISTINCT pettype) FROM Pets 
SELECT fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = "cat"   OR pets.pettype = "dog" 
SELECT DISTINCT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = "cat"   OR pets.pettype = "dog" 
SELECT DISTINCT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = "cat" INTERSECT   SELECT DISTINCT student.fname   FROM student   JOIN has_pet ON student.stuid = has_pet.stuid   JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = "dog" 
SELECT DISTINCT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = "cat" INTERSECT   SELECT DISTINCT student.fname   FROM student   JOIN has_pet ON student.stuid = has_pet.stuid   JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = "dog" 
SELECT major,        age FROM student WHERE stuid NOT IN     (SELECT stuid      FROM has_pet      JOIN pet ON has_pet.petid = pet.petid      JOIN pets ON has_pet.stuid = pets.stuid      WHERE pets.pettype = "cat") 
SELECT major,        STU_AGE FROM STUDENT WHERE major!= "Pet" EXCEPT SELECT major,        STU_AGE FROM STUDENT JOIN HAS_PET ON STU_ID = HAS_PET.STU_ID JOIN PETS ON HAS_PET.PET_ID = PETS.PET_ID WHERE PETS.pet_type = "Cat" 
SELECT StuID FROM Student EXCEPT SELECT StuID FROM Has_pet JOIN Pets ON Has_pet.petid = Pets.petid WHERE Pets.pettype = "Cat" 
SELECT StuID FROM Student EXCEPT SELECT StuID FROM Has_pet JOIN Pets ON Has_pet.petid = Pets.petid WHERE Pets.pettype = "Cat" 
SELECT fname,        age FROM student WHERE stuid NOT IN     (SELECT stuid      FROM has_pet      JOIN pets ON has_pet.petid = pets.petid      WHERE pets.pettype = "dog") 
SELECT DISTINCT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = "dog" EXCEPT SELECT DISTINCT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = "cat" 
SELECT pet_type,        weight FROM Pets ORDER BY pet_age LIMIT 1 
SELECT pet_type,        weight FROM Pets ORDER BY pet_age LIMIT 1 
SELECT pet_age,        weight FROM Pets WHERE pet_age > 1 
SELECT pet_age,        weight FROM Pets WHERE pet_age > 1 
SELECT pet_type,        avg(pet_age),        max(pet_age) FROM Pets GROUP BY pet_type 
SELECT pet_type,        avg(pet_age),        max(pet_age) FROM Pets GROUP BY pet_type 
SELECT pettype,        avg(weight) FROM Pets GROUP BY pettype 
SELECT pettype,        avg(weight) FROM Pets GROUP BY pettype 
SELECT fname,        age FROM student JOIN has_pet ON student.stuid = has_pet.stuid 
SELECT DISTINCT fname,                 age FROM student JOIN has_pet ON student.stuid = has_pet.stuid 
SELECT has_pet.petid FROM student JOIN has_pet ON student.stuid = has_pet.stuid WHERE student.lname = 'Smith' 
SELECT has_pet.petid FROM student JOIN has_pet ON student.stuid = has_pet.stuid WHERE student.lname = 'Smith' 
SELECT count(*),        student.stuid FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY student.stuid 
SELECT student.StuID,        count(*) FROM student JOIN has_pet ON student.StuID = has_pet.StuID GROUP BY student.StuID 
SELECT fname,        sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING count(*) > 1 
SELECT fname,        sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING count(*) > 1 
SELECT LName FROM STUDENT JOIN HAS_PET ON STUDENT.StuID = HAS_PET.StuID JOIN PETS ON HAS_PET.PetID = PETS.PetID WHERE PETS.pet_age = 3 
SELECT LName FROM STUDENT JOIN HAS_PET ON STUDENT.StuID = HAS_PET.StuID JOIN PETS ON HAS_PET.PetID = PETS.PetID WHERE PETS.pet_age = 3   AND PETS.pettype = "cat"   AND HAS_PET.petid = PETS.PetID   AND LName = "Kathy" 
SELECT avg(age) FROM student WHERE stuid NOT IN     (SELECT stuid      FROM has_pet) 
SELECT avg(age) FROM student WHERE stuid NOT IN     (SELECT stuid      FROM has_pet) 
SELECT count(*) FROM continents 
SELECT count(*) FROM continents 
SELECT continents.continent,        continents.continent,        count(*) FROM continents JOIN countries ON continents.continent = countries.continent GROUP BY continents.continent 
SELECT continents.Continent,        continents.Continent,        count(*) FROM continents JOIN countries ON continents.Continent = countries.Continent GROUP BY continents.Continent 
SELECT count(*) FROM countries 
SELECT count(*) FROM countries 
SELECT car_makers.FullName,        car_makers.Maker,        count(*) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Maker 
SELECT car_makers.Maker,        car_makers.FullName,        count(*) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id 
SELECT car_names.Model FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.Horsepower LIMIT 1 
SELECT car_names.Model FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.Horsepower LIMIT 1 
SELECT car_names.Model FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight <     (SELECT avg(Weight)      FROM cars_data) 
SELECT car_names.Model FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight <     (SELECT avg(Weight)      FROM cars_data) 
SELECT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON cars_data.id = car_names.MakeId WHERE model_list.Model = "1970" 
SELECT DISTINCT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON cars_data.id = car_names.MakeId WHERE model_list.Model = "1970"   AND cars_data.year = 1970 
SELECT car_names.Make,        cars_data.Year FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId ORDER BY cars_data.Year LIMIT 1 
SELECT car_names.Make,        cars_data.Year FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId ORDER BY cars_data.Year LIMIT 1 
SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year > 1980 
SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year > 1980 
SELECT continents.continent,        COUNT(*) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON countries.country = car_makers.country GROUP BY continents.continent 
SELECT continents.continent,        count(*) FROM continents JOIN countries ON continents.continent = countries.continent JOIN car_makers ON countries.countryid = car_makers.countryid GROUP BY continents.continent 
SELECT countries.CountryName FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId GROUP BY car_makers.Country ORDER BY count(*) DESC LIMIT 1 
SELECT countries.CountryName FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId GROUP BY car_makers.Country ORDER BY count(*) DESC LIMIT 1 
SELECT count(*),        car_makers.FullName FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id GROUP BY car_makers.FullName 
SELECT count(*),        car_makers.FullName,        car_makers.Maker FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id GROUP BY car_makers.Maker 
SELECT cars_data.Accelerate FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE car_names.Make = "amc"   AND car_names.MakeId = 100 
SELECT cars_data.Accelerate FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE car_names.Make = "amc"   AND car_names.MakeId = "sw" 
SELECT count(*) FROM car_makers JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = "France" 
SELECT count(*) FROM car_makers JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryName = "France" 
SELECT count(*) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id JOIN countries ON countries.countryid = car_makers.country WHERE countries.countryname = "usa"   AND car_makers.maker = "BMW"; 
SELECT count(*) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id JOIN countries ON countries.countryid = car_makers.country WHERE countries.countryName = "United States"   AND car_makers.maker = "BMW" 
SELECT avg(MPG) FROM cars_data WHERE Cylinders = 4 
SELECT avg(MPG) FROM cars_data WHERE Cylinders = 4 
SELECT min(Weight) FROM cars_data WHERE Cylinders = 8   AND YEAR = 1974 
SELECT min(Weight) FROM cars_data WHERE Cylinders = 8   AND YEAR = 1974 
SELECT Maker,        Model FROM model_list 
SELECT Maker,        Model FROM model_list 
SELECT countries.CountryName,        car_makers.Country FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY car_makers.Country HAVING count(*) >= 1 
SELECT countries.CountryName,        car_makers.Country FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country 
SELECT count(*) FROM cars_data WHERE horsepower > 150 
SELECT count(*) FROM cars_data WHERE horsepower > 150 
SELECT avg(Weight),        YEAR FROM cars_data GROUP BY YEAR 
SELECT avg(Weight),        YEAR FROM cars_data GROUP BY YEAR 
SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING count(*) >= 3 
SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING count(*) >= 3 
SELECT cars_data.horsepower,        car_names.make FROM car_names JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.cylinders = 3 
SELECT cars_data.horsepower,        car_names.make FROM car_names JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.cylinders = 3   AND cars_data.horsepower >     (SELECT max(horsepower)      FROM cars_data      WHERE cylinders = 3) 
SELECT car_names.model FROM car_names JOIN cars_data ON car_names.makeid = cars_data.id GROUP BY cars_data.id ORDER BY max(cars_data.MPG) DESC LIMIT 1 
SELECT car_names.Model FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.MPG DESC LIMIT 1 
SELECT avg(Horsepower) FROM cars_data WHERE YEAR < 1980 
SELECT avg(Horsepower) FROM cars_data WHERE YEAR < 1980 
SELECT avg(cars_data.edispl) FROM car_names JOIN cars_data ON car_names.makeid = cars_data.id WHERE car_names.model = "volvo" 
SELECT avg(cars_data.edispl) FROM car_names JOIN cars_data ON car_names.makeid = cars_data.id WHERE car_names.model = "Volvo" 
SELECT max(Accelerate),        Cylinders FROM cars_data GROUP BY Cylinders 
SELECT max(Accelerate) FROM cars_data 
SELECT model FROM car_names GROUP BY model ORDER BY count(*) DESC LIMIT 1 
SELECT Model FROM car_names GROUP BY Model ORDER BY count(*) DESC LIMIT 1 
SELECT count(*) FROM cars_data WHERE Cylinders > 4 
SELECT count(*) FROM cars_data WHERE Cylinders > 4 
SELECT count(*) FROM cars_data WHERE YEAR = 1980 
SELECT count(*) FROM cars_data WHERE YEAR = 1980 
SELECT count(*) FROM car_makers JOIN model_list ON car_makers.id = model_list.maker WHERE car_makers.fullname = "American Motor Company" 
SELECT count(*) FROM car_makers JOIN model_list ON car_makers.id = model_list.maker WHERE car_makers.fullname = "American Motor Company" 
SELECT car_makers.FullName,        model_list.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING count(*) > 3 
SELECT car_makers.Maker,        model_list.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING count(*) > 3 
SELECT DISTINCT car_names.model FROM car_names JOIN model_list ON car_names.model = model_list.model JOIN car_makers ON car_makers.id = model_list.maker JOIN cars_data ON cars_data.id = car_names.makeid WHERE car_makers.fullname = "General Motors"   OR cars_data.weight > 3500 
SELECT DISTINCT model_list.model FROM car_names JOIN model_list ON car_names.model = model_list.model JOIN car_makers ON car_makers.id = car_names.maker JOIN cars_data ON cars_data.id = car_makers.id WHERE car_makers.fullname = "General Motors"   OR cars_data.weight > 3500 
SELECT YEAR FROM cars_data WHERE Weight >= 3000   AND Weight <= 4000 
SELECT DISTINCT YEAR FROM cars_data WHERE Weight < 4000 INTERSECT   SELECT YEAR   FROM cars_data WHERE Weight > 3000 
SELECT Horsepower FROM cars_data ORDER BY Accelerate DESC LIMIT 1 
SELECT Horsepower FROM cars_data ORDER BY Accelerate DESC LIMIT 1 
SELECT cars_data.Cylinders FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE car_names.Model = "volvo" ORDER BY cars_data.Accelerate LIMIT 1 
SELECT cars_data.Cylinders FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE car_names.Model = "volvo" ORDER BY cars_data.Accelerate LIMIT 1 
SELECT count(*) FROM cars_data WHERE Accelerate >     (SELECT max(Accelerate)      FROM cars_data) 
SELECT count(*) FROM cars_data WHERE Accelerate >     (SELECT max(Accelerate)      FROM cars_data) 
SELECT count(*) FROM countries JOIN car_makers ON countries.Country = car_makers.Country GROUP BY countries.Country HAVING count(*) > 2 
SELECT count(*) FROM countries JOIN car_makers ON countries.Country = car_makers.Country GROUP BY countries.Country HAVING count(*) > 2 
SELECT count(*) FROM cars_data WHERE Cylinders > 6 
SELECT count(*) FROM cars_data WHERE Cylinders > 6 
SELECT car_names.model FROM car_names JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1 
SELECT car_names.model FROM car_names JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1 
SELECT car_names.MakeId,        car_names.Make FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.horsepower <     (SELECT min(horsepower)      FROM cars_data) EXCEPT SELECT car_names.MakeId,        car_names.Make FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.horsepower >     (SELECT max(horsepower)      FROM cars_data) 
SELECT car_names.MakeId,        car_names.Make FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.horsepower < 4 
SELECT max(mpg) FROM cars_data WHERE Cylinders = 8   AND YEAR < 1980 
SELECT max(mpg) FROM cars_data WHERE Cylinders = 8   AND YEAR < 1980 
SELECT model_list.model FROM model_list JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON model_list.model = cars_data.id JOIN car_makers ON cars_data.id = car_makers.id WHERE model_list.model!= "Ford Motor Company"   AND cars_data.weight < 3500 
SELECT DISTINCT model_list.model FROM model_list JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON model_list.model = cars_data.id JOIN car_makers ON cars_data.id = car_makers.id WHERE cars_data.weight < 3500 EXCEPT SELECT model_list.model FROM model_list JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON model_list.model = cars_data.id JOIN car_makers ON cars_data.id = car_makers.id WHERE car_makers.fullname = "Ford Motor Company" 
SELECT countryid FROM countries WHERE countryid NOT IN     (SELECT country      FROM car_makers) 
SELECT countryid FROM countries WHERE countryid NOT IN     (SELECT country      FROM car_makers) 
SELECT car_makers.id,        car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON car_names.model = model_list.model GROUP BY car_makers.id HAVING count(*) >= 2   AND count(*) > 3 
SELECT car_makers.id,        car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON car_names.model = model_list.model GROUP BY car_makers.id HAVING count(*) >= 2   AND count(*) > 3 
SELECT car_makers.Country,        countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker WHERE car_makers.Maker > 3   OR countries.CountryName = 'Italy'   OR countries.CountryName = 'France'   OR countries.CountryName = 'Germany'   OR countries.CountryName = 'Spain'   OR countries.CountryName = 'United Kingdom'   OR countries.CountryName = 'Canada'   OR countries.CountryName = 'Japan'   OR countries.CountryName = 'Australia'   OR countries.CountryName = 'Netherlands'   OR countries.CountryName = 'Switzerland'   OR countries.CountryName = 'Denmark'   OR countries.CountryName = 'Norway'   OR countries.CountryName = 'Sweden'   OR countries.CountryName = 'Norway'   OR countries.CountryName = 'Pol
SELECT car_makers.Country,        countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Country HAVING count(*) > 3 UNION SELECT car_makers.Country,        countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Country HAVING model = "Fiat" 
SELECT country FROM airlines WHERE Airline = "JetBlue Airways" 
SELECT country FROM airlines WHERE Airline = "Jetblue Airways" 
SELECT Abbreviation FROM airlines WHERE Airline = "JetBlue Airways" 
SELECT Abbreviation FROM airlines WHERE Airline = "Jetblue Airways" 
SELECT Airline,        Abbreviation FROM airlines WHERE Country = "USA" 
SELECT Airline,        Abbreviation FROM airlines WHERE Country = "USA" 
SELECT AirportCode,        AirportName FROM airports WHERE City = "Anthony" 
SELECT AirportCode,        AirportName FROM airports WHERE City = "Anthony" 
SELECT count(*) FROM airlines 
SELECT count(*) FROM airlines 
SELECT count(*) FROM airports; 
SELECT count(*) FROM airports 
SELECT count(*) FROM flights 
SELECT count(*) FROM flights 
SELECT Airline FROM airlines WHERE Abbreviation = 'UAL' 
SELECT Airline FROM airlines WHERE Abbreviation = 'UAL' 
SELECT count(*) FROM airlines WHERE country = 'USA' 
SELECT count(*) FROM airlines WHERE country = 'USA' 
SELECT city,        country FROM airports WHERE AirportCode = "ALT" 
SELECT city,        country FROM airports WHERE AirportCode = "ALT" 
SELECT AirportName FROM airports WHERE AirportCode = 'AKO'; 
SELECT AirportName FROM airports WHERE AirportCode = 'AKO' 
SELECT AirportName FROM airports WHERE City = 'Aberdeen' 
SELECT AirportName FROM airports WHERE AirportCode = "ABZ" 
SELECT count(*) FROM flights JOIN sourceairport ON flights.sourceairport = sourceairport.airportid WHERE sourceairport.city = 'APG' 
SELECT count(*) FROM flights WHERE sourceairport = 'APG' 
SELECT count(*) FROM flights WHERE DestAirport = "ATL" 
SELECT count(*) FROM flights WHERE DestAirport = "ATL" 
SELECT count(*) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = "Aberdeen" 
SELECT count(*) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = "Aberdeen" 
SELECT count(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = "Aberdeen" 
SELECT count(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = "Aberdeen" 
SELECT count(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode JOIN flights ON flights.Airline = flights.Airline AND flights.DestAirport = airports.AirportCode WHERE airports.City = 'Aberdeen'   AND airports.AirportCode = 'Ashley' 
SELECT count(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode JOIN flights ON flights.Airline = flights.Airline AND flights.DestAirport = airports.AirportCode AND airports.City = "Aberdeen" AND airports.AirportCode = "ASH" 
SELECT count(*) FROM flights JOIN airlines ON flights.Airline = airlines.Airline WHERE airlines.Airline = 'JetBlue Airways' 
SELECT count(*) FROM flights JOIN airlines ON flights.Airline = airlines.Airline WHERE airlines.Airline = "JetBlue Airways" 
SELECT count(*) FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE airlines.Airline = 'United Airlines'   AND flights.DestAirport = 'ASY' 
SELECT count(*) FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE airlines.Airline = "United Airlines"   AND flights.DestAirport = "ASY" 
SELECT count(*) FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE airlines.airline = 'United Airlines'   AND flights.sourceairport = 'AHD' 
SELECT count(*) FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE airlines.Airline = "United Airlines"   AND flights.sourceairport = "AHD" 
SELECT count(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode JOIN airlines ON airlines.uid = flights.Airline WHERE airlines.Airline = 'United Airlines'   AND airports.City = 'Aberdeen' 
SELECT count(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode JOIN airlines ON airlines.uid = flights.Airline WHERE airlines.Airline = "United Airlines"   AND airports.City = "Aberdeen" 
SELECT airports.City FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport GROUP BY airports.City ORDER BY count(*) DESC LIMIT 1 
SELECT airports.City FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport GROUP BY airports.City ORDER BY count(*) DESC LIMIT 1 
SELECT airports.City FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport GROUP BY airports.City ORDER BY count(*) DESC LIMIT 1 
SELECT airports.City FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport GROUP BY airports.City ORDER BY count(*) DESC LIMIT 1 
SELECT airports.AirportCode FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport GROUP BY airports.AirportCode ORDER BY count(*) DESC LIMIT 1 
SELECT airports.AirportCode FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport GROUP BY airports.AirportCode ORDER BY count(*) DESC LIMIT 1 
SELECT airports.AirportCode FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport GROUP BY airports.AirportCode ORDER BY count(*) LIMIT 1 
SELECT airports.AirportCode FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport GROUP BY airports.AirportCode ORDER BY count(*) LIMIT 1 
SELECT Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline GROUP BY Airline ORDER BY count(*) DESC LIMIT 1 
SELECT Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline GROUP BY Airline ORDER BY count(*) DESC LIMIT 1 
SELECT Abbreviation,        Country FROM airlines GROUP BY Abbreviation ORDER BY count(*) LIMIT 1 
SELECT Abbreviation,        Country FROM airlines GROUP BY Abbreviation ORDER BY count(*) LIMIT 1 
SELECT Airline FROM airlines WHERE uid IN     (SELECT Airline      FROM flights      WHERE sourceairport = 'AHD') 
SELECT Airline FROM airlines WHERE uid IN     (SELECT Airline      FROM flights      WHERE SourceAirport = "AHD") 
SELECT Airline FROM airlines WHERE DestAirport = 'AHD' 
SELECT Airline FROM airlines WHERE DestAirport = "AHD" 
SELECT Airline FROM airlines WHERE uid IN     (SELECT Airline      FROM flights      WHERE sourceairport = 'APG' INTERSECT        SELECT Airline        FROM flights WHERE sourceairport = 'CVO') 
SELECT Airline FROM airlines WHERE uid IN     (SELECT Airline      FROM flights      WHERE sourceairport = "APG" INTERSECT        SELECT Airline        FROM flights WHERE sourceairport = "CVO") 
SELECT Airline FROM airlines WHERE uid NOT IN     (SELECT Airline      FROM flights      WHERE SourceAirport = 'CVO') 
SELECT Airline FROM airlines WHERE uid NOT IN     (SELECT Airline      FROM flights      WHERE SourceAirport = "APG") 
SELECT Airline FROM airlines WHERE uid IN     (SELECT Airline      FROM flights      GROUP BY Airline      HAVING count(*) >= 10) 
SELECT Airline FROM airlines WHERE uid IN     (SELECT Airline      FROM flights      GROUP BY Airline      HAVING count(*) >= 10) 
SELECT Airline FROM airlines WHERE uid NOT IN     (SELECT Airline      FROM flights) GROUP BY Airline HAVING count(*) < 200 
SELECT Airline FROM airlines WHERE count(*) < 200 
SELECT flights.FlightNo FROM flights JOIN airlines ON flights.Airline = airlines.uid WHERE airlines.Airline = "United Airlines" 
SELECT flights.FlightNo FROM flights JOIN airlines ON flights.Airline = airlines.uid WHERE airlines.Airline = "United Airlines" 
SELECT FlightNo FROM flights WHERE SourceAirport = "APG" 
SELECT FlightNo FROM flights WHERE SourceAirport = "APG" 
SELECT FlightNo FROM flights WHERE DestAirport = "APG" 
SELECT FlightNo FROM flights WHERE DestAirport = "APG" 
SELECT flights.flightno FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = "Aberdeen" 
SELECT flights.flightno FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = "Aberdeen" 
SELECT flights.flightno FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = "Aberdeen" 
SELECT flights.flightno FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = "Aberdeen" 
SELECT count(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = "Aberdeen"   OR airports.City = "Abilene" 
SELECT count(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = "Aberdeen"   OR airports.City = "Abilene" 
SELECT airports.AirportCode FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport EXCEPT SELECT airports.AirportCode FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport 
SELECT airports.AirportCode FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport EXCEPT SELECT airports.AirportCode FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport 
SELECT count(*) FROM employee 
SELECT count(*) FROM employee 
SELECT Name FROM EMPLOYEE ORDER BY Age ASC 
SELECT name,        age FROM Employee ORDER BY age ASC 
SELECT city,        count(*) FROM employee GROUP BY city 
SELECT city,        count(*) FROM employee GROUP BY city 
SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING count(*) > 1 
SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING count(*) > 1 
SELECT count(*),        LOCATION FROM shop GROUP BY LOCATION 
SELECT LOCATION,        COUNT(*) FROM shop GROUP BY LOCATION 
SELECT manager_name,        district FROM shop ORDER BY number_products DESC LIMIT 1 
SELECT manager_name,        district FROM shop ORDER BY number_products DESC LIMIT 1 
SELECT min(Number_products),        max(Number_products) FROM shop 
SELECT min(Number_products),        max(Number_products) FROM shop 
SELECT name,        LOCATION,        district FROM shop ORDER BY number_products DESC 
SELECT name,        LOCATION,        district FROM shop ORDER BY number_products DESC 
SELECT name FROM shop WHERE number_products >     (SELECT avg(number_products)      FROM shop) 
SELECT name FROM shop WHERE number_products >     (SELECT avg(number_products)      FROM shop) 
SELECT employee.name FROM employee JOIN evaluation ON employee.employee_id = evaluation.employee_id GROUP BY employee.employee_id ORDER BY count(*) DESC LIMIT 1 
SELECT employee.name FROM employee JOIN evaluation ON employee.employee_id = evaluation.employee_id GROUP BY employee.employee_id ORDER BY count(*) DESC LIMIT 1 
SELECT employee.name FROM employee JOIN evaluation ON employee.employee_id = evaluation.employee_id ORDER BY evaluation.bonus DESC LIMIT 1 
SELECT employee.name FROM employee JOIN evaluation ON employee.employee_id = evaluation.employee_id ORDER BY evaluation.bonus DESC LIMIT 1 
SELECT name FROM employee EXCEPT SELECT employee.name FROM evaluation JOIN employee ON evaluation.employee_id = employee.employee_id 
SELECT name FROM employee EXCEPT SELECT employee.name FROM evaluation JOIN employee ON evaluation.employee_id = employee.employee_id 
SELECT shop.name FROM hiring JOIN shop ON hiring.shop_id = shop.shop_id GROUP BY hiring.shop_id ORDER BY count(*) DESC LIMIT 1 
SELECT shop.name FROM hiring JOIN shop ON hiring.shop_id = shop.shop_id GROUP BY hiring.shop_id ORDER BY count(*) DESC LIMIT 1 
SELECT name FROM shop WHERE shop_id NOT IN     (SELECT shop_id      FROM hiring) 
SELECT name FROM shop WHERE shop_id NOT IN     (SELECT shop_id      FROM hiring) 
SELECT count(*),        shop.name FROM hiring JOIN shop ON hiring.shop_id = shop.shop_id GROUP BY hiring.shop_id 
SELECT count(*),        shop.name FROM hiring JOIN shop ON hiring.shop_id = shop.shop_id GROUP BY hiring.shop_id 
SELECT sum(bonus) FROM evaluation 
SELECT sum(bonus) FROM evaluation 
SELECT * FROM hiring 
SELECT * FROM hiring 
SELECT District FROM shop WHERE Number_products < 3000 INTERSECT   SELECT District   FROM shop WHERE Number_products > 10000 
SELECT District FROM shop WHERE Number_products < 3000 INTERSECT   SELECT District   FROM shop WHERE Number_products > 10000 
SELECT count(DISTINCT LOCATION) FROM shop 
SELECT count(DISTINCT LOCATION) FROM shop 
SELECT count(*) FROM Documents 
SELECT count(*) FROM Documents 
SELECT document_id,        document_name,        document_description FROM Documents 
SELECT document_id,        document_name,        document_description FROM Documents 
SELECT Documents.document_name,        Documents.template_id FROM Documents JOIN Documents ON Documents.template_id = Documents.template_id WHERE Documents.document_description LIKE "%w%" 
SELECT Document_Name,        Template_ID FROM Documents WHERE Document_Description LIKE "%w%" 
SELECT Documents.document_id,        Documents.template_id,        Documents.document_description FROM Documents JOIN Documents ON Documents.document_id = Documents.document_id WHERE Documents.document_name = "Robbin CV" 
SELECT Documents.document_id,        Documents.template_id,        Documents.document_description FROM Documents JOIN Documents ON Documents.document_id = Documents.template_id WHERE Documents.document_name = "Robbin CV" 
SELECT count(DISTINCT template_id) FROM Documents 
SELECT count(DISTINCT template_id) FROM Documents 
SELECT count(*) FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Templates.Template_Type_Code = 'PPT' 
SELECT count(*) FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Templates.Template_Type_Code = "PPT" 
SELECT template_id,        count(*) FROM Documents GROUP BY template_id 
SELECT DISTINCT template_id,                 COUNT(*) FROM Documents GROUP BY template_id 
SELECT Documents.template_id,        Templates.template_type_code FROM Documents JOIN Templates ON Documents.template_id = Templates.template_id GROUP BY Documents.template_id ORDER BY count(*) DESC LIMIT 1 
SELECT Documents.template_id,        Templates.template_type_code FROM Documents JOIN Templates ON Documents.template_id = Templates.template_id GROUP BY Documents.template_id ORDER BY count(*) DESC LIMIT 1 
SELECT template_id FROM Documents GROUP BY template_id HAVING count(*) > 1 
SELECT DISTINCT template_id FROM Documents GROUP BY template_id HAVING count(*) > 1 
SELECT template_id FROM templates EXCEPT SELECT template_id FROM documents 
SELECT template_id FROM templates EXCEPT SELECT template_id FROM documents 
SELECT count(*) FROM Templates 
SELECT count(*) FROM Templates 
SELECT template_id,        version_number,        template_type_code FROM Templates 
SELECT template_id,        version_number,        template_type_code FROM Templates 
SELECT DISTINCT Template_Type_Code FROM Templates 
SELECT DISTINCT Template_Type_Code FROM Templates 
SELECT template_id FROM templates WHERE template_type_code = "PP"   OR template_type_code = "PPT" 
SELECT template_id FROM templates WHERE template_type_code = "PP"   OR template_type_code = "PPT" 
SELECT count(*) FROM Templates WHERE Template_Type_Code = "CV" 
SELECT count(*) FROM Templates WHERE Template_Type_Code = "CV" 
SELECT template_type_code,        version_number FROM templates WHERE version_number > 5 
SELECT TYPE_CODE,        VERSION_NUMBER FROM Templates WHERE VERSION_NUMBER > 5 
SELECT Template_Type_Code,        count(*) FROM Templates GROUP BY Template_Type_Code 
SELECT Template_Type_Code,        count(*) FROM Templates GROUP BY Template_Type_Code 
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY count(*) DESC LIMIT 1 
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY count(*) DESC LIMIT 1 
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING count(*) < 3 
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING count(*) < 3 
SELECT min(Version_Number),        template_type_code FROM Templates GROUP BY template_type_code 
SELECT min(Version_Number),        template_type_code FROM Templates GROUP BY template_type_code 
SELECT Templates.Template_Type_Code FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Documents.Document_Name = "Data base" 
SELECT Templates.Template_Type_Code FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Documents.Document_Name = "Data base" 
SELECT Documents.Document_Name FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Templates.Template_Type_Code = "BK" 
SELECT Documents.Document_Name FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Templates.Template_Type_Code = "BK" 
SELECT Templates.Template_Type_Code,        count(*) FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Templates.Template_Type_Code 
SELECT Templates.Template_Type_Code,        count(*) FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Templates.Template_Type_Code 
SELECT Templates.Template_Type_Code FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Templates.Template_Type_Code ORDER BY count(*) DESC LIMIT 1 
SELECT templates.template_type_code FROM templates JOIN documents ON templates.template_id = documents.template_id GROUP BY templates.template_type_code ORDER BY count(*) DESC LIMIT 1 
SELECT Template_Type_Code FROM Templates EXCEPT SELECT Template_Type_Code FROM Documents 
SELECT Template_Type_Code FROM Templates EXCEPT SELECT Template_Type_Code FROM Documents 
SELECT template_type_code,        template_type_description FROM Ref_template_types 
SELECT template_type_code,        template_type_description FROM Ref_template_types 
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = "AD" 
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = "AD" 
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = "Book" 
SELECT template_type_code FROM Ref_template_types WHERE template_type_description = "Book" 
SELECT DISTINCT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID 
SELECT Ref_template_types.template_type_description FROM Ref_template_types JOIN Templates ON Ref_template_types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id GROUP BY Ref_template_types.template_type_code HAVING count(*) > 1 
SELECT templates.template_id FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code WHERE ref_template_types.template_type_description = "Presentation" 
SELECT templates.template_id FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code WHERE ref_template_types.template_type_description = 'Presentation' 
SELECT count(*) FROM paragraphs 
SELECT count(*) FROM paragraphs 
SELECT count(*) FROM paragraphs JOIN documents ON paragraphs.document_id = documents.document_id WHERE documents.document_name = 'Summer Show' 
SELECT count(*) FROM paragraphs JOIN documents ON paragraphs.document_id = documents.document_id WHERE documents.document_name = 'Summer Show' 
SELECT Other_Details FROM Paragraphs WHERE Paragraph_Text = "Korea" 
SELECT Other_Details FROM Paragraphs WHERE Paragraph_Text = "Korea" 
SELECT Paragraphs.paragraph_id,        Paragraphs.paragraph_text FROM Paragraphs JOIN Documents ON Paragraphs.document_id = Documents.document_id WHERE Documents.document_name = 'Welcome to NY' 
SELECT Paragraphs.document_id,        Paragraphs.paragraph_text FROM Paragraphs JOIN Documents ON Paragraphs.document_id = Documents.document_id WHERE Documents.document_name = 'Welcome to NY' 
SELECT Paragraphs.Paragraph_Text FROM Paragraphs JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID WHERE Documents.Document_Name = "Customer reviews" 
SELECT Paragraphs.Paragraph_Text FROM Paragraphs JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID WHERE Documents.Document_Name = 'Customer reviews' 
SELECT Document_ID,        count(*) FROM Paragraphs GROUP BY Document_ID ORDER BY Document_ID 
SELECT Document_ID,        COUNT(*) FROM Paragraphs GROUP BY Document_ID ORDER BY Document_ID 
SELECT Documents.document_id,        Documents.document_name,        count(*) FROM paragraphs JOIN documents ON paragraphs.document_id = documents.document_id GROUP BY Documents.document_id 
SELECT Documents.document_name,        count(*) FROM paragraphs JOIN Documents ON paragraphs.document_id = Documents.document_id GROUP BY Documents.document_name 
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(*) >= 2 
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(*) >= 2 
SELECT Documents.document_id,        Documents.document_name FROM paragraphs JOIN documents ON paragraphs.document_id = documents.document_id GROUP BY Documents.document_id ORDER BY count(*) DESC LIMIT 1 
SELECT Documents.document_id,        Documents.document_name FROM paragraphs JOIN documents ON paragraphs.document_id = documents.document_id GROUP BY Documents.document_id ORDER BY count(*) DESC LIMIT 1 
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID ORDER BY count(*) LIMIT 1 
SELECT Document_ID FROM paragraphs GROUP BY Document_ID ORDER BY count(*) LIMIT 1 
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(*) BETWEEN 1 AND 2 
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(*) BETWEEN 1 AND 2 
SELECT Document_ID FROM paragraphs WHERE Paragraph_Text = "Brazil"   OR Paragraph_Text = "Ireland" 
SELECT Document_ID FROM paragraphs WHERE Paragraph_Text = 'Brazil' INTERSECT   SELECT Document_ID   FROM paragraphs WHERE Paragraph_Text = 'Ireland' 
SELECT count(*) FROM teacher 
SELECT count(*) FROM teacher 
SELECT Name FROM teacher ORDER BY Age ASC 
SELECT Name FROM teacher ORDER BY Age ASC 
SELECT Age,        Hometown FROM teacher 
SELECT Age,        Hometown FROM teacher 
SELECT Name FROM teacher WHERE Hometown!= "Little Lever Urban District" 
SELECT Name FROM teacher WHERE Hometown!= "Little Lever Urban District" 
SELECT Name FROM teacher WHERE Age = 32   OR Age = 33 
SELECT Name FROM teacher WHERE Age = 32   OR Age = 33 
SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1 
SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1 
SELECT Hometown,        COUNT(*) FROM teacher GROUP BY Hometown 
SELECT Hometown,        COUNT(*) FROM teacher GROUP BY Hometown 
SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1 
SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1 
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*) >= 2 
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*) >= 2 
SELECT teacher.Name,        course.Course FROM course_arrange JOIN course ON course_arrange.Course_ID = course.Course_ID JOIN teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID 
SELECT course.Course,        teacher.Name FROM course_arrange JOIN course ON course_arrange.Course_ID = course.Course_ID JOIN teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID 
SELECT teacher.Name,        course.Course FROM course_arrange JOIN course ON course_arrange.Course_ID = course.Course_ID JOIN teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID ORDER BY teacher.Name 
SELECT teacher.Name,        course.Course FROM course_arrange JOIN course ON course_arrange.Course_ID = course.Course_ID JOIN teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID ORDER BY teacher.Name 
SELECT teacher.Name FROM course_arrange JOIN course ON course_arrange.Course_ID = course.Course_ID JOIN teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID WHERE course.Course = "Math" 
SELECT teacher.Name FROM course_arrange JOIN course ON course_arrange.Course_ID = course.Course_ID JOIN teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID WHERE course.Course = "Math" 
SELECT teacher.Name,        count(*) FROM course_arrange JOIN teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID GROUP BY course_arrange.Teacher_ID 
SELECT teacher.Name,        count(*) FROM course_arrange JOIN teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID GROUP BY course_arrange.Teacher_ID 
SELECT teacher.Name FROM course_arrange JOIN teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID GROUP BY course_arrange.Teacher_ID HAVING count(*) >= 2 
SELECT teacher.Name FROM course_arrange JOIN teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID GROUP BY course_arrange.Teacher_ID HAVING count(*) >= 2 
SELECT name FROM teacher WHERE teacher_id NOT IN     (SELECT teacher_id      FROM course_arrange) 
SELECT name FROM teacher WHERE teacher_id NOT IN     (SELECT teacher_id      FROM course_arrange) 
SELECT count(*) FROM visitor WHERE age < 30 
SELECT name FROM visitor WHERE level_of_membership > 4 ORDER BY level_of_membership 
SELECT avg(age) FROM visitor WHERE level_of_membership!= 4 
SELECT name,        level_of_membership FROM visitor WHERE level_of_membership > 4 ORDER BY age 
SELECT museum_id,        name FROM museum ORDER BY num_of_staff DESC LIMIT 1 
SELECT avg(Num_of_Staff) FROM museum WHERE Open_Year < 2009 
SELECT Open_Year,        Num_of_Staff FROM museum WHERE Name = "Plaza Museum" 
SELECT name FROM museum WHERE num_of_staff >     (SELECT min(num_of_staff)      FROM museum      WHERE open_year > 2010) 
SELECT visitor.ID,        visitor.Name,        visitor.Age FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID GROUP BY visit.visitor_ID HAVING count(*) > 1 
SELECT visitor.ID,        visitor.Name,        visitor.Level_of_membership FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID ORDER BY visit.Total_spent DESC LIMIT 1 
SELECT museum.Museum_ID,        museum.Name FROM museum JOIN visit ON museum.Museum_ID = visit.Museum_ID GROUP BY museum.Museum_ID ORDER BY count(*) DESC LIMIT 1 
SELECT name FROM museum WHERE museum_id NOT IN     (SELECT museum_id      FROM visit) 
SELECT visitor.Name,        visitor.Age FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID GROUP BY visit.visitor_ID ORDER BY count(*) DESC LIMIT 1 
SELECT avg(Num_of_Ticket),        max(Num_of_Ticket) FROM visit 
SELECT sum(visit.Total_spent) FROM visitor JOIN visit ON visitor.visitor_id = visit.visitor_id WHERE visitor.level_of_membership = 1 
SELECT visitor.Name FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID JOIN museum ON visit.museum_ID = museum.Museum_ID WHERE museum.Open_Year < 2011 INTERSECT   SELECT visitor.Name   FROM visitor   JOIN visit ON visitor.ID = visit.visitor_ID   JOIN museum ON visit.museum_ID = museum.Museum_ID WHERE museum.Open_Year > 2009 
SELECT count(*) FROM visitor JOIN museum ON visitor.ID = museum.visitor_ID JOIN visit ON visit.museum_ID = museum.Museum_ID WHERE museum.Open_Year < 2010 
SELECT count(*) FROM museum WHERE open_year > 2013   OR open_year < 2008 
SELECT count(*) FROM players 
SELECT count(*) FROM players 
SELECT sum(best_of) FROM matches 
SELECT count(*) FROM matches WHERE best_of > 0 
SELECT first_name,        birth_date FROM players WHERE country_code = "USA" 
SELECT first_name,        birth_date FROM players WHERE country_code = "USA" 
SELECT avg(loser_age),        avg(winner_age) FROM matches 
SELECT avg(loser_age),        avg(winner_age) FROM matches 
SELECT avg(winner_rank) FROM matches 
SELECT avg(winner_rank) FROM matches 
SELECT max(loser_rank) FROM matches 
SELECT loser_rank FROM matches GROUP BY loser_rank ORDER BY count(*) DESC LIMIT 1 
SELECT count(DISTINCT country_code) FROM players 
SELECT count(DISTINCT country_code) FROM players 
SELECT count(DISTINCT loser_name) FROM matches 
SELECT count(DISTINCT loser_name) FROM matches 
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*) > 10 
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*) > 10 
SELECT winner_name FROM matches WHERE YEAR = 2013 INTERSECT   SELECT winner_name   FROM matches WHERE YEAR = 2016 
SELECT winner_name FROM matches WHERE YEAR = 2013 INTERSECT   SELECT winner_name   FROM matches WHERE YEAR = 2016 
SELECT count(*) FROM matches WHERE YEAR = 2013   OR YEAR = 2016 
SELECT count(*) FROM matches WHERE YEAR = 2013   OR YEAR = 2016 
SELECT players.country_code,        players.first_name FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name = "WTA Championships" INTERSECT   SELECT players.country_code,          players.first_name   FROM players   JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name = "Australian Open" 
SELECT players.first_name,        players.country_code FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name = "WTA Championships" INTERSECT   SELECT players.first_name,          players.country_code   FROM players   JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name = "Australian Open" 
SELECT first_name,        country_code FROM players ORDER BY birth_date DESC LIMIT 1 
SELECT first_name,        country_code FROM players ORDER BY birth_date DESC LIMIT 1 
SELECT first_name,        last_name FROM players ORDER BY birth_date 
SELECT first_name,        last_name FROM players ORDER BY birth_date 
SELECT first_name,        last_name FROM players WHERE hand = 'L' ORDER BY birth_date 
SELECT first_name,        last_name FROM players WHERE hand = 'left' ORDER BY birth_date 
SELECT players.first_name,        players.country_code FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id ORDER BY sum(tours) DESC LIMIT 1 
SELECT players.first_name,        players.country_code FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id ORDER BY sum(tours) DESC LIMIT 1 
SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1 
SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1 
SELECT winner_name,        winner_rank_points FROM matches ORDER BY winner_rank_points DESC LIMIT 1 
SELECT winner_name,        winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1 
SELECT winner_name FROM matches WHERE tourney_name = "Australian Open" ORDER BY winner_rank_points DESC LIMIT 1 
SELECT winner_name FROM matches WHERE tourney_name = "Australian Open" ORDER BY winner_rank_points DESC LIMIT 1 
SELECT loser_name,        winner_name FROM matches ORDER BY minutes DESC LIMIT 1 
SELECT winner_name,        loser_name FROM matches ORDER BY minutes DESC LIMIT 1 
SELECT avg(rankings.ranking),        players.first_name FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id 
SELECT players.first_name,        avg(rankings.ranking) FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id 
SELECT sum(rankings.ranking_points),        players.first_name FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.first_name 
SELECT players.first_name,        sum(rankings.ranking_points) FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id 
SELECT country_code,        count(*) FROM players GROUP BY country_code 
SELECT country_code,        count(*) FROM players GROUP BY country_code 
SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1 
SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1 
SELECT country_code FROM players GROUP BY country_code HAVING count(*) > 50 
SELECT country_code FROM players GROUP BY country_code HAVING count(*) > 50 
SELECT sum(tours),        ranking_date FROM rankings GROUP BY ranking_date 
SELECT sum(tours),        ranking_date FROM rankings GROUP BY ranking_date 
SELECT count(*),        YEAR FROM matches GROUP BY YEAR 
SELECT count(*),        YEAR FROM matches GROUP BY YEAR 
SELECT winner_name,        winner_rank FROM matches ORDER BY winner_age LIMIT 3 
SELECT winner_name,        winner_rank FROM matches ORDER BY winner_age LIMIT 3 
SELECT count(DISTINCT winner_hand) FROM matches WHERE tourney_name = "WTA Championships"   AND winner_name = "left"; 
SELECT count(DISTINCT winner_hand) FROM matches WHERE tourney_name = "WTA Championships" 
SELECT players.first_name,        players.country_code,        players.birth_date FROM players JOIN matches ON players.player_id = matches.winner_id ORDER BY matches.winner_rank_points DESC LIMIT 1 
SELECT players.first_name,        players.country_code,        players.birth_date FROM players JOIN matches ON players.player_id = matches.winner_id ORDER BY matches.winner_rank_points DESC LIMIT 1 
SELECT count(*),        hand FROM players GROUP BY hand 
SELECT count(*),        hand FROM players GROUP BY hand 
SELECT count(*) FROM ship WHERE disposition_of_ship = 'Captured' 
SELECT name,        tonnage FROM ship ORDER BY name DESC 
SELECT name,        date,        result FROM battle 
SELECT killed,        max(killed),        min(killed) FROM death GROUP BY killed 
SELECT avg(injured),        id FROM death GROUP BY id 
SELECT death.id,        death.killed,        death.injured FROM death JOIN ship ON death.caused_by_ship_id = ship.id WHERE ship.tonnage = 't' 
SELECT battle.name,        battle.result FROM battle JOIN battle ON battle.bulgarian_commander!= 'Boril' 
SELECT battle.id,        battle.name FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.ship_type = 'Brig' 
SELECT battle.id,        battle.name FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON ship.id = death.caused_by_ship_id GROUP BY battle.id HAVING count(*) > 10 
SELECT ship.name,        count(*) FROM death JOIN ship ON death.caused_by_ship_id = ship.id GROUP BY death.caused_by_ship_id ORDER BY count(*) DESC LIMIT 1 
SELECT DISTINCT battle.name FROM battle JOIN battle ON battle.bulgarian_commander = 'Kaloyan' JOIN battle ON battle.latin_commander = 'Baldwin I' 
SELECT count(DISTINCT result) FROM battle 
SELECT count(*) FROM battle WHERE id NOT IN     (SELECT lost_in_battle      FROM ship      WHERE tonnage = '225') 
SELECT battle.name,        battle.date FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.name = 'Lettice' INTERSECT   SELECT battle.name,          battle.date   FROM battle   JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.name = 'HMS Atalanta' 
SELECT battle.name,        battle.result,        battle.bulgarian_commander FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.location = "English Channel" EXCEPT SELECT battle.name,        battle.result,        battle.bulgarian_commander FROM battle JOIN ship ON battle.id = ship.lost_in_battle 
SELECT note FROM death WHERE note LIKE '%East%' 
SELECT line_1,        line_2 FROM addresses 
SELECT line_1,        line_2 FROM addresses 
SELECT count(*) FROM COURSES 
SELECT count(*) FROM COURSES 
SELECT course_description FROM COURSES WHERE course_name = "Math" 
SELECT course_description FROM COURSES WHERE course_name = "Mathematics" 
SELECT zip_postcode FROM addresses WHERE city = "Port Chelsea" 
SELECT zip_postcode FROM addresses WHERE city = "Port Chelsea" 
SELECT departments.department_name,        departments.department_id FROM degree_programs JOIN departments ON degree_programs.department_id = departments.department_id GROUP BY degree_programs.department_id ORDER BY count(*) DESC LIMIT 1 
SELECT departments.department_name,        departments.department_id FROM degree_programs JOIN departments ON degree_programs.department_id = departments.department_id GROUP BY departments.department_id ORDER BY count(*) DESC LIMIT 1 
SELECT count(DISTINCT department_id) FROM degree_programs 
SELECT count(DISTINCT department_id) FROM degree_programs 
SELECT count(DISTINCT degree_summary_name) FROM degree_programs 
SELECT count(DISTINCT degree_summary_name) FROM degree_programs 
SELECT count(*) FROM departments JOIN degree_programs ON departments.department_id = degree_programs.department_id WHERE departments.department_name = "Engineering" 
SELECT count(*) FROM departments JOIN degree_programs ON departments.department_id = degree_programs.department_id WHERE departments.department_name = "Engineering" 
SELECT section_name,        section_description FROM Sections 
SELECT section_name,        section_description FROM Sections 
SELECT Courses.course_name,        Courses.course_id FROM Courses JOIN Sections ON Courses.course_id = Sections.course_id GROUP BY Courses.course_id HAVING count(*) <= 2 
SELECT Courses.course_name,        Sections.course_id FROM Courses JOIN Sections ON Courses.course_id = Sections.course_id GROUP BY Sections.course_id HAVING count(*) < 2 
SELECT section_name FROM SECTIONS ORDER BY section_name REVERSE 
SELECT section_name FROM SECTIONS ORDER BY section_name DESC 
SELECT semesters.semester_name,        student_enrolment.semester_id FROM semesters JOIN student_enrolment ON semesters.semester_id = student_enrolment.semester_id GROUP BY semesters.semester_name ORDER BY count(*) DESC LIMIT 1 
SELECT semesters.semester_name,        semesters.semester_id,        student_enrolment.student_enrolment_id FROM semesters JOIN student_enrolment ON semesters.semester_id = student_enrolment.semester_id GROUP BY semesters.semester_id ORDER BY count(*) DESC LIMIT 1 
SELECT department_description FROM departments WHERE department_name LIKE "%the computer%" 
SELECT department_description FROM departments WHERE department_name LIKE "%computer%" 
SELECT Students.first_name,        Students.middle_name,        Students.last_name,        Student_Enrolment.student_id FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id WHERE Students.first_name = "Kathleen"   AND Students.middle_name = "Kathy"   AND Students.last_name = "Hoegerich"   AND Student_Enrolment.semester = 1 
SELECT Students.first_name,        Students.middle_name,        Students.last_name,        Student_Enrolment.student_id FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id WHERE Students.first_name = "Sophie"   AND Students.middle_name = "Kathleen"   AND Students.last_name = "Homenick"   AND Student_Enrolment.semester = 1 
SELECT Students.first_name,        Students.middle_name,        Students.last_name FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id JOIN Degree_Programs ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id WHERE Degree_Programs.degree_summary_name = "Bachelor" 
SELECT Students.first_name,        Students.middle_name,        Students.last_name FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id JOIN Degree_Programs ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id WHERE Degree_Programs.degree_summary_name = "Bachelors" 
SELECT Degree_Programs.degree_summary_name FROM Degree_Programs JOIN Student_Enrolment ON Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id GROUP BY Degree_Programs.degree_summary_name ORDER BY count(*) DESC LIMIT 1 
SELECT Degree_Programs.degree_summary_name FROM Degree_Programs JOIN Student_Enrolment ON Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id GROUP BY Degree_Programs.degree_summary_name ORDER BY count(*) DESC LIMIT 1 
SELECT Degree_Programs.degree_program_id,        Degree_Programs.degree_summary_name FROM Degree_Programs JOIN Student_Enrolment ON Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id GROUP BY Degree_Programs.degree_program_id ORDER BY count(*) DESC LIMIT 1 
SELECT Degree_Programs.degree_program_id,        Degree_Programs.degree_summary_name FROM Degree_Programs JOIN Student_Enrolment ON Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id GROUP BY Degree_Programs.degree_program_id ORDER BY count(*) DESC LIMIT 1 
SELECT Students.student_id,        Students.first_name,        Students.middle_name,        Students.last_name,        count(*) FROM Students JOIN Student_enrolment ON Students.student_id = Student_enrolment.student_id GROUP BY Students.student_id ORDER BY count(*) DESC LIMIT 1 
SELECT Students.first_name,        Students.middle_name,        Students.last_name,        count(*) FROM Students JOIN Student_enrolment ON Students.student_id = Student_enrolment.student_id GROUP BY Students.student_id ORDER BY count(*) DESC LIMIT 1 
SELECT semester_name FROM semesters EXCEPT SELECT semesters.semester_name FROM semesters JOIN student_enrolment ON semesters.semester_id = student_enrolment.semester_id 
SELECT semester_name FROM semesters EXCEPT SELECT semesters.semester_name FROM semesters JOIN student_enrolment ON semesters.semester_id = student_enrolment.semester_id 
SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id 
SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id 
SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id GROUP BY Courses.course_name ORDER BY count(*) DESC LIMIT 1 
SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id GROUP BY Courses.course_name ORDER BY count(*) DESC LIMIT 1 
SELECT students.last_name FROM students JOIN addresses ON students.current_address_id = addresses.address_id JOIN student_enrolment ON students.student_id = student_enrolment.student_id WHERE addresses.state_province_county = "North Carolina" EXCEPT SELECT students.last_name FROM students JOIN addresses ON students.current_address_id = addresses.address_id JOIN student_enrolment ON students.student_id = student_enrolment.student_id WHERE addresses.state_province_county = "North Carolina"   AND student_enrolment.enrolled = 1 
SELECT students.last_name FROM students JOIN addresses ON students.current_address_id = addresses.address_id WHERE addresses.state_province_county = "North Carolina" EXCEPT SELECT students.last_name FROM students JOIN student_enrolment ON students.student_id = student_enrolment.student_id 
SELECT Transcripts.transcript_date,        Transcripts.transcript_id FROM Transcript_Contents JOIN Transcripts ON Transcript_Contents.transcript_id = Transcripts.transcript_id GROUP BY Transcripts.transcript_id HAVING count(*) >= 2 
SELECT Transcripts.transcript_date,        Transcripts.transcript_id FROM Transcript_Contents JOIN Transcripts ON Transcript_Contents.transcript_id = Transcripts.transcript_id GROUP BY Transcripts.transcript_id HAVING count(*) >= 2 
SELECT cell_mobile_number FROM Students WHERE first_name = "Timmothy"   AND last_name = "Ward"; 
SELECT cell_mobile_number FROM Students WHERE first_name = "Timmothy"   AND last_name = "Ward"; 
SELECT first_name,        middle_name,        last_name FROM Students WHERE date_first_registered =     (SELECT min(date_first_registered)      FROM Students) 
SELECT first_name,        middle_name,        last_name FROM Students WHERE date_first_registered =     (SELECT min(date_first_registered)      FROM Students) 
SELECT first_name,        middle_name,        last_name FROM Students WHERE date_left =     (SELECT min(date_left)      FROM Students) 
SELECT first_name,        middle_name,        last_name FROM Students ORDER BY date_left LIMIT 1 
SELECT first_name FROM students WHERE current_address_id!= permanent_address_id 
SELECT first_name FROM students WHERE permanent_address_id!= current_address_id 
SELECT addresses.address_id,        addresses.line_1,        addresses.line_2 FROM addresses JOIN students ON addresses.address_id = students.current_address_id GROUP BY addresses.address_id ORDER BY count(*) DESC LIMIT 1 
SELECT addresses.line_1,        addresses.line_2,        addresses.address_id FROM addresses JOIN students ON addresses.address_id = students.current_address_id GROUP BY addresses.address_id ORDER BY count(*) DESC LIMIT 1 
SELECT avg(transcript_date) FROM TRANSCRIPTS 
SELECT avg(transcript_date) FROM TRANSCRIPTS 
SELECT transcript_date,        other_details FROM TRANSCRIPTS ORDER BY transcript_date ASC LIMIT 1 
SELECT transcript_date,        other_details FROM TRANSCRIPTS ORDER BY transcript_date ASC LIMIT 1 
SELECT count(*) FROM TRANSCRIPTS 
SELECT count(*) FROM TRANSCRIPTS 
SELECT transcript_date FROM TRANSCRIPTS ORDER BY transcript_date DESC LIMIT 1 
SELECT transcript_date FROM TRANSCRIPTS ORDER BY transcript_date DESC LIMIT 1 
SELECT count(*),        transcript_contents.student_course_id FROM transcript_contents JOIN student_course_enrollment ON transcript_contents.student_course_id = student_course_enrollment.student_course_id GROUP BY transcript_contents.student_course_id HAVING count(*) <= 2 
SELECT max(student_course_id),        enrollment_id FROM TRANSCRIPT_CONTENTS GROUP BY enrollment_id 
SELECT Transcripts.transcript_date FROM Transcript_Contents JOIN Transcripts ON Transcript_Contents.transcript_id = Transcripts.transcript_id GROUP BY Transcripts.transcript_id ORDER BY count(*) LIMIT 1 
SELECT Transcripts.transcript_date,        Transcripts.transcript_id FROM Transcript_Contents JOIN Transcripts ON Transcript_Contents.transcript_id = Transcripts.transcript_id GROUP BY Transcripts.transcript_id ORDER BY count(*) LIMIT 1 
SELECT semester_id FROM degree_programs WHERE degree_summary_name = "Master" INTERSECT   SELECT semester_id   FROM student_enrolment   WHERE degree_program_id IN     (SELECT degree_program_id      FROM degree_programs      WHERE degree_summary_name = "Bachelor") 
SELECT semester_id FROM degree_programs JOIN student_enrolment ON degree_programs.degree_program_id = student_enrolment.degree_program_id WHERE degree_programs.degree_summary_name = "Masters" INTERSECT   SELECT semester_id   FROM degree_programs   JOIN student_enrolment ON degree_programs.degree_program_id = student_enrolment.degree_program_id WHERE degree_programs.degree_summary_name = "Bachelors" 
SELECT count(DISTINCT current_address_id) FROM Students 
SELECT DISTINCT current_address_id FROM Students 
SELECT other_student_details FROM Students ORDER BY other_student_details DESC 
SELECT other_student_details FROM Students ORDER BY other_student_details DESC 
SELECT section_name,        section_description FROM SECTIONS WHERE section_description = "h"; 
SELECT section_description FROM SECTIONS WHERE section_name = "h"; 
SELECT DISTINCT students.first_name FROM students JOIN addresses ON students.permanent_address_id = addresses.address_id WHERE addresses.country = "Haiti"   OR students.cell_mobile_number = "09700166582" 
SELECT Students.first_name FROM Students JOIN Addresses ON Students.permanent_address_id = Addresses.address_id WHERE Addresses.country = "Haiti"   OR Students.cell_mobile_number = "09700166582" 
SELECT Title FROM CARTOON ORDER BY Title 
SELECT Title FROM CARTOON ORDER BY Title 
SELECT title FROM cartoon WHERE directed_by = "Ben Jones" 
SELECT title FROM cartoon WHERE directed_by = "Ben Jones" 
SELECT count(*) FROM cartoon JOIN written_by ON cartoon.written_by = written_by.id WHERE written_by.name = "Joseph Kuhr"; 
SELECT count(*) FROM cartoon WHERE Written_by = "Joseph Kuhr" 
SELECT title,        directed_by FROM cartoon ORDER BY original_air_date 
SELECT title,        directed_by FROM cartoon ORDER BY original_air_date 
SELECT Title FROM CARTOON WHERE Directed_by = "Ben Jones"   OR Directed_by = "Brandon Vietti" 
SELECT Title FROM CARTOON WHERE Directed_by = "Ben Jones"   OR Directed_by = "Brandon Vietti" 
SELECT Country,        COUNT(*) FROM TV_Channel GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1 
SELECT country,        COUNT(*) FROM TV_channel GROUP BY country ORDER BY COUNT(*) DESC LIMIT 1 
SELECT count(DISTINCT series_name),        count(DISTINCT Content) FROM TV_Channel 
SELECT count(DISTINCT series_name),        count(DISTINCT Content) FROM TV_Channel 
SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio" 
SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio" 
SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio" 
SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio" 
SELECT count(*) FROM TV_channel WHERE language = "english" 
SELECT count(*) FROM TV_channel WHERE language = "english" 
SELECT Language,        COUNT(*) FROM TV_Channel GROUP BY Language ORDER BY COUNT(*) DESC LIMIT 1 
SELECT Language,        COUNT(*) FROM TV_Channel GROUP BY Language ORDER BY COUNT(*) ASC LIMIT 1 
SELECT Language,        COUNT(*) FROM TV_Channel GROUP BY Language 
SELECT Language,        COUNT(*) FROM TV_Channel GROUP BY Language 
SELECT TV_Channel.series_name FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.channel WHERE Cartoon.title = "The Rise of the Blue Beetle!" 
SELECT TV_Channel.series_name FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.channel WHERE Cartoon.title = "The Rise of the Blue Beetle" 
SELECT Cartoon.Title FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE TV_Channel.series_name = "Sky Radio" 
SELECT Cartoon.Title FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE TV_Channel.series_name = "Sky Radio" 
SELECT Episode FROM TV_series ORDER BY Rating 
SELECT Episode FROM TV_series ORDER BY Rating 
SELECT Episode,        Rating FROM TV_series ORDER BY Rating DESC LIMIT 3 
SELECT Episode,        Rating FROM TV_series ORDER BY Rating DESC LIMIT 3 
SELECT min(Share),        max(Share) FROM TV_series 
SELECT max(Share),        min(Share) FROM TV_series 
SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime" 
SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime" 
SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime" 
SELECT WEEKLY_RANK FROM TV_series WHERE Episode = "A Love of a Lifetime" 
SELECT TV_Channel.series_name FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.channel WHERE TV_series.episode = "A Love of a Lifetime" 
SELECT TV_series.episode FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel WHERE TV_series.series_name = "A Love of a Lifetime" 
SELECT TV_series.Episode FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel WHERE TV_Channel.series_name = "Sky Radio" 
SELECT TV_series.Episode FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel WHERE TV_series.series_name = "Sky Radio" 
SELECT count(*),        directed_by FROM cartoon GROUP BY directed_by 
SELECT Directed_by,        COUNT(*) FROM Cartoon GROUP BY Directed_by 
SELECT Production_code,        Channel FROM cartoon ORDER BY Original_air_date DESC LIMIT 1 
SELECT Production_code,        Channel FROM cartoon ORDER BY Original_air_date DESC LIMIT 1 
SELECT Package_Option,        series_name FROM TV_channel WHERE Hight_definition_TV = 'Yes' 
SELECT Package_Option,        series_name FROM TV_channel WHERE Hight_definition_TV = 'Yes' 
SELECT TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Written_by = "Todd Casey" 
SELECT TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Written_by = "Todd Casey" 
SELECT TV_Channel.country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.channel WHERE Cartoon.written_by!= "Todd Casey" 
SELECT TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Written_by!= "Todd Casey" 
SELECT TV_Channel.series_name,        TV_Channel.country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.channel WHERE Cartoon.directed_by = "Ben Jones"   AND Cartoon.directed_by = "Michael Chang" 
SELECT TV_Channel.series_name,        TV_Channel.country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.channel WHERE Cartoon.directed_by = "Ben Jones" INTERSECT   SELECT TV_Channel.series_name,          TV_Channel.country   FROM TV_Channel   JOIN Cartoon ON TV_Channel.id = Cartoon.channel   WHERE Cartoon.directed_by = "Michael Chang" 
SELECT Pixel_aspect_ratio_PAR,        country FROM TV_channel WHERE language!= 'english' 
SELECT Pixel_aspect_ratio_PAR,        country FROM TV_channel WHERE language!= 'english' 
SELECT id FROM TV_Channel WHERE Country = "Country" GROUP BY Country HAVING COUNT(*) > 2 
SELECT id FROM TV_Channel GROUP BY id HAVING count(*) > 2 
SELECT id FROM TV_Channel EXCEPT SELECT TV_Channel.id FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.channel WHERE Cartoon.directed_by = "Ben Jones" 
SELECT id FROM TV_Channel WHERE id NOT IN     (SELECT channel      FROM Cartoon      WHERE directed_by = "Ben Jones") 
SELECT TV_Channel.Package_Option FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.channel WHERE TV_Channel.directed_by!= "Ben Jones" 
SELECT TV_Channel.Package_Option FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.channel WHERE TV_Channel.id NOT IN     (SELECT TV_Channel.id      FROM TV_Channel      JOIN Cartoon ON TV_Channel.id = Cartoon.channel      WHERE Cartoon.directed_by = "Ben Jones") 
SELECT count(*) FROM poker_player 
SELECT count(*) FROM poker_player 
SELECT Earnings FROM poker_player ORDER BY Earnings DESC 
SELECT Earnings FROM poker_player ORDER BY Earnings DESC 
SELECT Final_Table_Made,        Best_Finish FROM poker_player 
SELECT Final_Table_Made,        Best_Finish FROM poker_player 
SELECT avg(Earnings) FROM poker_player 
SELECT avg(Earnings) FROM poker_player 
SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1 
SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1 
SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings < 200000 
SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings < 200000 
SELECT people.Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID 
SELECT people.Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID 
SELECT people.Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE poker_player.Earnings > 300000 
SELECT people.Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE poker_player.Earnings > 300000 
SELECT people.Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY poker_player.Final_Table_Made ASC 
SELECT people.Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY count(*) DESC 
SELECT people.Birth_Date FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY poker_player.Earnings LIMIT 1 
SELECT people.Birth_Date FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY poker_player.Earnings LIMIT 1 
SELECT poker_player.Money_Rank FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY people.Height DESC LIMIT 1 
SELECT poker_player.Money_Rank FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY people.Height DESC LIMIT 1 
SELECT avg(poker_player.Earnings) FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE people.Height > 200 
SELECT avg(poker_player.Earnings) FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE people.Height > 200 
SELECT people.Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY poker_player.Earnings DESC 
SELECT people.Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY poker_player.Earnings DESC 
SELECT Nationality,        COUNT(*) FROM people GROUP BY Nationality 
SELECT Nationality,        COUNT(*) FROM people GROUP BY Nationality 
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1 
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1 
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*) >= 2 
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*) >= 2 
SELECT Name,        Birth_Date FROM people ORDER BY Name ASC 
SELECT Name,        Birth_Date FROM people ORDER BY Name 
SELECT Name FROM people WHERE Nationality!= "Russia" 
SELECT Name FROM people WHERE Nationality!= 'Russia' 
SELECT name FROM people WHERE people_id NOT IN     (SELECT people_id      FROM poker_player) 
SELECT name FROM people WHERE people_id NOT IN     (SELECT people_id      FROM poker_player) 
SELECT count(DISTINCT Nationality) FROM people 
SELECT count(DISTINCT Nationality) FROM people 
SELECT count(*) FROM AREA_CODE_STATE 
SELECT contestant_number,        contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC 
SELECT vote_id,        phone_number,        state FROM VOTES 
SELECT max(area_code),        min(area_code) FROM AREA_CODE_STATE 
SELECT created FROM VOTES WHERE state = 'CA' 
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name!= 'Jessie Alloway' 
SELECT DISTINCT state,                 created FROM votes 
SELECT CONTESTANTS.contestant_number,        CONTESTANTS.contestant_name FROM CONTESTANTS JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number GROUP BY CONTESTANTS.contestant_number HAVING COUNT(*) >= 2 
SELECT CONTESTANTS.contestant_name,        CONTESTANTS.contestant_number FROM CONTESTANTS JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number GROUP BY CONTESTANTS.contestant_number ORDER BY count(*) ASC LIMIT 1 
SELECT count(*) FROM VOTES WHERE state = 'NY'   OR state = 'CA' 
SELECT count(*) FROM CONTESTANTS WHERE contestant_number NOT IN     (SELECT contestant_number      FROM votes) 
SELECT area_code_state.area_code FROM area_code_state JOIN votes ON area_code_state.state = votes.state GROUP BY area_code_state.state ORDER BY count(*) DESC LIMIT 1 
SELECT votes.created,        votes.state,        votes.phone_number FROM CONTESTANTS JOIN votes ON CONTESTANTS.contestant_number = votes.contestant_number WHERE CONTESTANTS.contestant_name = "Tabatha Gehling" 
SELECT area_code_state.area_code FROM CONTESTANTS JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number JOIN AREA_CODE_STATE ON AREA_CODE_STATE.state = VOTES.state WHERE CONTESTANTS.contestant_name = "Tabatha Gehling" INTERSECT   SELECT area_code_state.area_code   FROM CONTESTANTS   JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number   JOIN AREA_CODE_STATE ON AREA_CODE_STATE.state = VOTES.state   WHERE CONTESTANTS.contestant_name = "Kelly Clauss" 
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%' 
SELECT name FROM country WHERE indepYear > 1950 
SELECT name FROM country WHERE indepYear > 1950 
SELECT count(*) FROM country WHERE governmentform = "Republic" 
SELECT count(*) FROM country WHERE governmentform = 'Republic' 
SELECT sum(surfacearea) FROM country WHERE region = 'Caribbean' 
SELECT sum(surfacearea) FROM country WHERE region = "Caribbean" 
SELECT Continent FROM country WHERE Name = "Anguilla"; 
SELECT Continent FROM country WHERE Name = "Anguilla" 
SELECT country.Region FROM country JOIN city ON country.Code = city.CountryCode WHERE city.Name = "Kabul" 
SELECT country.Region FROM country JOIN city ON country.Code = city.CountryCode WHERE city.Name = "Kabul" 
SELECT countrylanguage.language FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.name = "Aruba" ORDER BY countrylanguage.percentage DESC LIMIT 1 
SELECT countrylanguage.language FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.name = "Aruba" GROUP BY country.name ORDER BY sum(countrylanguage.percentage) DESC LIMIT 1 
SELECT population,        lifeexpectancy FROM country WHERE name = "Brazil" 
SELECT population,        lifeexpectancy FROM country WHERE name = "Brazil" 
SELECT region,        population FROM country WHERE name = "Angola" 
SELECT region,        population FROM country WHERE name = "Angola" 
SELECT avg(LifeExpectancy) FROM country WHERE Region = "Central Africa" 
SELECT avg(LifeExpectancy) FROM country WHERE region = "Central Africa" 
SELECT name FROM country WHERE lifeexpectancy <     (SELECT min(lifeexpectancy)      FROM country      WHERE continent = "Asia")   AND continent = "Asia"; 
SELECT name FROM country WHERE LifeExpectancy =     (SELECT MIN (LifeExpectancy)      FROM country      WHERE continent = "Asia")   AND continent = "Asia" 
SELECT sum(Population),        max(GNP) FROM country WHERE continent = "Asia" 
SELECT population,        gnp FROM country WHERE continent = "Asia" GROUP BY continent ORDER BY max(gnp) LIMIT 1 
SELECT avg(LifeExpectancy) FROM country WHERE Continent = "Africa"   AND GovernmentForm = "Republic" 
SELECT avg(LifeExpectancy) FROM country WHERE Continent = "Africa"   AND GovernmentForm = "Republic" 
SELECT sum(surfacearea) FROM country WHERE continent = 'Asia'   OR continent = 'Europe' 
SELECT sum(surfacearea) FROM country WHERE continent = 'Asia'   OR continent = 'Europe' 
SELECT sum(Population) FROM city WHERE District = "Gelderland" 
SELECT sum(Population) FROM city WHERE District = "Gelderland" 
SELECT avg(GNP),        sum(Population) FROM country WHERE GovernmentForm = "US" 
SELECT avg(GNP),        sum(Population) FROM country WHERE country_id IN     (SELECT country_id      FROM country      WHERE GovernmentForm = "territory") 
SELECT count(DISTINCT language) FROM countrylanguage 
SELECT count(DISTINCT language) FROM countrylanguage 
SELECT count(DISTINCT governmentform) FROM country WHERE continent = "Africa" 
SELECT count(DISTINCT governmentform) FROM country WHERE continent = "Africa" 
SELECT sum(countrylanguage.language) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.name = "Aruba" 
SELECT countrylanguage.language FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.name = "Aruba" 
SELECT countrylanguage.IsOfficial,        country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Name = "Afghanistan" 
SELECT countrylanguage.IsOfficial,        country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Name = "Afghanistan" 
SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.code ORDER BY count(*) DESC LIMIT 1 
SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.name ORDER BY count(*) DESC LIMIT 1 
SELECT country.continent FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.continent HAVING count(*) =     (SELECT min(count)      FROM countrylanguage) 
SELECT country.Continent FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Continent ORDER BY count(*) DESC LIMIT 1 
SELECT count(*) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.name = "Canada" INTERSECT   SELECT count(*)   FROM country   JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.name = "Denmark" 
SELECT count(*) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "English" INTERSECT   SELECT count(*)   FROM country   JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "Dutch" 
SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "english" INTERSECT   SELECT country.name   FROM country   JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "french" 
SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "english" INTERSECT   SELECT country.name   FROM country   JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "french" 
SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "english" INTERSECT   SELECT country.name   FROM country   JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "french" 
SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "english" INTERSECT   SELECT country.name   FROM country   JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "french" 
SELECT count(DISTINCT country.continent) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "chinese" 
SELECT country.continent FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "Chinese" 
SELECT country.region FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "English"   OR countrylanguage.language = "Dutch" 
SELECT country.region FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "Dutch"   OR countrylanguage.language = "English" 
SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "English"   OR countrylanguage.language = "Dutch"   AND countrylanguage.isocode = "eng"   OR countrylanguage.isocode = "nld" 
SELECT country.code FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "English"   OR countrylanguage.language = "Dutch"   AND countrylanguage.isocode = "eng"   OR countrylanguage.isocode = "nld" 
SELECT countrylanguage.language FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.continent = "Asia" GROUP BY country.language ORDER BY count(*) DESC LIMIT 1 
SELECT countrylanguage.language FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.code ORDER BY count(*) DESC LIMIT 1 
SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.GovernmentForm = "Republic" GROUP BY country.Language HAVING COUNT(*) = 1 
SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.GovernmentForm = "Republic" 
SELECT city FROM city WHERE countrycode = "USA"   AND population =     (SELECT MAX (city.population)      FROM city      JOIN countrylanguage ON city.id = countrylanguage.countrycode      WHERE countrylanguage.language = "english")   AND countrylanguage.language = "english"; 
SELECT city.Name FROM city JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode WHERE countrylanguage.Language = "English" ORDER BY city.Population DESC LIMIT 1 
SELECT country.name,        country.Population,        country.LifeExpectancy FROM country JOIN country ON country.continent = "Asia" ORDER BY country.surfaceArea DESC LIMIT 1 
SELECT country.name,        country.Population,        country.LifeExpectancy FROM country JOIN country ON country.continent = country.continent WHERE country.surfacearea =     (SELECT MAX (surfacearea)      FROM country)   AND country.continent = "Asia" 
SELECT avg(country.lifeexpectancy) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language!= "English" 
SELECT avg(country.lifeexpectancy) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language!= "English" 
SELECT sum(population) FROM country WHERE countrylanguage.language!= 'English' 
SELECT count(*) FROM country WHERE country.name NOT IN     (SELECT country.name      FROM country      JOIN countrylanguage ON country.code = countrylanguage.countrycode      WHERE countrylanguage.language = "english") 
SELECT countrylanguage.language FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = "Beatrix"   AND countrylanguage.iso639_1 = "nl" 
SELECT countrylanguage.language FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = "Beatrix" 
SELECT sum(countrylanguage.isofficial) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.indepyear < 1930 
SELECT sum(countrylanguage.isofficial) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.indepyear < 1930 
SELECT name FROM country WHERE surfacearea >     (SELECT max(surfacearea)      FROM country      WHERE continent = 'Europe') 
SELECT name FROM country WHERE surfacearea >     (SELECT max(surfacearea)      FROM country      WHERE continent = 'Europe') 
SELECT name FROM country WHERE population <     (SELECT min(population)      FROM country      WHERE continent = 'Asia') 
SELECT name FROM country WHERE population <     (SELECT min(population)      FROM country      WHERE continent = 'Asia')   AND continent = 'Africa' 
SELECT name FROM country WHERE population >     (SELECT max(population)      FROM country      WHERE continent = "Asia")   AND continent = "Asia" 
SELECT name FROM country WHERE population >     (SELECT max(population)      FROM country      WHERE continent = 'Asia')   AND continent = 'Asia' 
SELECT CountryCode FROM countrylanguage WHERE Language!= "English" 
SELECT CountryCode FROM countrylanguage WHERE Language!= "English" 
SELECT CountryCode FROM countrylanguage WHERE Language!= "English" 
SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE Language = "English" 
SELECT country.code FROM country WHERE country.governmentform!= 'Republic' EXCEPT SELECT country.code FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language!= 'English' 
SELECT country.code FROM country WHERE country.governmentform!= 'Republic' EXCEPT SELECT country.code FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language!= 'English' 
SELECT city.name FROM country JOIN city ON country.countrycode = city.countrycode JOIN countrylanguage ON country.countrycode = countrylanguage.countrycode WHERE countrylanguage.iso6391 = "en" EXCEPT SELECT city.name FROM country JOIN city ON country.countrycode = city.countrycode JOIN countrylanguage ON country.countrycode = countrylanguage.countrycode WHERE countrylanguage.iso6391 = "en"   AND countrylanguage.language = "english" 
SELECT city.Name FROM country JOIN city ON country.CountryCode = city.CountryCode WHERE country.Continent = "Europe"   AND countrylanguage.IsOfficial!= "English" 
SELECT DISTINCT city.Name FROM country JOIN countrylanguage ON country.CountryCode = countrylanguage.CountryCode JOIN city ON city.CountryCode = countrylanguage.CountryCode WHERE countrylanguage.IsOfficial = "true"   AND country.Continent = "Asia"   AND countrylanguage.Language = "Chinese" 
SELECT city.Name FROM country JOIN countrylanguage ON country.CountryCode = countrylanguage.CountryCode JOIN city ON city.ID = countrylanguage.CountryCode WHERE country.Continent = "Asia"   AND countrylanguage.Language = "Chinese"   AND countrylanguage.IsOfficial = "true" 
SELECT name,        indepyear,        surfacearea FROM country ORDER BY population LIMIT 1 
SELECT name,        indepyear,        surfacearea FROM country ORDER BY population LIMIT 1 
SELECT population,        name,        headofstate FROM country ORDER BY surfacearea DESC LIMIT 1 
SELECT name,        population,        headofstate FROM country WHERE surfacearea =     (SELECT MAX (surfacearea)      FROM country) 
SELECT country.name,        countrylanguage.language,        count(*) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.code HAVING count(*) >= 3 
SELECT country.name,        country.name,        country.name,        country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.name HAVING count(*) > 2 
SELECT District,        COUNT(*) FROM city WHERE Population >     (SELECT avg(Population)      FROM city) GROUP BY District 
SELECT District,        COUNT(*) FROM city GROUP BY District HAVING SUM(Population) >   (SELECT avg(Population)    FROM city) 
SELECT governmentform,        sum(population) FROM country WHERE lifeexpectancy > 72 GROUP BY governmentform 
SELECT GovernmentForm,        SUM(Population) FROM country WHERE LifeExpectancy > 72 GROUP BY GovernmentForm 
SELECT avg(LifeExpectancy),        sum(Population) FROM country WHERE LifeExpectancy < 72 GROUP BY Continent 
SELECT DISTINCT continent,                 sum(population),                 avg(lifeexpectancy) FROM country WHERE lifeexpectancy < 72 GROUP BY continent 
SELECT name,        surfacearea FROM country ORDER BY surfacearea DESC LIMIT 5 
SELECT name,        surfacearea FROM country ORDER BY surfacearea DESC LIMIT 5 
SELECT name FROM country ORDER BY population DESC LIMIT 3 
SELECT name FROM country ORDER BY population DESC LIMIT 3 
SELECT name FROM country ORDER BY population LIMIT 3 
SELECT name FROM country ORDER BY population LIMIT 3 
SELECT count(*) FROM country WHERE continent = "Asia" 
SELECT count(*) FROM country WHERE continent = "Asia" 
SELECT name FROM country WHERE continent = "Europe"   AND population > 80000 
SELECT name FROM country WHERE continent = "Europe"   AND population = 80000 
SELECT sum(Population),        avg(SurfaceArea) FROM country WHERE continent = 'North America'   AND SurfaceArea > 3000 
SELECT sum(Population),        avg(SurfaceArea) FROM country WHERE continent = 'North America'   AND SurfaceArea > 3000 
SELECT name FROM city WHERE population BETWEEN 160000 AND 900000 
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000 
SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(*) DESC LIMIT 1 
SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(*) DESC LIMIT 1 
SELECT language,        countrycode FROM countrylanguage ORDER BY percentage DESC LIMIT 1 
SELECT countrycode,        language FROM countrylanguage ORDER BY percentage DESC LIMIT 1 
SELECT sum(percentage) FROM countrylanguage WHERE language = "Spanish" GROUP BY countrycode ORDER BY sum(percentage) DESC LIMIT 1 
SELECT count(*) FROM countrylanguage WHERE Language = "Spanish" GROUP BY CountryCode HAVING sum(Percentage) > 0.5 
SELECT countrycode FROM countrylanguage WHERE language = "Spanish" ORDER BY percentage DESC LIMIT 1 
SELECT CountryCode FROM countrylanguage WHERE Language = "Spanish"   AND percentage =     (SELECT MAX (percentage)      FROM countrylanguage) 
SELECT count(*) FROM conductor 
SELECT count(*) FROM conductor 
SELECT Name FROM conductor ORDER BY Age ASC 
SELECT Name FROM conductor ORDER BY Age 
SELECT Name FROM conductor WHERE Nationality!= "USA" 
SELECT Name FROM conductor WHERE Nationality!= "USA" 
SELECT Record_Company FROM orchestra ORDER BY YEAR_OF_Founded DESC 
SELECT Record_Company FROM orchestra ORDER BY YEAR_OF_Founded DESC 
SELECT avg(Attendance) FROM show 
SELECT avg(Attendance) FROM show 
SELECT max(Share),        min(Share) FROM performance WHERE TYPE!= "Live final" 
SELECT max(Share),        min(Share) FROM performance WHERE TYPE!= "Live final" 
SELECT count(DISTINCT Nationality) FROM conductor 
SELECT count(DISTINCT Nationality) FROM conductor 
SELECT Name FROM conductor ORDER BY YEAR_OF_WORK DESC 
SELECT Name FROM conductor ORDER BY YEAR_OF_WORK DESC 
SELECT Name FROM conductor ORDER BY YEAR_OF_WORK DESC LIMIT 1 
SELECT Name FROM conductor ORDER BY YEAR_OF_WORK DESC LIMIT 1 
SELECT conductor.Name,        orchestra.Orchestra FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID 
SELECT conductor.Name,        orchestra.Orchestra FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID 
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY conductor.Conductor_ID HAVING count(*) > 1 
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY conductor.Conductor_ID HAVING count(*) > 1 
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY conductor.Name ORDER BY count(*) DESC LIMIT 1 
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY conductor.Name ORDER BY count(*) DESC LIMIT 1 
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID WHERE orchestra.Year_of_Founded > 2008 
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID WHERE orchestra.Year_of_Founded > 2008 
SELECT Record_Company,        COUNT(*) FROM orchestra GROUP BY Record_Company 
SELECT Record_Company,        COUNT(*) FROM orchestra GROUP BY Record_Company 
SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC 
SELECT Major_Record_Format FROM orchestra ORDER BY COUNT(*) DESC 
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1 
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1 
SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN     (SELECT Orchestra_ID      FROM performance) 
SELECT Orchestra FROM orchestra EXCEPT SELECT Orchestra FROM performance 
SELECT Record_Company FROM orchestra WHERE YEAR_OF_Founded < 2003 INTERSECT   SELECT Record_Company   FROM orchestra WHERE YEAR_OF_Founded > 2003 
SELECT Record_Company FROM orchestra WHERE YEAR_OF_Founded < 2003 INTERSECT   SELECT Record_Company   FROM orchestra WHERE YEAR_OF_Founded > 2003 
SELECT count(*) FROM orchestra WHERE Major_Record_Format = "CD"   OR Major_Record_Format = "DVD" 
SELECT count(*) FROM orchestra WHERE Major_Record_Format = "CD"   OR Major_Record_Format = "DVD" 
SELECT orchestra.Year_of_Founded FROM orchestra JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID GROUP BY orchestra.Orchestra_ID HAVING count(*) > 1 
SELECT orchestra FROM orchestra WHERE YEAR_OF_Founded > 1 
SELECT count(*) FROM highschooler 
SELECT count(*) FROM highschooler 
SELECT name,        grade FROM highschooler 
SELECT name,        grade FROM highschooler 
SELECT grade FROM highschooler 
SELECT grade FROM highschooler 
SELECT grade FROM highschooler WHERE name = "Kyle" 
SELECT grade FROM highschooler WHERE name = "Kyle" 
SELECT name FROM highschooler WHERE grade = 10 
SELECT name FROM highschooler WHERE grade = 10 
SELECT ID FROM HIGHSCHOOLER WHERE name = "Kyle" 
SELECT ID FROM highschooler WHERE name = "Kyle" 
SELECT count(*) FROM highschooler WHERE grade = 9   OR grade = 10 
SELECT count(*) FROM highschooler WHERE grade = 9   OR grade = 10 
SELECT grade,        count(*) FROM Highschooler GROUP BY grade 
SELECT grade,        count(*) FROM Highschooler GROUP BY grade 
SELECT grade FROM highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1 
SELECT grade FROM highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1 
SELECT grade FROM highschooler GROUP BY grade HAVING count(*) >= 4 
SELECT grade FROM highschooler GROUP BY grade HAVING count(*) >= 4 
SELECT student_id,        count(*) FROM Friend GROUP BY student_id 
SELECT count(*),        student_id FROM friend GROUP BY student_id 
SELECT Highschooler.name,        count(*) FROM Friend JOIN Highschooler ON Friend.student_id = Highschooler.ID GROUP BY Friend.student_id 
SELECT Highschooler.name,        count(*) FROM Friend JOIN Highschooler ON Friend.student_id = Highschooler.ID GROUP BY Friend.student_id 
SELECT highschooler.name FROM friend JOIN highschooler ON friend.student_id = highschooler.id GROUP BY friend.student_id ORDER BY count(*) DESC LIMIT 1 
SELECT highschooler.name FROM friend JOIN highschooler ON friend.student_id = highschooler.id GROUP BY highschooler.id ORDER BY count(*) DESC LIMIT 1 
SELECT Highschooler.name FROM Friend JOIN Highschooler ON Friend.student_id = Highschooler.ID GROUP BY Friend.student_id HAVING count(*) >= 3 
SELECT Highschooler.name FROM Friend JOIN Highschooler ON Friend.student_id = Highschooler.ID GROUP BY Friend.student_id HAVING count(*) >= 3 
SELECT highschooler.name FROM friend JOIN highschooler ON friend.student_id = highschooler.id JOIN friend ON friend.friend_id = highschooler.id WHERE highschooler.name = "Kyle" 
SELECT highschooler.name FROM friend JOIN highschooler ON friend.student_id = highschooler.id WHERE friend.friend_id = highschooler.id   AND highschooler.name = "Kyle" 
SELECT count(*) FROM friend JOIN highschooler ON friend.student_id = highschooler.id WHERE highschooler.name = "Kyle" 
SELECT count(*) FROM friend JOIN highschooler ON friend.student_id = highschooler.id WHERE highschooler.name = "Kyle" 
SELECT ID FROM highschooler EXCEPT SELECT highschooler.ID FROM highschooler JOIN friend ON highschooler.ID = friend.student_id 
SELECT ID FROM highschooler EXCEPT SELECT highschooler.ID FROM highschooler JOIN friend ON highschooler.ID = friend.student_id 
SELECT name FROM highschooler WHERE id NOT IN     (SELECT student_id      FROM friend) 
SELECT name FROM highschooler WHERE id NOT IN     (SELECT student_id      FROM friend) 
SELECT DISTINCT likes.liked_id FROM friend JOIN likes ON friend.student_id = likes.student_id 
SELECT DISTINCT likes.liked_id FROM friend JOIN likes ON friend.student_id = likes.student_id 
SELECT highschooler.name FROM friend JOIN highschooler ON friend.student_id = highschooler.id JOIN likes ON friend.student_id = likes.student_id WHERE friend.student_id IN     (SELECT highschooler.id      FROM highschooler      JOIN likes ON highschooler.id = likes.liked_id      WHERE likes.student_id IN          (SELECT highschooler.id           FROM highschooler           JOIN friend ON highschooler.id = friend.student_id           WHERE friend.student_id IN               (SELECT highschooler.id                FROM highschooler                JOIN likes ON highschooler.id = likes.liked_id                WHERE likes.student_id IN                    (SELECT highschooler.id                     FROM highschooler                     JOIN friend ON highschooler.id = friend.student_id)))) 
SELECT highschooler.name FROM friend JOIN highschooler ON friend.student_id = highschooler.id JOIN likes ON friend.student_id = likes.liked_id 
SELECT student_id,        count(*) FROM likes GROUP BY student_id 
SELECT student_id,        count(*) FROM likes GROUP BY student_id 
SELECT Highschooler.name,        COUNT(*) FROM Likes JOIN Highschooler ON Likes.student_id = Highschooler.ID GROUP BY Likes.student_id 
SELECT Highschooler.name,        COUNT(*) FROM Likes JOIN Highschooler ON Likes.student_id = Highschooler.ID GROUP BY Likes.student_id 
SELECT Highschooler.name FROM likes JOIN Highschooler ON likes.student_id = Highschooler.id GROUP BY Highschooler.id ORDER BY count(*) DESC LIMIT 1 
SELECT Highschooler.name FROM likes JOIN Highschooler ON likes.student_id = Highschooler.ID GROUP BY Highschooler.ID ORDER BY count(*) DESC LIMIT 1 
SELECT Highschooler.name FROM likes JOIN Highschooler ON likes.student_id = Highschooler.ID GROUP BY Highschooler.ID HAVING count(*) >= 2 
SELECT Highschooler.name FROM Likes JOIN Highschooler ON Likes.student_id = Highschooler.ID GROUP BY Likes.student_id HAVING count(*) >= 2 
SELECT highschooler.name FROM friend JOIN highschooler ON friend.student_id = highschooler.id WHERE highschooler.grade > 5 GROUP BY highschooler.id HAVING count(*) >= 2 
SELECT highschooler.name FROM friend JOIN highschooler ON friend.student_id = highschooler.id WHERE highschooler.grade > 5 GROUP BY highschooler.id HAVING count(*) >= 2 
SELECT count(*) FROM likes JOIN highschooler ON likes.student_id = highschooler.id WHERE highschooler.name = "Kyle" 
SELECT count(*) FROM likes JOIN highschooler ON likes.student_id = highschooler.id WHERE highschooler.name = "Kyle" 
SELECT avg(grade) FROM highschooler JOIN friend ON highschooler.id = friend.student_id 
SELECT avg(grade) FROM highschooler JOIN friend ON highschooler.id = friend.student_id 
SELECT min(grade) FROM highschooler WHERE id NOT IN     (SELECT student_id      FROM friend) 
SELECT min(grade) FROM highschooler WHERE id NOT IN     (SELECT student_id      FROM friend) 
SELECT state FROM owners INTERSECT SELECT state FROM professionals 
SELECT state FROM owners INTERSECT SELECT state FROM professionals 
SELECT avg(age) FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id 
SELECT avg(age) FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id 
SELECT professionals.professional_id,        professionals.last_name,        professionals.cell_number FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id WHERE treatments.state = "Indiana" GROUP BY treatments.professional_id HAVING count(*) > 2 
SELECT Professionals.professional_id,        Professionals.last_name,        Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Professionals.state = "Indiana" GROUP BY Professionals.professional_id HAVING count(*) > 2 
SELECT Dogs.name FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id WHERE Treatments.cost_of_treatment < 1000 
SELECT Dogs.name FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id WHERE Treatments.cost_of_treatment > 1000 
SELECT DISTINCT professionals.first_name FROM professionals JOIN owners ON professionals.professional_id = owners.owner_id JOIN dogs ON dogs.dog_id = professionals.professional_id WHERE professionals.first_name!= dogs.name 
SELECT DISTINCT professionals.first_name FROM professionals JOIN owners ON professionals.professional_id = owners.owner_id JOIN dogs ON dogs.dog_id = professionals.professional_id WHERE professionals.first_name!= dogs.name 
SELECT professionals.professional_id,        professionals.role_code,        professionals.email_address FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id WHERE professionals.role_code!= 'Dog' 
SELECT professionals.professional_id,        professionals.role_code,        professionals.email_address FROM professionals EXCEPT SELECT professionals.professional_id,        professionals.role_code,        professionals.email_address FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id WHERE professionals.role_code = "Dog" 
SELECT OWNERS.owner_id,        OWNERS.first_name,        OWNERS.last_name FROM DOGS JOIN OWNERS ON DOGS.owner_id = OWNERS.owner_id GROUP BY OWNERS.owner_id ORDER BY count(*) DESC LIMIT 1 
SELECT OWNERS.owner_id,        OWNERS.first_name,        OWNERS.last_name FROM DOGS JOIN OWNERS ON DOGS.owner_id = OWNERS.owner_id GROUP BY OWNERS.owner_id ORDER BY count(*) DESC LIMIT 1 
SELECT Professionals.professional_id,        Professionals.role_code,        Professionals.first_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id HAVING count(*) >= 2 
SELECT Professionals.professional_id,        Professionals.role_code,        Professionals.first_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id HAVING count(*) >= 2 
SELECT breeds.breed_name FROM breeds JOIN dogs ON breeds.breed_code = dogs.breed_code GROUP BY breeds.breed_code ORDER BY count(*) DESC LIMIT 1 
SELECT breeds.breed_name FROM breeds JOIN dogs ON breeds.breed_code = dogs.breed_code GROUP BY breeds.breed_code ORDER BY count(*) DESC LIMIT 1 
SELECT Owners.owner_id,        Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id ORDER BY count(*) DESC LIMIT 1 
SELECT Owners.owner_id,        Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id ORDER BY count(*) DESC LIMIT 1 
SELECT Treatment_Types.treatment_type_description FROM Treatment_Types JOIN Treatments ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code ORDER BY sum(Treatments.cost_of_treatment) LIMIT 1 
SELECT Treatment_Types.treatment_type_description FROM Treatment_Types JOIN Treatments ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code GROUP BY Treatment_Types.treatment_type_description ORDER BY sum(Treatments.cost_of_treatment) LIMIT 1 
SELECT Owners.owner_id,        Owners.zip_code FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id ORDER BY sum(Treatments.cost_of_treatment) DESC LIMIT 1 
SELECT Owners.owner_id,        Owners.zip_code FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id ORDER BY sum(Treatments.cost_of_treatment) DESC LIMIT 1 
SELECT professionals.professional_id,        professionals.cell_number FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id GROUP BY treatments.professional_id HAVING count(*) >= 2 
SELECT professionals.cell_number,        professionals.professional_id FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id GROUP BY professionals.professional_id HAVING count(*) >= 2 
SELECT first_name,        last_name FROM professionals WHERE cost_of_treatment <     (SELECT avg(cost_of_treatment)      FROM treatments) 
SELECT professionals.first_name,        professionals.last_name FROM professionals JOIN treatments ON professionals.professional_id = treatments.treatment_id WHERE treatments.cost_of_treatment <     (SELECT avg(cost_of_treatment)      FROM treatments) 
SELECT Treatments.date_of_treatment,        Professionals.first_name FROM Treatments JOIN Professionals ON Treatments.professional_id = Professionals.professional_id 
SELECT Treatments.date_of_treatment,        Professionals.first_name FROM Treatments JOIN Professionals ON Treatments.professional_id = Professionals.professional_id 
SELECT Treatments.cost_of_treatment,        Treatment_Types.treatment_type_description FROM Treatments JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code 
SELECT Treatments.cost_of_treatment,        Treatment_Types.treatment_type_description FROM Treatments JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code 
SELECT Owners.first_name,        Owners.last_name,        Dogs.size_code FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id 
SELECT Owners.first_name,        Owners.last_name,        Dogs.size_code FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id 
SELECT Owners.first_name,        Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id 
SELECT Owners.first_name,        Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id 
SELECT Dogs.name,        Treatments.date_of_treatment FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id WHERE Dogs.breed_code = "Rare" GROUP BY Treatments.dog_id ORDER BY min(Treatments.date_of_treatment) 
SELECT Dogs.name,        Treatments.date_of_treatment FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id WHERE Dogs.breed_code = "Rare" 
SELECT Owners.first_name,        Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = "Virginia" 
SELECT Owners.first_name,        Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = "Virginia" 
SELECT Dogs.date_arrived,        Dogs.date_departed FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id 
SELECT Dogs.date_arrived,        Dogs.date_departed FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id 
SELECT Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id ORDER BY Dogs.age LIMIT 1 
SELECT Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id ORDER BY Dogs.age LIMIT 1 
SELECT email_address FROM professionals WHERE state = "Hawaii"   OR state = "Wisconsin" 
SELECT email_address FROM professionals WHERE state = "Hawaii"   OR state = "Wisconsin" 
SELECT date_arrived,        date_departed FROM DOGS 
SELECT date_arrived,        date_departed FROM DOGS 
SELECT count(*) FROM Treatments JOIN dog ON Treatments.dog_id = dog.dog_id 
SELECT count(*) FROM treatments JOIN dog ON treatments.dog_id = dog.dog_id 
SELECT count(DISTINCT professional_id) FROM treatments WHERE professional_id =     (SELECT professional_id      FROM treatments      WHERE treatment_id IN          (SELECT treatment_id           FROM treatments           WHERE professional_id = 100))   AND treatment_id IN     (SELECT treatment_id      FROM treatments      WHERE professional_id = 100); 
SELECT count(DISTINCT professional_id) FROM treatments WHERE professional_id =     (SELECT professional_id      FROM treatments      WHERE treatment_id IN          (SELECT treatment_id           FROM treatments           WHERE professional_id = 1000)) 
SELECT role_code,        street,        city,        state FROM professionals WHERE city LIKE '%West%' 
SELECT role_code,        street,        city,        state FROM professionals WHERE city LIKE '%West%' 
SELECT first_name,        last_name,        email_address FROM owners WHERE state LIKE '%North%' 
SELECT first_name,        last_name,        email_address FROM owners WHERE state LIKE '%North%' 
SELECT count(*) FROM dogs WHERE age <     (SELECT avg(age)      FROM dogs) 
SELECT count(*) FROM dogs WHERE age <     (SELECT avg(age)      FROM dogs) 
SELECT cost_of_treatment FROM treatments ORDER BY date_of_treatment DESC LIMIT 1 
SELECT cost_of_treatment FROM treatments ORDER BY date_of_treatment DESC LIMIT 1 
SELECT count(*) FROM dogs WHERE dog_id NOT IN     (SELECT dog_id      FROM treatments) 
SELECT count(*) FROM dogs WHERE dog_id NOT IN     (SELECT dog_id      FROM treatments) 
SELECT count(*) FROM owners WHERE owner_id NOT IN     (SELECT owner_id      FROM dogs) 
SELECT count(*) FROM owners WHERE owner_id NOT IN     (SELECT owner_id      FROM dogs) 
SELECT count(*) FROM professionals WHERE professional_id NOT IN     (SELECT professional_id      FROM treatments      WHERE treatment_id IN          (SELECT treatment_id           FROM treatments           WHERE treatment_type = "Dog")) 
SELECT count(*) FROM professionals WHERE professional_id NOT IN     (SELECT professional_id      FROM treatments) 
SELECT name,        age,        weight FROM Dogs WHERE abandoned_yn = '1' 
SELECT name,        age,        weight FROM Dogs WHERE abandoned_yn = 1 
SELECT avg(age) FROM DOGS 
SELECT avg(age) FROM DOGS 
SELECT age FROM DOGS ORDER BY age DESC LIMIT 1 
SELECT age FROM dogs ORDER BY age DESC LIMIT 1 
SELECT charge_type,        charge_amount FROM charges 
SELECT charge_type,        charge_amount FROM charges 
SELECT charge_amount FROM charges ORDER BY charge_amount DESC LIMIT 1 
SELECT charge_amount FROM charges ORDER BY charge_amount DESC LIMIT 1 
SELECT email_address,        cell_number,        home_phone FROM professionals 
SELECT email_address,        cell_number,        home_phone FROM Professionals 
SELECT breed_code,        size_code FROM dogs 
SELECT DISTINCT breed_code,                 size_code FROM dogs 
SELECT Professionals.first_name,        Treatments.treatment_type_description FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code 
SELECT Professionals.first_name,        Treatments.treatment_type_description FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code 
SELECT count(*) FROM singer 
SELECT count(*) FROM singer 
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC 
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC 
SELECT Birth_Year,        Citizenship FROM singer 
SELECT Birth_Year,        Citizenship FROM singer 
SELECT Name FROM singer WHERE Citizenship!= "France" 
SELECT Name FROM singer WHERE Citizenship!= "French" 
SELECT Name FROM singer WHERE Birth_Year = 1948   OR Birth_Year = 1949 
SELECT Name FROM singer WHERE Birth_Year = 1948   OR Birth_Year = 1949 
SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1 
SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1 
SELECT citizenship,        COUNT(*) FROM singer GROUP BY citizenship 
SELECT citizenship,        COUNT(*) FROM singer GROUP BY citizenship 
SELECT citizenship FROM singer GROUP BY citizenship ORDER BY count(*) DESC LIMIT 1 
SELECT citizenship FROM singer GROUP BY citizenship ORDER BY count(*) DESC LIMIT 1 
SELECT citizenship,        max(Net_Worth_Millions) FROM singer GROUP BY citizenship 
SELECT citizenship,        max(Net_Worth_Millions) FROM singer GROUP BY citizenship 
SELECT song.Title,        singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID 
SELECT song.Title,        singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID 
SELECT DISTINCT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000 
SELECT DISTINCT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000 
SELECT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Singer_ID HAVING COUNT(*) > 1 
SELECT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Singer_ID HAVING COUNT(*) > 1 
SELECT singer.Name,        sum(song.Sales) FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Singer_ID 
SELECT singer.Name,        SUM(song.Sales) FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Name 
SELECT Name FROM singer WHERE Singer_ID NOT IN     (SELECT Singer_ID      FROM song) 
SELECT Name FROM singer WHERE Singer_ID NOT IN     (SELECT Singer_ID      FROM song) 
SELECT citizenship FROM singer WHERE birth_year < 1945 UNION SELECT citizenship FROM singer WHERE birth_year > 1955 
SELECT citizenship FROM singer WHERE birth_year < 1945 INTERSECT   SELECT citizenship   FROM singer WHERE birth_year > 1955 
SELECT count(*) FROM Other_available_features 
SELECT Ref_Feature_Types.feature_type_name FROM Other_Available_Features JOIN Ref_Feature_Types ON Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code WHERE Other_Available_Features.feature_name = "AirCon" 
SELECT Ref_Property_Types.property_type_description FROM Properties JOIN Ref_Property_Types ON Properties.property_type_code = Ref_Property_Types.property_type_code 
SELECT property_name FROM properties WHERE property_type_code = "House"   OR property_type_code = "Apartment"   AND room_count > 1 
