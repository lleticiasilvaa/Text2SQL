 SELECT count(*) FROM singer 
 SELECT count(*) FROM singer 
 SELECT singer.name,        singer.country,        singer.age FROM stadium JOIN singer ON stadium.stadium_id = concert.stadium_id JOIN concert ON concert.concert_id = singer_in_concert.concert_id JOIN singer_in_concert ON singer_in_concert.singer_id = singer.singer_id ORDER BY singer.age DESC 
 SELECT singer.name,        singer.country,        singer.age FROM stadium JOIN singer ON stadium.stadium_id = concert.stadium_id JOIN concert ON concert.concert_id = singer_in_concert.concert_id JOIN singer_in_concert ON singer_in_concert.singer_id = singer.singer_id ORDER BY singer.age DESC 
 SELECT avg(singer.age),        min(singer.age),        max(singer.age) FROM stadium JOIN singer ON stadium.stadium_id = concert.stadium_id JOIN concert ON concert.concert_id = singer_in_concert.concert_id JOIN singer_in_concert ON singer_in_concert.singer_id = singer.singer_id WHERE singer.country = "France" 
 SELECT avg(singer.age),        min(singer.age),        max(singer.age) FROM stadium JOIN singer ON stadium.stadium_id = concert.stadium_id JOIN concert ON concert.concert_id = singer_in_concert.concert_id WHERE singer.country = "France" 
 SELECT singer.Name,        singer.Song_release_year FROM stadium JOIN singer ON stadium.Stadium_ID = concert.Stadium_ID JOIN concert ON concert.Stadium_ID = stadium.Stadium_ID JOIN singer_in_concert ON singer_in_concert.concert_ID = concert.concert_ID WHERE stadium.Capacity =     (SELECT MIN(capacity)      FROM stadium) 
 SELECT singer.Song_Name,        singer.Song_release_year FROM stadium JOIN singer ON stadium.Stadium_ID = concert.Stadium_ID JOIN concert ON concert.concert_ID = singer_in_concert.concert_ID JOIN singer_in_concert ON singer_in_concert.Singer_ID = singer.Singer_ID WHERE singer.age =     (SELECT min(age)      FROM singer) 
 SELECT DISTINCT singer.country FROM stadium JOIN singer ON stadium.stadium_id = concert.stadium_id JOIN concert ON concert.concert_id = singer_in_concert.concert_id JOIN singer_in_concert ON singer_in_concert.singer_id = singer.singer_id WHERE singer.age > 20 
 SELECT DISTINCT country FROM singer WHERE age > 20 
 SELECT singer.country,        COUNT(*) FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id JOIN stadium ON concert.stadium_id = stadium.stadium_id GROUP BY singer.country 
 SELECT country,        count(*) FROM singer GROUP BY country 
 SELECT singer.Song_Name FROM stadium JOIN singer ON stadium.Stadium_ID = concert.Stadium_ID JOIN concert ON concert.concert_ID = singer_in_concert.concert_ID JOIN singer_in_concert ON singer_in_concert.Singer_ID = singer.Singer_ID WHERE singer.age >     (SELECT avg(age)      FROM singer) 
 SELECT singer.Song_Name FROM stadium JOIN singer ON stadium.Stadium_ID = concert.Stadium_ID JOIN concert ON concert.concert_ID = singer_in_concert.concert_ID JOIN singer_in_concert ON singer_in_concert.Singer_ID = singer.Singer_ID WHERE singer.age > stadium.Average 
 SELECT stadium.location,        stadium.name FROM stadium WHERE stadium.capacity BETWEEN 5000 AND 10000 
 SELECT DISTINCT stadium.location,                 stadium.name FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id JOIN singer ON singer_in_concert.singer_id = singer.singer_id WHERE stadium.capacity BETWEEN 5000 AND 10000 
 SELECT max(capacity),        avg(average) FROM stadium 
 SELECT avg(capacity),        max(capacity) FROM stadium 
 SELECT name,        capacity FROM stadium ORDER BY average DESC LIMIT 1 
 SELECT name,        capacity FROM stadium ORDER BY average DESC LIMIT 1 
 SELECT count(*) FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id JOIN singer_in_concert ON singer_in_concert.concert_id = concert.concert_id JOIN singer ON singer_in_concert.singer_id = singer.singer_id WHERE concert.year = 2014   OR concert.year = 2015 
 SELECT count(*) FROM stadium JOIN singer ON stadium.stadium_id = singer.stadium_id JOIN concert ON concert.stadium_id = stadium.stadium_id JOIN singer_in_concert ON singer_in_concert.concert_id = concert.concert_id WHERE concert.year = 2014   OR concert.year = 2015 
 SELECT stadium.name,        count(*) FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id JOIN singer_in_concert ON singer_in_concert.concert_id = concert.concert_id JOIN singer ON singer_in_concert.singer_id = singer.singer_id GROUP BY stadium.stadium_id 
 SELECT count(*),        stadium.name FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id JOIN singer_in_concert ON singer_in_concert.concert_id = concert.concert_id JOIN singer ON singer_in_concert.singer_id = singer.singer_id GROUP BY stadium.name 
 SELECT stadium.name,        stadium.capacity FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year >= 2014 GROUP BY concert.stadium_id ORDER BY count(*) DESC LIMIT 1 
 SELECT stadium.name,        stadium.capacity FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id JOIN singer ON singer_in_concert.singer_id = singer.singer_id WHERE concert.year > 2013 GROUP BY concert.stadium_id ORDER BY count(*) DESC LIMIT 1 
 SELECT concert.year FROM stadium JOIN singer ON stadium.stadium_id = concert.stadium_id JOIN concert ON stadium.stadium_id = concert.stadium_id JOIN singer_in_concert ON singer_in_concert.concert_id = concert.concert_id GROUP BY concert.year ORDER BY count(*) DESC LIMIT 1 
 SELECT concert.year FROM stadium JOIN singer ON stadium.stadium_id = concert.stadium_id JOIN concert ON concert.concert_id = singer_in_concert.concert_id JOIN singer_in_concert ON singer_in_concert.singer_id = singer.singer_id GROUP BY concert.year ORDER BY count(*) DESC LIMIT 1 
 SELECT name FROM stadium WHERE stadium_id NOT IN     (SELECT stadium_id      FROM concert) 
 SELECT name FROM stadium WHERE stadium_id NOT IN     (SELECT stadium_id      FROM concert) 
 SELECT singer.country FROM stadium JOIN singer ON stadium.stadium_id = concert.stadium_id JOIN concert ON concert.concert_id = singer_in_concert.concert_id JOIN singer_in_concert ON singer_in_concert.singer_id = singer.singer_id WHERE singer.age > 40 INTERSECT   SELECT singer.country   FROM stadium   JOIN singer ON stadium.stadium_id = concert.stadium_id   JOIN concert ON concert.concert_id = singer_in_concert.concert_id   JOIN singer_in_concert ON singer_in_concert.singer_id = singer.singer_id WHERE singer.age < 30 
 SELECT name FROM stadium EXCEPT SELECT stadium.name FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year = 2014 
 SELECT name FROM stadium EXCEPT SELECT stadium.name FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year = 2014 
 SELECT concert.concert_name,        concert.theme,        count(*) FROM stadium JOIN singer ON stadium.stadium_id = concert.stadium_id JOIN concert ON concert.concert_id = singer_in_concert.concert_id JOIN singer_in_concert ON singer_in_concert.singer_id = singer.singer_id GROUP BY concert.concert_id 
 SELECT concert.concert_Name,        concert.Theme,        COUNT(*) FROM stadium JOIN singer ON stadium.stadium_id = concert.stadium_id JOIN concert ON concert.concert_id = singer_in_concert.concert_id JOIN singer_in_concert ON singer_in_concert.singer_id = singer.singer_id GROUP BY concert.concert_Name,          concert.Theme 
 SELECT singer.name,        count(*) FROM singer JOIN concert ON concert.stadium_id = stadium.stadium_id JOIN singer_in_concert ON singer_in_concert.concert_id = concert.concert_id GROUP BY singer.name 
 SELECT singer.Name,        COUNT(*) FROM stadium JOIN singer ON stadium.Stadium_ID = concert.Stadium_ID JOIN concert ON concert.concert_ID = singer_in_concert.concert_ID JOIN singer_in_concert ON singer_in_concert.Singer_ID = singer.Singer_ID GROUP BY singer.Name 
 SELECT singer.Name FROM stadium JOIN singer ON stadium.Stadium_ID = concert.Stadium_ID JOIN concert ON concert.concert_ID = singer_in_concert.concert_ID JOIN singer_in_concert ON singer_in_concert.Singer_ID = singer.Singer_ID WHERE concert.Year = 2014 
 SELECT singer.Name FROM stadium JOIN singer ON stadium.Stadium_ID = concert.Stadium_ID JOIN concert ON concert.concert_ID = singer_in_concert.concert_ID JOIN singer_in_concert ON singer_in_concert.Singer_ID = singer.Singer_ID WHERE concert.Year = 2014 
 SELECT singer.name,        singer.country FROM stadium JOIN singer ON stadium.stadium_id = concert.stadium_id JOIN concert ON concert.concert_id = singer_in_concert.concert_id JOIN singer_in_concert ON singer_in_concert.singer_id = singer.singer_id WHERE concert.theme = "Hey" 
 SELECT singer.name,        singer.country FROM stadium JOIN singer ON stadium.stadium_id = concert.stadium_id JOIN concert ON concert.concert_id = singer_in_concert.concert_id JOIN singer_in_concert ON singer_in_concert.singer_id = singer.singer_id WHERE concert.theme = "Hey" 
 SELECT stadium.name,        stadium.location FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year = 2014 INTERSECT   SELECT stadium.name,          stadium.location   FROM stadium   JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year = 2015 
 SELECT stadium.name,        stadium.location FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year = 2014 INTERSECT   SELECT stadium.name,          stadium.location   FROM stadium   JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year = 2015 
 SELECT count(*) FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id JOIN singer_in_concert ON singer_in_concert.concert_id = concert.concert_id JOIN singer ON singer_in_concert.singer_id = singer.singer_id WHERE stadium.capacity =     (SELECT max(capacity)      FROM stadium) 
 SELECT count(*) FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id JOIN singer_in_concert ON singer_in_concert.concert_id = concert.concert_id JOIN singer ON singer_in_concert.singer_id = singer.singer_id WHERE stadium.capacity =     (SELECT max(capacity)      FROM stadium) 
 SELECT count(*) FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.weight > 10 
 SELECT count(*) FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.weight > 10 
 SELECT Pets.weight FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.pet_age =     (SELECT min(pet_age)      FROM Pets) 
 SELECT min(pets.weight) FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.sex = 'F'   AND pets.pettype = 'dog' 
 SELECT max(pets.weight),        pets.pettype FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid GROUP BY pets.pettype 
 SELECT max(pets.weight),        pets.pettype FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid GROUP BY pets.pettype 
 SELECT count(*) FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.age > 20 
 SELECT count(*) FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.age > 20 
 SELECT count(*) FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.sex = "F"   AND pets.pettype = "dog" 
 SELECT count(*) FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.sex = "F"   AND pets.pettype = "Dog" 
 SELECT count(DISTINCT pettype) FROM pets JOIN has_pet ON pets.petid = has_pet.petid JOIN student ON has_pet.stuid = student.stuid 
 SELECT count(DISTINCT pettype) FROM pets 
 SELECT Student.fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Cat'   OR Pets.PetType = 'Dog' 
 SELECT Student.fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = "Dog"   OR Pets.PetType = "Cat" 
 SELECT Student.fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Cat' INTERSECT   SELECT Student.fname   FROM Student   JOIN Has_Pet ON Student.StuID = Has_Pet.StuID   JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Dog' 
 SELECT Student.fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Cat' INTERSECT   SELECT Student.fname   FROM Student   JOIN Has_Pet ON Student.StuID = Has_Pet.StuID   JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Dog' 
 SELECT major,        age FROM Student WHERE StuID NOT IN     (SELECT StuID      FROM Has_Pet      JOIN Pets ON Has_Pet.PetID = Pets.PetID      WHERE Pets.pet_age > 5) 
 SELECT major,        age FROM Student WHERE StuID NOT IN     (SELECT StuID      FROM Has_Pet      JOIN Pets ON Has_Pet.PetID = Pets.PetID      WHERE Pets.pettype = "Cat") 
 SELECT StuID FROM Student EXCEPT SELECT StuID FROM Has_pet JOIN Pets ON Has_pet.PetID = Pets.PetID WHERE Pets.PetType = "Cat" 
 SELECT StuID FROM Student EXCEPT SELECT StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = "Cat" 
 SELECT student.fname,        student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'dog' EXCEPT SELECT student.fname,        student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat' 
 SELECT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'dog' EXCEPT SELECT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat' 
 SELECT Pets.pettype,        Pets.weight FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.pet_age =     (SELECT min(pet_age)      FROM Pets) 
 SELECT Pets.pettype,        Pets.weight FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID ORDER BY Pets.pet_age LIMIT 1 
 SELECT Pets.petid,        Pets.weight FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.pet_age > 1 
 SELECT Pets.petid,        Pets.weight FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.age > 1 
 SELECT avg(pets.pet_age),        max(pets.pet_age),        pets.pettype FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid GROUP BY pets.pettype 
 SELECT avg(pets.pet_age),        max(pets.pet_age),        pets.pettype FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid GROUP BY pets.pettype 
 SELECT avg(pets.weight),        pets.pettype FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid GROUP BY pets.pettype 
 SELECT avg(pets.weight),        pets.pettype FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid GROUP BY pets.pettype 
 SELECT Student.fname,        Student.age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID 
 SELECT DISTINCT Student.fname,                 Pets.pet_age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID 
 SELECT pets.petid FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.lname = "Smith" 
 SELECT pets.petid FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.lname = "Smith" 
 SELECT count(*),        student.stuid FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid GROUP BY student.stuid 
 SELECT StuID FROM Student WHERE StuID IN     (SELECT StuID      FROM Has_Pet      JOIN Pets ON Has_Pet.PetID = Pets.PetID) 
 SELECT Student.fname,        Student.sex FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID GROUP BY Student.StuID HAVING count(*) > 1 
 SELECT Student.fname,        Student.sex FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID GROUP BY Student.StuID HAVING count(*) > 1 
 SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.pet_age = 3   AND Pets.PetType = "Cat" 
 SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.pet_age = 3   AND Pets.PetType = "Cat" 
 SELECT avg(age) FROM Student WHERE StuID NOT IN     (SELECT StuID      FROM Has_Pet      JOIN Pets ON Has_Pet.PetID = Pets.PetID) 
 SELECT avg(age) FROM Student WHERE StuID NOT IN     (SELECT StuID      FROM Has_Pet      JOIN Pets ON Has_Pet.PetID = Pets.PetID) 
 SELECT count(DISTINCT continent) FROM countries 
 SELECT count(DISTINCT continent) FROM countries 
 SELECT countries.contid,        continents.continent,        count(*) FROM continents JOIN countries ON continents.contid = countries.contid GROUP BY continents.contid 
 SELECT countries.contid,        continents.continent,        count(*) FROM continents JOIN countries ON continents.contid = countries.contid GROUP BY countries.contid 
 SELECT count(DISTINCT continent) FROM countries 
 SELECT count(DISTINCT continent) FROM countries 
 SELECT car_makers.FullName,        model_list.Maker,        count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY car_makers.FullName 
 SELECT car_makers.FullName,        car_makers.id,        count(*) FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id GROUP BY car_makers.id 
 SELECT model_list.model FROM continents JOIN countries ON continents.contid = countries.contid JOIN car_makers ON countries.countryid = car_makers.countryid JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id GROUP BY model_list.model ORDER BY cars_data.horsepower LIMIT 1 
 SELECT model_list.Model FROM continents JOIN countries ON continents.ContId = countries.ContId JOIN car_makers ON countries.CountryId = car_makers.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.Horsepower LIMIT 1 
 SELECT model_list.Model FROM continents JOIN countries ON continents.ContId = countries.ContId JOIN car_makers ON countries.CountryId = car_makers.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight <     (SELECT avg(Weight)      FROM cars_data) 
 SELECT model_list.Model FROM continents JOIN countries ON continents.ContId = countries.ContId JOIN car_makers ON countries.CountryId = car_makers.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight <     (SELECT avg(Weight)      FROM cars_data) 
 SELECT car_makers.FullName FROM continents JOIN countries ON continents.ContId = countries.ContId JOIN car_makers ON countries.CountryId = car_makers.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 1970 
 SELECT car_makers.Maker FROM continents JOIN countries ON continents.ContId = countries.ContId JOIN car_makers ON countries.CountryId = car_makers.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 1970 
 SELECT car_names.Make,        cars_data.Year FROM continents JOIN countries ON continents.ContId = countries.ContId JOIN car_makers ON countries.CountryId = car_makers.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE continents.Continent = "Europe" ORDER BY cars_data.Year LIMIT 1 
 SELECT car_makers.maker,        cars_data.year FROM continents JOIN countries ON continents.contid = countries.contid JOIN car_makers ON countries.countryid = car_makers.countryid JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.year =     (SELECT min(cars_data.year)      FROM cars_data      JOIN car_names ON cars_data.id = car_names.makeid      JOIN model_list ON car_names.model = model_list.model      JOIN countries ON countries.contid = model_list.contid      JOIN car_makers ON countries.countryid = car_makers.countryid) 
 SELECT DISTINCT car_names.model FROM continents JOIN countries ON continents.contid = countries.contid JOIN car_makers ON countries.countryid = car_makers.countryid JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.year > 1980 
 SELECT model_list.model FROM continents JOIN countries ON continents.contid = countries.contid JOIN car_makers ON countries.countryid = car_makers.countryid JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.year > 1980 
 SELECT countries.continent,        count(*) FROM countries JOIN car_makers ON countries.countryid = car_makers.countryid JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id GROUP BY countries.continent 
 SELECT continents.continent,        count(*) FROM continents JOIN countries ON continents.contid = countries.contid JOIN car_makers ON countries.countryid = car_makers.countryid GROUP BY continents.continent 
 SELECT countries.CountryName FROM continents JOIN countries ON continents.ContId = countries.ContId JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName ORDER BY count(*) DESC LIMIT 1 
 SELECT countries.CountryName FROM continents JOIN countries ON continents.ContId = countries.ContId JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName ORDER BY count(*) DESC LIMIT 1 
 SELECT count(*),        car_makers.fullname FROM continents JOIN countries ON continents.contid = countries.contid JOIN car_makers ON countries.countryid = car_makers.countryid JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id GROUP BY car_makers.fullname 
 SELECT car_makers.id,        car_makers.fullname,        count(*) FROM continents JOIN countries ON continents.contid = countries.contid JOIN car_makers ON countries.countryid = car_makers.countryid JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id GROUP BY car_makers.id 
 SELECT cars_data.Accelerate FROM continents JOIN countries ON continents.ContId = countries.ContId JOIN car_makers ON countries.CountryId = car_makers.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.Maker = "amc"   AND car_names.Model = "hornet sportabout (sw)"; 
 SELECT cars_data.Accelerate FROM continents JOIN countries ON continents.ContId = countries.ContId JOIN car_makers ON countries.CountryId = car_makers.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_names.Make = "amc"   AND car_names.Model = "hornet sportabout (sw)"; 
 SELECT count(*) FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE countries.Continent = "France" 
 SELECT count(*) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.Continent = "France" 
 SELECT count(*) FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE countries.Continent = "USA" 
 SELECT count(*) FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE countries.Continent = "United States" 
 SELECT avg(cars_data.mpg) FROM continents JOIN countries ON continents.contid = countries.contid JOIN car_makers ON countries.countryid = car_makers.countryid JOIN model_list ON car_makers.id = model_list.makerid JOIN car_names ON model_list.modelid = car_names.modelid JOIN cars_data ON car_names.makeid = cars_data.id WHERE car_makers.fullname = "Toyota"   AND cars_data.cylinders = 4 
 SELECT avg(cars_data.mpg) FROM continents JOIN countries ON continents.contid = countries.contid JOIN car_makers ON countries.countryid = car_makers.countryid JOIN model_list ON car_makers.id = model_list.makerid JOIN car_names ON model_list.modelid = car_names.modelid JOIN cars_data ON car_names.makeid = cars_data.id WHERE car_makers.fullname = "Toyota"   AND cars_data.cylinders = 4 
 SELECT min(cars_data.Weight) FROM continents JOIN countries ON continents.ContId = countries.ContId JOIN car_makers ON countries.CountryId = car_makers.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.Country = "USA"   AND cars_data.Cylinders = 8   AND cars_data.Year = 1974 
 SELECT min(cars_data.Weight) FROM continents JOIN countries ON continents.ContId = countries.ContId JOIN car_makers ON countries.CountryId = car_makers.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.FullName = "Toyota"   AND cars_data.Cylinders = 8   AND cars_data.Year = 1974 
 SELECT car_makers.maker,        model_list.model FROM car_makers JOIN model_list ON car_makers.id = model_list.maker 
 SELECT car_makers.maker,        model_list.model FROM continents JOIN countries ON continents.contid = countries.contid JOIN car_makers ON countries.countryid = car_makers.countryid JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id 
 SELECT countries.CountryName,        countries.CountryId FROM continents JOIN countries ON continents.ContId = countries.ContId JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING count(*) >= 1 
 SELECT countries.CountryName,        countries.CountryId FROM continents JOIN countries ON continents.ContId = countries.ContId JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING count(*) >= 1 
 SELECT count(*) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE countries.Continent = "Europe"   AND cars_data.Horsepower > 150 
 SELECT count(*) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.FullName = "Toyota"   AND cars_data.Horsepower > 150 
 SELECT avg(cars_data.Weight),        cars_data.Year FROM continents JOIN countries ON continents.ContId = countries.ContId JOIN car_makers ON countries.CountryId = car_makers.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY cars_data.Year 
 SELECT cars_data.year,        avg(cars_data.weight) FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid JOIN car_makers ON car_makers.id = car_names.makeid JOIN countries ON countries.countryid = car_makers.countryid JOIN continents ON continents.contid = countries.continent GROUP BY cars_data.year 
 SELECT countries.CountryName FROM continents JOIN countries ON continents.ContId = countries.ContId JOIN car_makers ON car_makers.Country = countries.CountryId GROUP BY countries.CountryName HAVING count(*) >= 3 
 SELECT countries.CountryName FROM continents JOIN countries ON continents.ContId = countries.ContId JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName HAVING count(*) >= 3 WHERE continents.Continent = "Europe" 
 SELECT max(cars_data.Horsepower),        car_names.Make FROM continents JOIN countries ON continents.ContId = countries.ContId JOIN car_makers ON countries.CountryId = car_makers.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 3 GROUP BY car_names.Make 
 SELECT car_makers.make,        max(cars_data.horsepower) FROM continents JOIN countries ON continents.contid = countries.contid JOIN car_makers ON countries.countryid = car_makers.countryid JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.cylinders = 3 GROUP BY car_makers.make 
 SELECT model_list.model FROM continents JOIN countries ON continents.contid = countries.contid JOIN car_makers ON countries.countryid = car_makers.countryid JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id GROUP BY model_list.model ORDER BY cars_data.mpg DESC LIMIT 1 
 SELECT model_list.model FROM continents JOIN countries ON continents.contid = countries.contid JOIN car_makers ON countries.countryid = car_makers.countryid JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id ORDER BY cars_data.mpg DESC LIMIT 1 
 SELECT avg(cars_data.Horsepower) FROM continents JOIN countries ON continents.ContId = countries.ContId JOIN car_makers ON countries.CountryId = car_makers.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.Country = "United States"   AND cars_data.Year < 1980 
 SELECT avg(cars_data.Horsepower) FROM continents JOIN countries ON continents.ContId = countries.ContId JOIN car_makers ON countries.CountryId = car_makers.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.Country = "USA"   AND cars_data.Year < 1980 
 SELECT avg(cars_data.Edispl) FROM continents JOIN countries ON continents.ContId = countries.ContId JOIN car_makers ON countries.CountryId = car_makers.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_names.Make = "volvo" 
 SELECT avg(cars_data.Edispl) FROM continents JOIN countries ON continents.ContId = countries.ContId JOIN car_makers ON countries.CountryId = car_makers.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.Maker = "volvo" 
 SELECT max(cars_data.Accelerate),        cars_data.Cylinders FROM continents JOIN countries ON continents.ContId = countries.ContId JOIN car_makers ON countries.CountryId = car_makers.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY cars_data.Cylinders 
 SELECT max(cars_data.Accelerate),        cars_data.Cylinders FROM continents JOIN countries ON continents.ContId = countries.ContId JOIN car_makers ON countries.CountryId = car_makers.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY cars_data.Cylinders 
 SELECT model_list.model FROM continents JOIN countries ON continents.contid = countries.contid JOIN car_makers ON countries.countryid = car_makers.countryid JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id GROUP BY model_list.model ORDER BY count(*) DESC LIMIT 1 
 SELECT model_list.model FROM continents JOIN countries ON continents.contid = countries.contid JOIN car_makers ON countries.countryid = car_makers.countryid JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id GROUP BY model_list.model ORDER BY count(*) DESC LIMIT 1 
 SELECT count(*) FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders > 4 
 SELECT count(*) FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders > 4 
 SELECT count(*) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.FullName = "Toyota"   AND cars_data.Year = 1980 
 SELECT count(*) FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id JOIN car_makers ON car_makers.Id = car_names.Maker WHERE car_makers.FullName = "Toyota"   AND cars_data.Year = 1980 
 SELECT count(*) FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE car_makers.fullname = "American Motor Company" 
 SELECT count(*) FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE car_makers.fullname = "American Motor Company" 
 SELECT car_makers.FullName,        car_makers.id FROM continents JOIN countries ON continents.ContId = countries.ContId JOIN car_makers ON countries.CountryId = car_makers.CountryId JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id GROUP BY car_makers.id HAVING count(*) > 3 
 SELECT car_makers.FullName,        car_makers.Id FROM continents JOIN countries ON continents.ContId = countries.ContId JOIN car_makers ON countries.CountryId = car_makers.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY car_makers.Id HAVING count(*) > 3 
 SELECT DISTINCT model_list.model FROM continents JOIN countries ON continents.contid = countries.contid JOIN car_makers ON countries.countryid = car_makers.countryid JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE car_makers.fullname = "General Motors"   OR cars_data.weight > 3500 
 SELECT model_list.Model FROM continents JOIN countries ON continents.ContId = countries.ContId JOIN car_makers ON countries.CountryId = car_makers.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.Maker = "General Motors"   OR cars_data.Weight > 3500 
 SELECT cars_data.year FROM continents JOIN countries ON continents.ContId = countries.ContId JOIN car_makers ON countries.CountryId = car_makers.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < 3000   OR cars_data.Weight > 4000 
 SELECT cars_data.year FROM continents JOIN countries ON continents.ContId = countries.ContId JOIN car_makers ON countries.CountryId = car_makers.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < 4000 INTERSECT   SELECT cars_data.year   FROM continents   JOIN countries ON continents.ContId = countries.ContId   JOIN car_makers ON countries.CountryId = car_makers.CountryId   JOIN model_list ON car_makers.Id = model_list.Maker   JOIN car_names ON model_list.Model = car_names.Model   JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight > 3000 
 SELECT car_names.Horsepower FROM continents JOIN countries ON continents.ContId = countries.ContId JOIN car_makers ON countries.CountryId = car_makers.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.Accelerate DESC LIMIT 1 
 SELECT car_names.Horsepower FROM continents JOIN countries ON continents.ContId = countries.ContId JOIN car_makers ON countries.CountryId = car_makers.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.FullName = "Toyota" ORDER BY cars_data.Accelerate DESC LIMIT 1 
 SELECT cars_data.cylinders FROM continents JOIN countries ON continents.ContId = countries.ContId JOIN car_makers ON countries.CountryId = car_makers.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_names.Model = "volvo" ORDER BY cars_data.Accelerate LIMIT 1 
 SELECT cars_data.cylinders FROM continents JOIN countries ON continents.ContId = countries.ContId JOIN car_makers ON countries.CountryId = car_makers.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_names.Make = "volvo" ORDER BY cars_data.Accelerate LIMIT 1 
 SELECT count(*) FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Accelerate >     (SELECT max(Accelerate)      FROM cars_data      JOIN car_names ON car_names.MakeId = cars_data.Id      WHERE car_names.Model =          (SELECT Model           FROM model_list           JOIN car_makers ON model_list.Maker = car_makers.Id           WHERE car_makers.Country =               (SELECT Country                FROM countries                JOIN continents ON countries.ContId = continents.ContId                WHERE Continent = "USA"))      ) 
 SELECT count(*) FROM car_names JOIN cars_data ON car_names.makeid = cars_data.id JOIN car_makers ON car_makers.id = car_names.maker WHERE car_makers.fullname =     (SELECT car_makers.fullname      FROM car_makers      JOIN cars_data ON car_makers.id = cars_data.id      GROUP BY car_makers.fullname      ORDER BY sum(cars_data.horsepower) DESC      LIMIT 1)   AND cars_data.accelerate >     (SELECT min(accelerate)      FROM cars_data      JOIN car_names ON cars_data.id = car_names.makeid      JOIN car_makers ON car_makers.id = car_names.maker      GROUP BY car_makers.fullname      ORDER BY sum(cars_data.horsepower) DESC      LIMIT 1) 
 SELECT COUNT(DISTINCT countries.CountryName) FROM continents JOIN countries ON continents.ContId = countries.ContId JOIN car_makers ON countries.CountryId = car_makers.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.Country = countries.CountryId GROUP BY countries.CountryName HAVING COUNT(car_makers.CountryId) > 2 
 SELECT count(*) FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING count(*) > 2 
 SELECT count(*) FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders > 6 
 SELECT count(*) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.FullName = "Toyota"   AND cars_data.Cylinders > 6 
 SELECT model_list.model FROM continents JOIN countries ON continents.contid = countries.contid JOIN car_makers ON countries.countryid = car_makers.countryid JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.cylinders = 4 ORDER BY cars_data.horsepower DESC LIMIT 1 
 SELECT model_list.model FROM continents JOIN countries ON continents.contid = countries.contid JOIN car_makers ON countries.countryid = car_makers.countryid JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.cylinders = 4 GROUP BY model_list.model ORDER BY cars_data.horsepower DESC LIMIT 1 
 SELECT car_names.MakeId,        car_names.Make FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Horsepower >     (SELECT min(Horsepower)      FROM cars_data)   AND cars_data.Cylinders > 3 
 SELECT car_names.MakeId,        car_names.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Horsepower <     (SELECT min(Horsepower)      FROM cars_data)   AND cars_data.Cylinders < 4 
 SELECT max(cars_data.mpg) FROM continents JOIN countries ON continents.contid = countries.contid JOIN car_makers ON countries.countryid = car_makers.countryid JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE car_makers.country = "USA"   AND cars_data.cylinders = 8   AND cars_data.year < 1980 
 SELECT max(cars_data.mpg) FROM continents JOIN countries ON continents.contid = countries.contid JOIN car_makers ON countries.countryid = car_makers.countryid JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE car_makers.country = "USA"   AND cars_data.cylinders = 8   AND cars_data.year < 1980 
 SELECT model_list.model FROM continents JOIN countries ON continents.contid = countries.contid JOIN car_makers ON countries.countryid = car_makers.countryid JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE car_makers.maker!= "Ford Motor Company"   AND cars_data.weight < 3500 
 SELECT model_list.model FROM continents JOIN countries ON continents.contid = countries.contid JOIN car_makers ON countries.countryid = car_makers.countryid JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.weight < 3500   AND car_makers.maker!= "Ford Motor Company" 
 SELECT continent FROM continents EXCEPT SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING count(*) > 1 
 SELECT continent FROM continents EXCEPT SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country 
;
;
 SELECT countries.countryid,        countries.countryname FROM continents JOIN countries ON continents.contid = countries.contid JOIN car_makers ON countries.countryid = car_makers.countryid GROUP BY countries.countryid HAVING count(*) > 3 UNION SELECT car_names.makeid,        car_names.model FROM model_list JOIN car_names ON model_list.model = car_names.model WHERE car_names.make = 'fiat' 
 SELECT countries.countryid,        countries.countryname FROM continents JOIN countries ON continents.contid = countries.contid JOIN car_makers ON countries.countryid = car_makers.countryid GROUP BY countries.countryid HAVING count(*) > 3 UNION SELECT car_names.makeid,        car_names.model FROM model_list JOIN car_names ON model_list.model = car_names.model WHERE car_names.make = "Fiat" 
 SELECT countries.Country FROM airlines JOIN countries ON airlines.Country = countries.Country WHERE airlines.Airline = "JetBlue Airways"; 
 SELECT countries.Country FROM airlines JOIN countries ON airlines.Country = countries.Country WHERE airlines.Airline = "Jetblue Airways"; 
 SELECT airlines.abbreviation FROM airlines JOIN airports ON airlines.id = airports.id JOIN flights ON airlines.id = flights.airline WHERE airlines.name = "JetBlue Airways" 
 SELECT airlines.abbreviation FROM airlines JOIN flights ON airlines.uid = flights.airline JOIN airports ON flights.sourceairport = airports.airportcode WHERE airlines.name = "Jetblue Airways" 
 SELECT airlines.name,        airlines.abbreviation FROM airlines JOIN airports ON airlines.id = airports.id JOIN flights ON airports.id = flights.sourceairport WHERE airports.country = "USA" 
 SELECT airlines.airline,        airlines.abbreviation FROM airlines JOIN airports ON airlines.id = airports.id JOIN flights ON airlines.id = flights.airline WHERE airports.country = "USA" 
 SELECT airports.AirportCode,        airports.AirportName FROM airlines JOIN airports ON airlines.uid = airports.uid JOIN flights ON airlines.uid = flights.Airline WHERE airports.City = "Anthony" 
 SELECT airports.AirportCode,        airports.AirportName FROM airlines JOIN airports ON airlines.Airline = airports.Country JOIN flights ON airlines.uid = flights.Airline WHERE airports.city = "Anthony" 
 SELECT count(*) FROM airlines 
 SELECT count(*) FROM airlines 
 SELECT count(*) FROM airports 
 SELECT count(*) FROM airports 
 SELECT count(*) FROM flights 
 SELECT count(*) FROM flights 
 SELECT airlines.airline FROM airlines JOIN airports ON airlines.uid = airports.uid JOIN flights ON airlines.uid = flights.airline WHERE airlines.abbreviation = "UAL" 
 SELECT airlines.abbreviation FROM airlines JOIN airports ON airlines.id = airports.id JOIN flights ON airlines.id = flights.airline WHERE airlines.abbreviation = "UAL" 
 SELECT count(*) FROM airlines WHERE country = "USA" 
 SELECT count(*) FROM airlines WHERE country = 'USA' 
 SELECT airports.Country FROM airlines JOIN airports ON airlines.uid = airports.uid JOIN flights ON airlines.uid = flights.Airline WHERE airports.AirportName = "Alton" 
 SELECT airports.Country,        airports.City FROM airlines JOIN airports ON airlines.uid = airports.uid JOIN flights ON airlines.Airline = flights.Airline WHERE airports.AirportName = "Alton" 
 SELECT airports.AirportName FROM airlines JOIN airports ON airlines.uid = airports.uid JOIN flights ON airlines.uid = flights.Airline WHERE airports.AirportCode = "AKO" 
 SELECT airports.AirportName FROM airlines JOIN airports ON airlines.uid = airports.uid JOIN flights ON airlines.uid = flights.Airline WHERE airports.AirportCode = "AKO" 
 SELECT airports.AirportName FROM airlines JOIN airports ON airlines.uid = airports.uid JOIN flights ON airlines.uid = flights.Airline WHERE airports.City = "Aberdeen" 
 SELECT airports.AirportName FROM airlines JOIN airports ON airlines.uid = airports.uid JOIN flights ON airlines.uid = flights.Airline WHERE airports.City = "Aberdeen" 
 SELECT count(*) FROM airlines JOIN airports ON airlines.aid = airports.aid JOIN flights ON airlines.id = flights.id WHERE airports.AirportName = "APG" 
 SELECT count(*) FROM airlines JOIN airports ON airlines.aid = airports.aid JOIN flights ON airlines.id = flights.id WHERE airports.AirportName = "APG" 
 SELECT count(*) FROM airlines JOIN airports ON airlines.aid = airports.aid JOIN flights ON airlines.aid = flights.airline WHERE airports.AirportName = "ATO" 
 SELECT count(*) FROM airlines JOIN airports ON airlines.aid = airports.aid JOIN flights ON airlines.alid = flights.alid WHERE airports.AirportName = "ATO" 
 SELECT count(*) FROM airlines JOIN airports ON airlines.aid = airports.aid JOIN flights ON airlines.id = flights.id WHERE airports.city = "Aberdeen" 
 SELECT count(*) FROM airlines JOIN airports ON airlines.aid = airports.aid JOIN flights ON airlines.id = flights.id WHERE airports.name = "Aberdeen" 
 SELECT count(*) FROM airlines JOIN airports ON airlines.aid = airports.aid JOIN flights ON airlines.id = flights.id WHERE airports.city = "Aberdeen"; 
 SELECT count(*) FROM airlines JOIN airports ON airlines.aid = airports.aid JOIN flights ON airlines.alid = flights.alid WHERE airports.city = "Aberdeen" 
 SELECT count(*) FROM airlines JOIN airports ON airlines.id = flights.sourceairport JOIN airports ON airports.id = flights.destairport WHERE airports.city = "Aberdeen"   AND airports.city = "Ashley" 
 SELECT count(*) FROM airlines JOIN airports ON airlines.id = flights.sourceairport JOIN airports ON airlines.id = flights.destairport WHERE airports.city = "Aberdeen"   AND airports.city = "Ashley" 
 SELECT count(*) FROM airlines JOIN flights ON airlines.uid = flights.airline JOIN airports ON flights.sourceairport = airports.airportcode WHERE airlines.name = "JetBlue Airways" 
 SELECT count(*) FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE airlines.airline = 'Jetblue Airways' 
 SELECT count(*) FROM airlines JOIN airports ON airlines.aid = airports.aid JOIN flights ON airlines.id = flights.id WHERE airlines.name = 'United Airlines'   AND airports.name = 'ASY' 
 SELECT count(*) FROM airlines JOIN airports ON airlines.uid = flights.airline WHERE airlines.airline = "United Airlines"   AND airports.airportcode = "ASY"; 
 SELECT count(*) FROM airlines JOIN airports ON airlines.aid = airports.aid JOIN flights ON airlines.id = flights.id WHERE airlines.name = 'United Airlines'   AND airports.airportcode = 'AHD' 
 SELECT count(*) FROM airlines JOIN airports ON airlines.uid = airports.uid JOIN flights ON airlines.uid = flights.airline WHERE airlines.airline = "United Airlines"   AND airports.airportcode = "AHD"; 
 SELECT count(*) FROM airlines JOIN airports ON airlines.uid = flights.airline WHERE airlines.airline = 'United Airlines'   AND airports.city = 'Aberdeen' 
 SELECT count(*) FROM airlines JOIN airports ON airlines.abbreviation = "United" JOIN flights ON airlines.uid = flights.airline WHERE airports.city = "Aberdeen" 
 SELECT airports.city FROM airlines JOIN airports ON airlines.id = airports.id JOIN flights ON airlines.id = flights.id GROUP BY airports.city ORDER BY count(*) DESC LIMIT 1 
 SELECT airports.city FROM airlines JOIN airports ON airlines.uid = airports.uid JOIN flights ON airlines.uid = flights.airline GROUP BY airports.city ORDER BY count(*) DESC LIMIT 1 
 SELECT airports.city FROM airlines JOIN airports ON airlines.id = airports.id JOIN flights ON airlines.id = flights.id GROUP BY airports.city ORDER BY count(*) DESC LIMIT 1 
 SELECT airports.city FROM airlines JOIN airports ON airlines.uid = airports.uid JOIN flights ON airlines.uid = flights.airline GROUP BY airports.city ORDER BY count(*) DESC LIMIT 1 
 SELECT airports.AirportCode FROM airlines JOIN airports ON airlines.uid = airports.uid JOIN flights ON airlines.uid = flights.Airline GROUP BY airports.AirportCode ORDER BY count(*) DESC LIMIT 1 
 SELECT airports.AirportCode FROM airlines JOIN airports ON airlines.uid = airports.uid JOIN flights ON airlines.uid = flights.Airline GROUP BY airports.AirportCode ORDER BY count(*) DESC LIMIT 1 
 SELECT airports.AirportCode FROM airlines JOIN airports ON airlines.uid = airports.uid JOIN flights ON airlines.uid = flights.Airline GROUP BY airports.AirportCode ORDER BY count(*) LIMIT 1 
 SELECT airports.AirportCode FROM airlines JOIN airports ON airlines.uid = airports.uid JOIN flights ON airlines.uid = flights.Airline GROUP BY airports.AirportCode ORDER BY count(*) LIMIT 1 
 SELECT airlines.airline FROM airlines JOIN airports ON airlines.id = airports.id JOIN flights ON airlines.id = flights.airline GROUP BY airlines.airline ORDER BY count(*) DESC LIMIT 1 
 SELECT airlines.airline FROM airlines JOIN airports ON airlines.id = airports.id JOIN flights ON airlines.id = flights.airline GROUP BY airlines.airline ORDER BY count(*) DESC LIMIT 1 
 SELECT airlines.abbreviation,        airlines.country FROM airlines JOIN airports ON airlines.id = airports.id JOIN flights ON airlines.id = flights.airline GROUP BY airlines.id ORDER BY count(*) LIMIT 1 
 SELECT airlines.abbreviation,        airlines.country FROM airlines JOIN airports ON airlines.id = airports.id JOIN flights ON airlines.id = flights.airline GROUP BY airlines.id ORDER BY count(*) LIMIT 1 
 SELECT airlines.airline FROM airlines JOIN airports ON airlines.uid = airports.uid JOIN flights ON airlines.uid = flights.airline WHERE airports.airportcode = 'AHD' 
 SELECT airlines.airline FROM airlines JOIN airports ON airlines.uid = airports.aid JOIN flights ON airlines.uid = flights.airline WHERE airports.airportcode = "AHD" 
 SELECT airlines.airline FROM airlines JOIN airports ON airlines.uid = airports.uid JOIN flights ON airlines.uid = flights.airline WHERE airports.airportcode = 'AHD' 
 SELECT airlines.airline FROM airlines JOIN airports ON airlines.uid = airports.uid JOIN flights ON airlines.uid = flights.airline WHERE airports.airportcode = "AHD" 
 SELECT airlines.airline FROM airlines JOIN airports ON airlines.uid = airports.uid JOIN flights ON airlines.uid = flights.airline WHERE airports.airportcode = 'APG' INTERSECT   SELECT airlines.airline   FROM airlines   JOIN airports ON airlines.uid = airports.uid   JOIN flights ON airlines.uid = flights.airline WHERE airports.airportcode = 'CVO' 
 SELECT airlines.airline FROM airlines JOIN airports ON airlines.uid = airports.uid JOIN flights ON airlines.uid = flights.airline WHERE airports.airportcode = 'APG' INTERSECT   SELECT airlines.airline   FROM airlines   JOIN airports ON airlines.uid = airports.uid   JOIN flights ON airlines.uid = flights.airline WHERE airports.airportcode = 'CVO' 
 SELECT airlines.airline FROM airlines JOIN airports ON airlines.uid = airports.uid JOIN flights ON airlines.uid = flights.airline WHERE airports.airportcode = 'CVO' EXCEPT SELECT airlines.airline FROM airlines JOIN airports ON airlines.uid = airports.uid JOIN flights ON airlines.uid = flights.airline WHERE airports.airportcode = 'APG' 
 SELECT airlines.abbreviation FROM airlines JOIN airports ON airlines.uid = airports.uid JOIN flights ON airlines.uid = flights.airline WHERE airports.airportcode = "CVO" EXCEPT SELECT airlines.abbreviation FROM airlines JOIN airports ON airlines.uid = airports.uid JOIN flights ON airlines.uid = flights.airline WHERE airports.airportcode = "APG" 
 SELECT airlines.airline FROM airlines JOIN airports ON airlines.id = airports.id JOIN flights ON airlines.id = flights.airline GROUP BY airlines.id HAVING count(*) >= 10 
 SELECT airlines.airline FROM airlines JOIN airports ON airlines.id = airports.id JOIN flights ON airlines.id = flights.airline GROUP BY airlines.airline HAVING count(*) >= 10 
 SELECT airlines.airline FROM airlines JOIN airports ON airlines.id = airports.id JOIN flights ON airlines.id = flights.airline GROUP BY airlines.id HAVING count(*) < 200 
 SELECT airlines.airline FROM airlines JOIN airports ON airlines.id = airports.id JOIN flights ON airlines.id = flights.airline GROUP BY airlines.id HAVING count(*) < 200 
 SELECT flights.flightno FROM airlines JOIN airports ON airlines.uid = airports.uid JOIN flights ON airports.airportcode = flights.sourceairport WHERE airlines.airline = "United Airlines" 
 SELECT flights.flightno FROM airlines JOIN airports ON airlines.abbreviation = "United" JOIN flights ON airlines.uid = flights.airline JOIN airports ON flights.sourceairport = airports.airportcode WHERE airlines.name = "United Airlines" 
 SELECT flights.flightno FROM airlines JOIN airports ON airlines.aid = airports.aid JOIN flights ON airlines.aid = flights.aid WHERE airports.airportcode = "APG" 
 SELECT flights.flightno FROM airlines JOIN airports ON airlines.abbreviation = airports.countryabbrev JOIN flights ON airports.airportcode = flights.sourceairport WHERE airports.airportname = "APG" 
 SELECT flights.flightno FROM airlines JOIN airports ON airlines.abbreviation = "APG" JOIN flights ON airlines.uid = flights.airline WHERE airports.airportcode = "APG" 
 SELECT flights.flightno FROM airlines JOIN airports ON airlines.abbreviation = airports.countryabbrev JOIN flights ON airlines.uid = flights.airline WHERE airports.airportcode = "APG" 
 SELECT flights.flightno FROM airlines JOIN airports ON airlines.aid = airports.aid JOIN flights ON airlines.id = flights.id WHERE airports.city = "Aberdeen" 
 SELECT flights.flightno FROM airlines JOIN airports ON airlines.id = airports.id JOIN flights ON airlines.id = flights.id WHERE airports.city = "Aberdeen" 
 SELECT flights.flightno FROM airlines JOIN airports ON airlines.abbreviation = airports.countryabbrev JOIN flights ON airlines.uid = flights.airline WHERE airports.city = "Aberdeen" 
 SELECT flights.flightno FROM airlines JOIN airports ON airlines.abbreviation = airports.countryabbrev JOIN flights ON airlines.uid = flights.airline WHERE airports.city = "Aberdeen" 
 SELECT count(*) FROM airlines JOIN airports ON airlines.aid = airports.aid JOIN flights ON airlines.aid = flights.aid WHERE airports.city = "Aberdeen"   OR airports.city = "Abilene" 
 SELECT count(*) FROM airlines JOIN airports ON airlines.aid = airports.aid JOIN flights ON airlines.aid = flights.airline WHERE airports.city = "Aberdeen"   OR airports.city = "Abilene" 
 SELECT AirportName FROM airports WHERE AirportCode NOT IN     (SELECT SourceAirport      FROM flights      UNION      SELECT DestAirport      FROM flights) 
 SELECT AirportCode FROM airports WHERE AirportCode NOT IN     (SELECT SourceAirport      FROM flights)   AND AirportCode NOT IN     (SELECT DestAirport      FROM flights) 
 SELECT count(*) FROM employee 
 SELECT count(*) FROM employee 
 SELECT employee.Name FROM employee JOIN shop ON employee.City = shop.District JOIN hiring ON shop.Shop_ID = hiring.Shop_ID JOIN evaluation ON hiring.Employee_ID = evaluation.Employee_ID ORDER BY employee.Age ASC 
 SELECT employee.Name FROM employee JOIN shop ON employee.City = shop.Location JOIN hiring ON shop.Shop_ID = hiring.Shop_ID JOIN evaluation ON hiring.Employee_ID = evaluation.Employee_ID ORDER BY employee.Age ASC 
 SELECT count(*),        employee.city FROM employee JOIN shop ON employee.employee_id = hiring.employee_id WHERE hiring.shop_id = shop.shop_id GROUP BY employee.city 
 SELECT count(*),        employee.city FROM employee JOIN shop ON employee.city = shop.city JOIN hiring ON shop.shop_id = hiring.shop_id JOIN evaluation ON hiring.employee_id = evaluation.employee_id GROUP BY employee.city 
 SELECT DISTINCT employee.city FROM employee JOIN shop ON employee.city = shop.city JOIN hiring ON shop.shop_id = hiring.shop_id JOIN evaluation ON hiring.employee_id = evaluation.employee_id WHERE employee.age < 30 GROUP BY employee.city HAVING COUNT(*) > 1 
 SELECT employee.city FROM employee JOIN shop ON employee.city = shop.location JOIN hiring ON shop.shop_id = hiring.shop_id JOIN evaluation ON hiring.employee_id = evaluation.employee_id WHERE employee.age < 30 GROUP BY employee.city HAVING count(*) > 1 
 SELECT count(*),        LOCATION FROM shop GROUP BY LOCATION 
 SELECT LOCATION,        COUNT(*) FROM shop GROUP BY LOCATION 
 SELECT shop.manager_name,        shop.district FROM employee JOIN shop ON employee.employee_id = hiring.employee_id WHERE hiring.shop_id =     (SELECT shop_id      FROM shop      ORDER BY number_products DESC      LIMIT 1) 
 SELECT shop.manager_name,        shop.district FROM employee JOIN shop ON employee.employee_id = hiring.employee_id WHERE hiring.shop_id =     (SELECT shop_id      FROM shop      ORDER BY number_products DESC      LIMIT 1) 
 SELECT min(shop.Number_products),        max(shop.Number_products) FROM employee JOIN shop ON employee.Employee_ID = hiring.Employee_ID WHERE hiring.Shop_ID = shop.Shop_ID 
 SELECT min(Number_products),        max(Number_products) FROM shop 
 SELECT shop.name,        shop.location,        shop.district FROM employee JOIN shop ON employee.employee_id = hiring.employee_id WHERE hiring.shop_id = shop.shop_id ORDER BY shop.number_products DESC 
 SELECT shop.name,        shop.location,        shop.district FROM employee JOIN shop ON employee.employee_id = hiring.employee_id WHERE hiring.shop_id = shop.shop_id GROUP BY shop.district ORDER BY shop.number_products DESC 
 SELECT shop.name FROM shop WHERE shop.number_products >     (SELECT avg(number_products)      FROM shop) 
 SELECT shop.name FROM shop JOIN hiring ON shop.shop_id = hiring.shop_id JOIN employee ON hiring.employee_id = employee.employee_id WHERE shop.number_products >     (SELECT avg(number_products)      FROM shop) 
 SELECT employee.Name FROM employee JOIN shop ON employee.Employee_ID = hiring.Employee_ID JOIN hiring ON shop.Shop_ID = hiring.Shop_ID JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID GROUP BY employee.Employee_ID ORDER BY COUNT(*) DESC LIMIT 1 
 SELECT employee.Name FROM employee JOIN shop ON employee.Employee_ID = hiring.Employee_ID JOIN hiring ON shop.Shop_ID = hiring.Shop_ID JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID GROUP BY employee.Employee_ID ORDER BY COUNT(*) DESC LIMIT 1 
 SELECT employee.Name FROM employee JOIN shop ON employee.City = shop.District JOIN hiring ON shop.Shop_ID = hiring.Shop_ID JOIN evaluation ON hiring.Employee_ID = evaluation.Employee_ID ORDER BY evaluation.Bonus DESC LIMIT 1 
 SELECT employee.Name FROM employee JOIN shop ON employee.Employee_ID = hiring.Employee_ID JOIN hiring ON shop.Shop_ID = hiring.Shop_ID JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID ORDER BY evaluation.Bonus DESC LIMIT 1 
 SELECT name FROM employee WHERE employee_id NOT IN     (SELECT employee_id      FROM evaluation) 
 SELECT name FROM employee WHERE employee_id NOT IN     (SELECT employee_id      FROM evaluation) 
 SELECT shop.name FROM employee JOIN shop ON employee.city = shop.location JOIN hiring ON shop.shop_id = hiring.shop_id GROUP BY shop.name ORDER BY count(*) DESC LIMIT 1 
 SELECT shop.name FROM employee JOIN shop ON employee.city = shop.location JOIN hiring ON shop.shop_id = hiring.shop_id GROUP BY shop.name ORDER BY count(*) DESC LIMIT 1 
 SELECT name FROM shop WHERE shop_id NOT IN     (SELECT shop_id      FROM hiring) 
 SELECT name FROM shop WHERE shop_id NOT IN     (SELECT shop_id      FROM hiring) 
 SELECT shop.name,        COUNT(*) FROM employee JOIN shop ON employee.city = shop.location JOIN hiring ON shop.shop_id = hiring.shop_id AND employee.employee_id = hiring.employee_id GROUP BY shop.name 
 SELECT count(*),        shop.name FROM employee JOIN shop ON employee.city = shop.location JOIN hiring ON shop.shop_id = hiring.shop_id GROUP BY shop.name 
 SELECT sum(evaluation.bonus) FROM employee JOIN shop ON employee.employee_id = hiring.employee_id JOIN hiring ON shop.shop_id = hiring.shop_id JOIN evaluation ON employee.employee_id = evaluation.employee_id 
 SELECT sum(evaluation.bonus) FROM employee JOIN shop ON employee.employee_id = hiring.employee_id JOIN hiring ON shop.shop_id = hiring.shop_id JOIN evaluation ON employee.employee_id = evaluation.employee_id 
 SELECT * FROM employee JOIN shop ON employee.Employee_ID = hiring.Employee_ID WHERE hiring.Shop_ID = shop.Shop_ID 
 SELECT * FROM employee JOIN shop ON employee.Employee_ID = hiring.Employee_ID WHERE hiring.Shop_ID = shop.Shop_ID 
 SELECT District FROM shop WHERE Number_products < 3000 INTERSECT   SELECT District   FROM shop WHERE Number_products > 10000 
 SELECT District FROM shop WHERE Number_products < 3000 INTERSECT   SELECT District   FROM shop WHERE Number_products > 10000 
 SELECT count(DISTINCT shop.Location) FROM employee JOIN shop ON employee.Employee_ID = hiring.Employee_ID WHERE hiring.Shop_ID = shop.Shop_ID 
 SELECT count(DISTINCT shop.Location) FROM employee JOIN shop ON employee.Employee_ID = hiring.Employee_ID WHERE hiring.Shop_ID = shop.Shop_ID 
 SELECT count(*) FROM documents 
 SELECT count(*) FROM documents 
 SELECT Documents.document_id,        Documents.document_name,        Documents.document_description FROM Ref_template_types JOIN Templates ON Ref_template_types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id 
 SELECT Documents.document_id,        Documents.document_name,        Templates.template_type_description FROM Ref_template_types JOIN Templates ON Ref_template_types.template_type_code = Templates.template_type_code JOIN Documents ON Documents.template_id = Templates.template_id 
 SELECT Documents.document_name,        Templates.template_id FROM Ref_template_types JOIN Templates ON Ref_template_types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id WHERE Documents.document_description LIKE '%w%' 
 SELECT documents.document_name,        templates.template_id FROM Ref_template_types JOIN templates ON Ref_template_types.template_type_code = templates.template_type_code JOIN documents ON templates.template_id = documents.template_id WHERE documents.document_description LIKE '%w%' 
 SELECT Documents.document_id,        Templates.template_id,        Documents.document_description FROM Ref_template_types JOIN Templates ON Ref_template_types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id WHERE Documents.document_name = "Robbin CV" 
 SELECT Documents.document_id,        Templates.template_id,        Templates.template_type_description FROM Ref_template_types JOIN Templates ON Ref_template_types.template_type_code = Templates.template_type_code JOIN Documents ON Documents.template_id = Templates.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id WHERE Documents.document_name = "Robbin CV" 
 SELECT count(DISTINCT templates.template_type_code) FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code JOIN documents ON templates.template_id = documents.template_id JOIN paragraphs ON documents.document_id = paragraphs.document_id 
 SELECT count(DISTINCT templates.template_type_code) FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code JOIN documents ON templates.template_id = documents.template_id JOIN paragraphs ON documents.document_id = paragraphs.document_id 
 SELECT count(DISTINCT documents.document_name) FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code JOIN documents ON templates.template_id = documents.template_id JOIN paragraphs ON documents.document_id = paragraphs.document_id WHERE ref_template_types.template_type_description = "PPT" 
 SELECT count(DISTINCT documents.document_name) FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code JOIN documents ON templates.template_id = documents.template_id JOIN paragraphs ON documents.document_id = paragraphs.document_id WHERE ref_template_types.template_type_description = "PPT" 
 SELECT Templates.template_id,        count(*) FROM Ref_template_types JOIN Templates ON Ref_template_types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id GROUP BY Templates.template_id 
 SELECT Templates.template_id,        count(*) FROM Ref_template_types JOIN Templates ON Ref_template_types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id GROUP BY Templates.template_id 
 SELECT Templates.template_id,        Templates.template_type_code FROM Ref_template_types JOIN Templates ON Ref_template_types.template_type_code = Templates.template_type_code JOIN Documents ON Documents.template_id = Templates.template_id GROUP BY Templates.template_type_code ORDER BY count(*) DESC LIMIT 1 
 SELECT templates.template_id,        ref_template_types.template_type_code FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code JOIN documents ON templates.template_id = documents.template_id GROUP BY templates.template_id ORDER BY count(*) DESC LIMIT 1 
 SELECT Templates.template_id FROM Ref_template_types JOIN Templates ON Ref_template_types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id GROUP BY Templates.template_id HAVING count(*) > 1 
 SELECT Templates.template_id FROM Ref_template_types JOIN Templates ON Ref_template_types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id GROUP BY Templates.template_id HAVING count(*) > 1 
 SELECT template_id FROM templates EXCEPT SELECT templates.template_id FROM templates JOIN documents ON templates.template_id = documents.template_id JOIN paragraphs ON documents.document_id = paragraphs.document_id 
 SELECT template_id FROM templates WHERE template_id NOT IN     (SELECT template_id      FROM documents) 
 SELECT count(*) FROM Ref_template_types 
 SELECT count(*) FROM Ref_template_types 
 SELECT Templates.template_id,        Templates.version_number,        Templates.template_type_code FROM Ref_template_types JOIN Templates ON Ref_template_types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id 
 SELECT Templates.template_id,        Templates.version_number,        Templates.template_type_code FROM Ref_template_types JOIN Templates ON Ref_template_types.template_type_code = Templates.template_type_code 
 SELECT DISTINCT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID 
 SELECT DISTINCT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID 
 SELECT Templates.template_id FROM Ref_template_types JOIN Templates ON Ref_template_types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id WHERE Ref_template_types.template_type_description = "PP"   OR Ref_template_types.template_type_description = "PPT" 
 SELECT Templates.template_id FROM Ref_template_types JOIN Templates ON Ref_template_types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id WHERE Ref_template_types.template_type_description = "PP"   OR Ref_template_types.template_type_description = "PPT" 
 SELECT count(*) FROM Ref_template_types JOIN templates ON Ref_template_types.template_type_code = templates.template_type_code JOIN documents ON templates.template_id = documents.template_id JOIN paragraphs ON documents.document_id = paragraphs.document_id WHERE Ref_template_types.template_type_description = "CV" 
 SELECT count(*) FROM Ref_template_types JOIN templates ON Ref_template_types.template_type_code = templates.template_type_code JOIN documents ON templates.template_id = documents.template_id JOIN paragraphs ON documents.document_id = paragraphs.document_id WHERE Ref_template_types.template_type_description = "CV" 
 SELECT Templates.version_number,        Templates.template_type_code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id WHERE Templates.version_number > 5 
 SELECT Templates.Version_Number,        Templates.Template_Type_Code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Templates.Version_Number > 5 
 SELECT Ref_Template_Types.template_type_code,        count(*) FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id GROUP BY Ref_Template_Types.template_type_code 
 SELECT Ref_Template_Types.template_type_code,        count(*) FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id GROUP BY Ref_Template_Types.template_type_code 
 SELECT ref_template_types.template_type_code FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code GROUP BY templates.template_type_code ORDER BY count(*) DESC LIMIT 1 
 SELECT ref_template_types.template_type_code FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code GROUP BY templates.template_type_code ORDER BY count(*) DESC LIMIT 1 
 SELECT Ref_Template_Types.template_type_code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code GROUP BY Ref_Template_Types.template_type_code HAVING count(*) < 3 
 SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code GROUP BY Templates.Template_Type_Code HAVING count(*) < 3 
 SELECT min(Templates.Version_Number),        Templates.Template_Type_Code FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Templates.Template_Type_Code 
 SELECT templates.version_number,        ref_template_types.template_type_code FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code JOIN documents ON templates.template_id = documents.template_id JOIN paragraphs ON documents.document_id = paragraphs.document_id ORDER BY templates.version_number LIMIT 1 
 SELECT Ref_template_types.template_type_code FROM Ref_template_types JOIN templates ON Ref_template_types.template_type_code = templates.template_type_code JOIN documents ON templates.template_id = documents.template_id JOIN paragraphs ON documents.document_id = paragraphs.document_id WHERE documents.document_name = "Data base" 
 SELECT ref_template_types.template_type_code FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code JOIN documents ON templates.template_id = documents.template_id JOIN paragraphs ON documents.document_id = paragraphs.document_id WHERE documents.document_name = "Data base" 
 SELECT Documents.Document_Name FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Ref_Template_Types.Template_Type_Description = "BK" 
 SELECT DISTINCT Documents.Document_Name FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Ref_Template_Types.Template_Type_Description = "BK" 
 SELECT Ref_template_types.template_type_code,        count(*) FROM Ref_template_types JOIN templates ON Ref_template_types.template_type_code = templates.template_type_code JOIN documents ON templates.template_id = documents.template_id JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY Ref_template_types.template_type_code 
 SELECT Ref_Template_Types.template_type_code,        count(*) FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id GROUP BY Ref_Template_Types.template_type_code 
 SELECT ref_template_types.template_type_code FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code JOIN documents ON templates.template_id = documents.template_id GROUP BY ref_template_types.template_type_code ORDER BY count(*) DESC LIMIT 1 
 SELECT ref_template_types.template_type_code FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code JOIN documents ON templates.template_id = documents.template_id JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY ref_template_types.template_type_code ORDER BY count(*) DESC LIMIT 1 
 SELECT template_type_code FROM Ref_template_types EXCEPT SELECT Ref_template_types.template_type_code FROM Ref_template_types JOIN Templates ON Ref_template_types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id 
 SELECT template_type_code FROM Ref_template_types EXCEPT SELECT Ref_template_types.template_type_code FROM Ref_template_types JOIN Templates ON Ref_template_types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id 
 SELECT Ref_Template_Types.template_type_code,        Ref_Template_Types.template_type_description FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id 
 SELECT Ref_Template_Types.template_type_code,        Ref_Template_Types.template_type_description FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id 
 SELECT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Templates.Template_Type_Code = "AD" 
 SELECT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Templates.Template_Type_Code = "AD" 
 SELECT Ref_Template_Types.template_type_code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id WHERE Ref_Template_Types.template_type_description = "Book" 
 SELECT ref_template_types.template_type_code FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code JOIN documents ON templates.template_id = documents.template_id JOIN paragraphs ON documents.document_id = paragraphs.document_id WHERE ref_template_types.template_type_description = "Book" 
 SELECT DISTINCT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID 
 SELECT DISTINCT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID 
 SELECT Templates.template_id FROM Ref_template_types JOIN Templates ON Ref_template_types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id WHERE Ref_template_types.template_type_description = "Presentation" 
 SELECT Templates.template_id FROM Ref_template_types JOIN Templates ON Ref_template_types.template_type_code = Templates.template_type_code WHERE Ref_template_types.template_type_description = "Presentation" 
 SELECT count(*) FROM documents JOIN templates ON documents.template_id = templates.template_id JOIN paragraphs ON documents.document_id = paragraphs.document_id 
 SELECT count(*) FROM Ref_template_types JOIN templates ON Ref_template_types.template_type_code = templates.template_type_code JOIN documents ON templates.template_id = documents.template_id JOIN paragraphs ON documents.document_id = paragraphs.document_id 
 SELECT count(*) FROM Ref_template_types JOIN templates ON Ref_template_types.template_type_code = templates.template_type_code JOIN documents ON templates.template_id = documents.template_id JOIN paragraphs ON documents.document_id = paragraphs.document_id WHERE documents.document_name = "Summer Show" 
 SELECT count(*) FROM Ref_template_types JOIN templates ON Ref_template_types.template_type_code = templates.template_type_code JOIN documents ON templates.template_id = documents.template_id JOIN paragraphs ON documents.document_id = paragraphs.document_id WHERE documents.document_name = 'Summer Show' 
 SELECT Paragraphs.other_details FROM Ref_template_types JOIN Templates ON Ref_template_types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id WHERE Paragraphs.paragraph_text = "Korea " 
 SELECT Paragraphs.other_details FROM Ref_template_types JOIN Templates ON Ref_template_types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id WHERE Paragraphs.paragraph_text LIKE '%Korea%' 
 SELECT Paragraphs.paragraph_id,        Paragraphs.paragraph_text FROM Ref_template_types JOIN Templates ON Ref_template_types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id WHERE Documents.document_name = "Welcome to NY" 
 SELECT Paragraphs.paragraph_id,        Paragraphs.paragraph_text FROM Ref_template_types JOIN Templates ON Ref_template_types.template_type_code = Templates.template_type_code JOIN Documents ON Documents.template_id = Templates.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id WHERE Documents.document_name = "Welcome to NY" 
 SELECT Paragraphs.paragraph_text FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id WHERE Documents.document_name = "Customer reviews" 
 SELECT Paragraphs.paragraph_text FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.template_type_code = Templates.template_type_code JOIN Documents ON Templates.template_id = Documents.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id WHERE Documents.document_name = "Customer reviews" 
 SELECT Documents.document_id,        count(*) FROM Ref_template_types JOIN Templates ON Ref_template_types.template_type_code = Templates.template_type_code JOIN Documents ON Documents.template_id = Templates.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id GROUP BY Documents.document_id ORDER BY Documents.document_id 
 SELECT Documents.document_id,        count(*) FROM Ref_template_types JOIN Templates ON Ref_template_types.template_type_code = Templates.template_type_code JOIN Documents ON Documents.template_id = Templates.template_id JOIN paragraphs ON paragraphs.document_id = Documents.document_id GROUP BY Documents.document_id ORDER BY Documents.document_id 
 SELECT Documents.document_id,        Documents.document_name,        count(*) FROM Ref_template_types JOIN Templates ON Ref_template_types.template_type_code = Templates.template_type_code JOIN Documents ON Documents.template_id = Templates.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id GROUP BY Documents.document_id 
 SELECT documents.document_id,        documents.document_name,        count(*) FROM documents JOIN templates ON documents.template_id = templates.template_id JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id 
 SELECT DISTINCT Documents.Document_ID FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID HAVING COUNT(*) >= 2 
 SELECT DISTINCT Documents.document_id FROM Ref_template_types JOIN Templates ON Ref_template_types.template_type_code = Templates.template_type_code JOIN Documents ON Documents.template_id = Templates.template_id JOIN paragraphs ON paragraphs.document_id = Documents.document_id GROUP BY Documents.document_id HAVING count(*) >= 2 
 SELECT documents.document_id,        documents.document_name FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code JOIN documents ON templates.template_id = documents.template_id JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id ORDER BY count(*) DESC LIMIT 1 
 SELECT documents.document_id,        documents.document_name FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code JOIN documents ON templates.template_id = documents.template_id JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id ORDER BY count(*) DESC LIMIT 1 
 SELECT documents.document_id FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code JOIN documents ON templates.template_id = documents.template_id JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id ORDER BY count(*) LIMIT 1 
 SELECT documents.document_id FROM Ref_template_types JOIN templates ON Ref_template_types.template_type_code = templates.template_type_code JOIN documents ON templates.template_id = documents.template_id JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id ORDER BY count(*) LIMIT 1 
 SELECT Documents.document_id FROM Ref_template_types JOIN Templates ON Ref_template_types.template_type_code = Templates.template_type_code JOIN Documents ON Documents.template_id = Templates.template_id JOIN paragraphs ON paragraphs.document_id = Documents.document_id GROUP BY Documents.document_id HAVING count(*) BETWEEN 1 AND 2 
 SELECT DISTINCT Documents.document_id FROM Ref_template_types JOIN Templates ON Ref_template_types.template_type_code = Templates.template_type_code JOIN Documents ON Documents.template_id = Templates.template_id JOIN paragraphs ON paragraphs.document_id = Documents.document_id GROUP BY Documents.document_id HAVING count(*) BETWEEN 1 AND 2 
 SELECT Documents.document_id FROM Ref_template_types JOIN Templates ON Ref_template_types.template_type_code = Templates.template_type_code JOIN Documents ON Documents.template_id = Templates.template_id JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id WHERE Paragraphs.paragraph_text = 'Brazil' INTERSECT   SELECT Documents.document_id   FROM Ref_template_types   JOIN Templates ON Ref_template_types.template_type_code = Templates.template_type_code   JOIN Documents ON Documents.template_id = Templates.template_id   JOIN Paragraphs ON Documents.document_id = Paragraphs.document_id WHERE Paragraphs.paragraph_text = 'Ireland' 
 SELECT Documents.document_id FROM Ref_template_types JOIN Templates ON Ref_template_types.template_type_code = Templates.template_type_code JOIN Documents ON Documents.template_id = Templates.template_id JOIN paragraphs ON paragraphs.document_id = Documents.document_id WHERE paragraphs.paragraph_text = 'Brazil' INTERSECT   SELECT Documents.document_id   FROM Ref_template_types   JOIN Templates ON Ref_template_types.template_type_code = Templates.template_type_code   JOIN Documents ON Documents.template_id = Templates.template_id   JOIN paragraphs ON paragraphs.document_id = Documents.document_id WHERE paragraphs.paragraph_text = 'Ireland' 
 SELECT count(*) FROM teacher 
 SELECT count(*) FROM teacher 
 SELECT teacher.name FROM course JOIN teacher ON course.course_id = course_arrange.course_id JOIN course_arrange ON course.course_id = course_arrange.course_id ORDER BY teacher.age 
 SELECT teacher.name FROM course JOIN teacher ON course.course_id = course_arrange.course_id JOIN course_arrange ON course.course_id = course_arrange.course_id ORDER BY teacher.age 
 SELECT teacher.age,        teacher.hometown FROM course JOIN teacher ON course.course_id = course_arrange.course_id JOIN course_arrange ON course.course_id = course_arrange.course_id 
 SELECT teacher.age,        teacher.hometown FROM course JOIN teacher ON course.course_id = course_arrange.course_id JOIN course_arrange ON course.course_id = course_arrange.course_id WHERE course_arrange.grade = "A" 
 SELECT teacher.name FROM course JOIN teacher ON course.course_id = course_arrange.course_id JOIN course_arrange ON course.course_id = course_arrange.course_id WHERE teacher.hometown!= 'Little Lever Urban District' 
 SELECT teacher.name FROM course JOIN teacher ON course.course_id = course_arrange.course_id JOIN course_arrange ON course.course_id = course_arrange.course_id WHERE teacher.hometown!= 'Little Lever Urban District' 
 SELECT teacher.name FROM course JOIN teacher ON course.course_id = course_arrange.course_id JOIN course_arrange ON course.course_id = course_arrange.course_id WHERE teacher.age = 32   OR teacher.age = 33 
 SELECT teacher.name FROM course JOIN teacher ON course.course_id = course_arrange.course_id JOIN course_arrange ON course.course_id = course_arrange.course_id WHERE teacher.age = 32   OR teacher.age = 33 
 SELECT teacher.Hometown FROM course JOIN teacher ON course.Course_ID = course_arrange.Course_ID JOIN course_arrange ON course.Course_ID = course_arrange.Course_ID WHERE course_arrange.Grade =     (SELECT MIN(GRADE)      FROM course_arrange) 
 SELECT teacher.Hometown FROM course JOIN teacher ON course.Course_ID = course_arrange.Course_ID JOIN course_arrange ON course.Course_ID = course_arrange.Course_ID JOIN teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID ORDER BY teacher.Age LIMIT 1 
 SELECT Hometown,        COUNT(*) FROM teacher GROUP BY Hometown 
 SELECT Hometown,        COUNT(*) FROM teacher GROUP BY Hometown 
 SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1 
 SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1 
 SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*) >= 2 
 SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*) >= 2 
 SELECT teacher.name,        course.course FROM course JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id WHERE course_arrange.course_id = course.course_id 
 SELECT teacher.name,        course.course FROM course JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id JOIN course_arrange ON course_arrange.course_id = course.course_id 
 SELECT teacher.name,        course.course FROM course JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id ORDER BY teacher.name 
 SELECT teacher.name,        course.course FROM course JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id WHERE course_arrange.course_id = course.course_id ORDER BY teacher.name 
 SELECT teacher.name FROM course JOIN teacher ON course.course_id = course_arrange.course_id JOIN course_arrange ON course_arrange.teacher_id = teacher.teacher_id WHERE course.course = 'Math' 
 SELECT teacher.name FROM course JOIN teacher ON course.course_id = course_arrange.course_id JOIN course_arrange ON course_arrange.teacher_id = teacher.teacher_id WHERE course.course = 'Math' 
 SELECT teacher.name,        count(*) FROM course JOIN teacher ON course.course_id = course_arrange.course_id JOIN course_arrange ON course.course_id = course_arrange.course_id JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id GROUP BY teacher.teacher_id 
 SELECT teacher.name,        count(*) FROM course JOIN teacher ON course.course_id = course_arrange.course_id JOIN course_arrange ON course.course_id = course_arrange.course_id JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id GROUP BY teacher.name 
 SELECT teacher.name FROM course JOIN teacher ON course.course_id = course_arrange.course_id JOIN course_arrange ON course.course_id = course_arrange.course_id WHERE course_arrange.teacher_id = teacher.teacher_id GROUP BY teacher.name HAVING count(*) >= 2 
 SELECT teacher.name FROM course JOIN teacher ON course.course_id = course_arrange.course_id JOIN course_arrange ON course.course_id = course_arrange.course_id WHERE course_arrange.teacher_id = teacher.teacher_id GROUP BY teacher.name HAVING count(*) >= 2 
 SELECT name FROM teacher WHERE teacher_id NOT IN     (SELECT teacher_id      FROM course_arrange) 
 SELECT name FROM teacher WHERE teacher_id NOT IN     (SELECT teacher_id      FROM course_arrange) 
 SELECT COUNT (DISTINCT visitor.id) FROM museum JOIN visitor ON museum.museum_id = visit.museum_id WHERE visitor.age < 30 
 SELECT visitor.name FROM museum JOIN visitor ON museum.museum_id = visit.museum_id WHERE visitor.level_of_membership > 4 ORDER BY visitor.level_of_membership DESC 
 SELECT avg(visitor.age) FROM museum JOIN visitor ON museum.Museum_ID = visit.Museum_ID WHERE museum.Num_of_Staff > 100   AND visitor.Level_of_membership <= 4 
 SELECT visitor.name,        visitor.level_of_membership FROM museum JOIN visitor ON museum.museum_id = visit.museum_id WHERE visitor.level_of_membership > 4 ORDER BY visitor.age 
 SELECT museum.museum_id,        museum.name FROM museum JOIN visit ON museum.museum_id = visit.museum_id JOIN visitor ON visit.visitor_id = visitor.id GROUP BY museum.museum_id ORDER BY count(*) DESC LIMIT 1 
 SELECT avg(Num_of_Staff) FROM museum WHERE open_year < 2009 
 SELECT museum.open_year,        museum.num_of_staff FROM museum JOIN visit ON museum.museum_id = visit.museum_id JOIN visitor ON visit.visitor_id = visitor.id WHERE museum.name = "Plaza Museum" 
 SELECT museum.name FROM museum JOIN visit ON museum.museum_id = visit.museum_id JOIN visitor ON visit.visitor_id = visitor.id WHERE museum.num_of_staff >     (SELECT min(num_of_staff)      FROM museum      WHERE open_year > 2010) 
 SELECT visitor.id,        visitor.name,        visitor.age FROM museum JOIN visitor ON museum.museum_id = visit.museum_id JOIN visit ON visitor.id = visit.visitor_id GROUP BY visitor.id HAVING COUNT(*) > 1 
 SELECT visitor.id,        visitor.name,        visitor.level_of_membership FROM museum JOIN visitor ON museum.museum_id = visit.museum_id JOIN visit ON visitor.id = visit.visitor_id GROUP BY visitor.id ORDER BY sum(visit.total_spent) DESC LIMIT 1 
 SELECT museum.museum_id,        museum.name FROM museum JOIN visit ON museum.museum_id = visit.museum_id GROUP BY visit.museum_id ORDER BY count(*) DESC LIMIT 1 
 SELECT name FROM museum WHERE museum_id NOT IN     (SELECT museum_id      FROM visit) 
 SELECT visitor.name,        visitor.age FROM museum JOIN visitor ON museum.museum_id = visit.museum_id GROUP BY visitor.id ORDER BY sum(visit.num_of_ticket) DESC LIMIT 1 
 SELECT avg(visit.Num_of_Ticket),        max(visit.Num_of_Ticket) FROM museum JOIN visitor ON museum.Museum_ID = visit.Museum_ID JOIN visit ON visitor.ID = visit.visitor_ID 
 SELECT sum(visit.Num_of_Ticket) FROM museum JOIN visitor ON museum.Museum_ID = visit.Museum_ID WHERE visitor.Level_of_membership = 1 
 SELECT visitor.Name FROM museum JOIN visitor ON museum.Museum_ID = visit.Museum_ID WHERE museum.Open_Year < 2009 INTERSECT   SELECT visitor.Name   FROM museum   JOIN visitor ON museum.Museum_ID = visit.Museum_ID WHERE museum.Open_Year > 2011 
 SELECT count(*) FROM visitor WHERE id NOT IN     (SELECT visitor_id      FROM visit      WHERE museum_id IN          (SELECT museum_id           FROM museum           WHERE open_year > 2010)) 
 SELECT count(*) FROM museum WHERE open_year > 2013   OR open_year < 2008 
 SELECT count(*) FROM players 
 SELECT count(*) FROM players 
 SELECT count(*) FROM matches 
 SELECT count(*) FROM matches 
 SELECT players.first_name,        players.birth_date FROM players JOIN matches ON players.player_id = matches.winner_id WHERE players.country_code = "USA" 
 SELECT players.first_name,        players.birth_date FROM players JOIN matches ON players.player_id = matches.winner_id WHERE players.country_code = "USA" 
 SELECT avg(matches.loser_age),        avg(matches.winner_age) FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id WHERE matches.best_of = 1   AND matches.score = "6-3"   AND rankings.ranking > 1000 
 SELECT avg(matches.loser_age),        avg(matches.winner_age) FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON players.player_id = rankings.player_id WHERE matches.best_of = 5   AND matches.draw_size = 128   AND rankings.ranking > 1000 
 SELECT avg(matches.winner_rank) FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id 
 SELECT avg(rankings.ranking) FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id 
 SELECT max(rankings.ranking) FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON players.player_id = rankings.player_id 
 SELECT max(rankings.ranking) FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON players.player_id = rankings.player_id 
 SELECT count(DISTINCT country_code) FROM players 
 SELECT count(DISTINCT country_code) FROM players 
 SELECT count(DISTINCT matches.loser_name) FROM players JOIN matches ON players.player_id = matches.loser_id 
 SELECT count(DISTINCT matches.loser_name) FROM players JOIN matches ON players.player_id = matches.loser_id 
 SELECT matches.tourney_name FROM players JOIN matches ON players.player_id = matches.winner_id GROUP BY matches.tourney_name HAVING count(*) > 10 
 SELECT matches.tourney_name FROM players JOIN matches ON players.player_id = matches.winner_id GROUP BY matches.tourney_name HAVING count(*) > 10 
 SELECT players.winner_name FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id WHERE matches.year = 2013 INTERSECT   SELECT players.winner_name   FROM players   JOIN matches ON players.player_id = matches.winner_id   JOIN rankings ON players.player_id = rankings.player_id WHERE matches.year = 2016 
 SELECT players.first_name,        players.last_name FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.year = 2013 INTERSECT   SELECT players.first_name,          players.last_name   FROM players   JOIN matches ON players.player_id = matches.winner_id WHERE matches.year = 2016 
 SELECT count(*) FROM matches WHERE matches.year = 2013   OR matches.year = 2016 
 SELECT count(*) FROM matches WHERE matches.year = 2013   OR matches.year = 2016 
 SELECT players.country_code,        players.first_name FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name = "WTA Championships" INTERSECT   SELECT players.country_code,          players.first_name   FROM players   JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name = "Australian Open" 
 SELECT players.first_name,        players.country_code FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name = "WTA Championships" INTERSECT   SELECT players.first_name,          players.country_code   FROM players   JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name = "Australian Open" 
 SELECT players.first_name,        players.country_code FROM players JOIN matches ON players.player_id = matches.winner_id WHERE players.player_id =     (SELECT player_id      FROM players      ORDER BY players.birth_date      LIMIT 1) 
 SELECT players.first_name,        players.country_code FROM players JOIN matches ON players.player_id = matches.winner_id WHERE players.player_id =     (SELECT player_id      FROM players      ORDER BY players.birth_date      LIMIT 1) 
 SELECT players.first_name,        players.last_name FROM players JOIN matches ON players.player_id = matches.winner_id ORDER BY players.birth_date 
 SELECT players.first_name,        players.last_name FROM players JOIN matches ON players.player_id = matches.winner_id ORDER BY players.birth_date 
 SELECT players.first_name,        players.last_name FROM players JOIN matches ON players.player_id = matches.loser_id WHERE matches.loser_hand = "left / L" ORDER BY players.birth_date 
 SELECT players.first_name,        players.last_name FROM players JOIN matches ON players.player_id = matches.loser_id WHERE players.hand = "left" ORDER BY players.birth_date 
 SELECT players.first_name,        players.country_code FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id ORDER BY count(*) DESC LIMIT 1 
 SELECT players.first_name,        players.country_code FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id ORDER BY count(*) DESC LIMIT 1 
 SELECT matches.year FROM players JOIN matches ON players.player_id = matches.winner_id GROUP BY matches.year ORDER BY count(*) DESC LIMIT 1 
 SELECT matches.year FROM players JOIN matches ON players.player_id = matches.winner_id GROUP BY matches.year ORDER BY count(*) DESC LIMIT 1 
 SELECT players.winner_name,        rankings.ranking_points FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.winner_name ORDER BY count(*) DESC LIMIT 1 
 SELECT players.winner_name,        rankings.ranking_points FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.winner_name ORDER BY count(*) DESC LIMIT 1 
 SELECT players.winner_name FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id WHERE matches.tourney_name = "Australian Open" ORDER BY rankings.ranking_points DESC LIMIT 1 
 SELECT players.winner_name FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name = "Australian Open" GROUP BY players.winner_name ORDER BY sum(rankings.ranking_points) DESC LIMIT 1 
 SELECT matches.loser_name,        matches.winner_name FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON players.player_id = rankings.player_id WHERE matches.minutes =     (SELECT max(minutes)      FROM matches) 
 SELECT matches.winner_name,        matches.loser_name FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id WHERE matches.minutes =     (SELECT max(minutes)      FROM matches) 
 SELECT players.first_name,        avg(rankings.ranking) FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id 
 SELECT players.first_name,        avg(rankings.ranking) FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id 
 SELECT players.first_name,        sum(rankings.ranking_points) FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id 
 SELECT players.first_name,        sum(rankings.ranking_points) FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id 
 SELECT count(*),        players.country_code FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.country_code 
 SELECT count(*),        players.country_code FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.country_code 
 SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1 
 SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1 
 SELECT country_code FROM players GROUP BY country_code HAVING count(*) > 50 
 SELECT country_code FROM players GROUP BY country_code HAVING count(*) > 50 
 SELECT count(*) FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY rankings.ranking_date 
 SELECT count(*) FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY rankings.ranking_date 
 SELECT count(*),        YEAR FROM matches GROUP BY YEAR 
 SELECT count(*),        YEAR FROM matches GROUP BY YEAR 
 SELECT players.winner_name,        rankings.ranking FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id WHERE matches.year = 2011 GROUP BY players.winner_name ORDER BY players.winner_age LIMIT 3 
 SELECT players.winner_name,        rankings.ranking FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id WHERE matches.year = 2011 ORDER BY players.winner_age LIMIT 3 
 SELECT count(DISTINCT players.player_id) FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id WHERE matches.tourney_name = "WTA Championships"   AND players.hand = "left" 
 SELECT count(*) FROM players JOIN matches ON players.player_id = matches.winner_id WHERE players.hand = "L"   AND matches.tourney_name = "WTA Championships" 
 SELECT players.first_name,        players.country_code,        players.birth_date FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id WHERE matches.year = 2011 GROUP BY players.player_id ORDER BY sum(rankings.ranking_points) DESC LIMIT 1 
 SELECT players.first_name,        players.country_code,        players.birth_date FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id ORDER BY sum(rankings.ranking_points) DESC LIMIT 1 
 SELECT count(*),        hand FROM players GROUP BY hand 
 SELECT count(*),        hand FROM players GROUP BY hand 
 SELECT count(*) FROM ship WHERE disposition_of_ship = 'Captured' 
 SELECT ship.name,        ship.tonnage FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON death.caused_by_ship_id = ship.id ORDER BY ship.name DESC 
 SELECT battle.name,        battle.date,        battle.result FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON ship.id = death.caused_by_ship_id 
 SELECT max(death.killed),        min(death.killed) FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON ship.id = death.caused_by_ship_id 
 SELECT avg(death.injured) FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON death.caused_by_ship_id = ship.id 
 SELECT death.note,        death.injured FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON death.caused_by_ship_id = ship.id WHERE ship.tonnage = "t" 
 SELECT name,        result FROM battle WHERE bulgarian_commander!= 'Boril' 
 SELECT DISTINCT battle.id,                 battle.name FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.ship_type = 'Brig' 
 SELECT battle.id,        battle.name FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON ship.id = death.caused_by_ship_id GROUP BY battle.id HAVING sum(death.killed) > 10 
 SELECT ship.id,        ship.name FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON death.caused_by_ship_id = ship.id GROUP BY ship.id ORDER BY sum(death.injured) DESC LIMIT 1 
 SELECT DISTINCT battle.name FROM battle JOIN ship ON battle.bulgarian_commander = ship.lost_in_battle JOIN death ON ship.id = death.caused_by_ship_id WHERE battle.latin_commander = "Baldwin I"   AND battle.bulgarian_commander = "Kaloyan" 
 SELECT count(DISTINCT result) FROM battle 
 SELECT count(*) FROM battle WHERE id NOT IN     (SELECT lost_in_battle      FROM ship      WHERE tonnage = 225) 
 SELECT battle.name,        battle.date FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON ship.id = death.caused_by_ship_id WHERE ship.name = 'HMS Atalanta'   AND ship.name = 'Lettice' 
 SELECT name,        result,        bulgarian_commander FROM battle WHERE id NOT IN     (SELECT lost_in_battle      FROM ship) 
 SELECT death.note FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON ship.id = death.caused_by_ship_id WHERE battle.name LIKE '%East%' 
;
 SELECT Addresses.line_1,        Addresses.line_2 FROM Addresses JOIN Courses ON Addresses.address_id = Courses.course_id JOIN Departments ON Courses.department_id = Departments.department_id JOIN Degree_Programs ON Departments.department_id = Degree_Programs.department_id JOIN Sections ON Courses.course_id = Sections.course_id JOIN Semesters ON Semesters.semester_id = Courses.semester_id JOIN Students ON Students.student_id = Student_Enrolment.student_id JOIN Student_Enrolment ON Student_Enrolment.student_id = Students.student_id JOIN Transcripts ON Transcripts.transcript_id = Transcript_Contents.transcript_id JOIN Transcript_Contents ON Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id 
 SELECT count(*) FROM courses 
 SELECT count(*) FROM courses 
;
;
;
 SELECT Addresses.zip_postcode FROM Addresses JOIN Courses ON Addresses.address_id = Courses.other_details JOIN Departments ON Departments.department_id = Courses.department_id JOIN Degree_Programs ON Degree_Programs.department_id = Departments.department_id JOIN Sections ON Courses.course_id = Sections.course_id JOIN Semesters ON Semesters.semester_id = Sections.other_details JOIN Students ON Students.student_id = Student_Enrolment.student_id JOIN Student_Enrolment ON Student_Enrolment.student_id = Transcript_Contents.student_course_id JOIN Transcripts ON Transcripts.transcript_id = Transcript_Contents.transcript_id WHERE Addresses.city = "Port Chelsea" 
 SELECT Departments.department_name,        Departments.department_id FROM Addresses JOIN Courses ON Addresses.address_id = Courses.address_id JOIN Departments ON Departments.department_id = Courses.department_id JOIN Degree_Programs ON Departments.department_id = Degree_Programs.department_id GROUP BY Departments.department_id ORDER BY count(*) DESC LIMIT 1 
 SELECT Departments.department_name,        Degree_Programs.department_id FROM Addresses JOIN Courses ON Addresses.address_id = Courses.other_details JOIN Departments ON Courses.department_id = Departments.department_id JOIN Degree_Programs ON Departments.department_id = Degree_Programs.department_id GROUP BY Departments.department_name ORDER BY count(*) DESC LIMIT 1 
 SELECT count(DISTINCT department_name) FROM departments 
 SELECT count(DISTINCT departments.department_name) FROM addresses JOIN courses ON addresses.address_id = courses.other_details JOIN departments ON departments.department_id = courses.department_id JOIN degree_programs ON departments.department_id = degree_programs.department_id 
 SELECT count(DISTINCT degree_summary_name) FROM degree_programs 
 SELECT count(DISTINCT degree_program_id) FROM degree_programs 
 SELECT count(DISTINCT degree_programs.degree_program_id) FROM addresses JOIN courses ON addresses.address_id = courses.other_details JOIN departments ON departments.department_id = degree_programs.department_id WHERE departments.department_name = "Engineering" 
 SELECT count(DISTINCT degree_programs.degree_program_id) FROM addresses JOIN courses ON addresses.address_id = courses.other_details JOIN departments ON departments.department_id = degree_programs.department_id WHERE departments.department_name = "Engineering" 
 SELECT Courses.course_name,        Sections.section_description FROM Sections JOIN Courses ON Sections.course_id = Courses.course_id 
 SELECT Courses.course_name,        Sections.section_description FROM Addresses JOIN Courses ON Addresses.address_id = Courses.address_id JOIN Sections ON Courses.course_id = Sections.course_id 
 SELECT Courses.course_name,        Sections.course_id FROM Courses JOIN Sections ON Courses.course_id = Sections.course_id GROUP BY Sections.course_id HAVING count(*) <= 2 
 SELECT Courses.course_name,        Sections.course_id FROM Courses JOIN Sections ON Courses.course_id = Sections.course_id GROUP BY Sections.course_id HAVING count(*) < 2 
 SELECT Sections.section_name FROM Addresses JOIN Courses ON Addresses.address_id = Courses.address_id JOIN Departments ON Departments.department_id = Courses.department_id JOIN Degree_Programs ON Degree_Programs.department_id = Departments.department_id JOIN Sections ON Sections.course_id = Courses.course_id JOIN Semesters ON Semesters.semester_id = Courses.semester_id JOIN Students ON Students.student_id = Student_Enrolment.student_id JOIN Student_Enrolment ON Student_Enrolment.student_id = Students.student_id JOIN Transcripts ON Transcripts.transcript_id = Transcript_Contents.transcript_id WHERE Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id GROUP BY Transcript_Contents.student_course_id ORDER BY Courses.course_name DESC 
 SELECT SECTIONS.section_name FROM addresses JOIN courses ON addresses.address_id = courses.other_details JOIN sections ON courses.course_id = sections.course_id WHERE addresses.city = "London" ORDER BY SECTIONS.section_name DESC 
;
;
 SELECT DISTINCT departments.department_description FROM addresses JOIN courses ON addresses.address_id = courses.other_details JOIN departments ON departments.department_id = courses.department_id JOIN degree_programs ON degree_programs.department_id = departments.department_id WHERE departments.department_name LIKE "%computer%" 
 SELECT Departments.department_description FROM Addresses JOIN Courses ON Addresses.address_id = Courses.address_id JOIN Departments ON Departments.department_id = Courses.department_id JOIN Degree_Programs ON Degree_Programs.department_id = Departments.department_id WHERE Departments.department_name LIKE "%computer%" 
 SELECT Students.first_name,        Students.middle_name,        Students.last_name,        Student_Enrolment.student_id FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id JOIN Degree_Programs ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id GROUP BY Student_Enrolment.student_id HAVING count(*) = 2 
 SELECT Students.first_name,        Students.middle_name,        Students.last_name,        Students.student_id FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id JOIN Degree_Programs ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id GROUP BY Student_Enrolment.student_id HAVING count(*) = 2 
 SELECT Students.first_name,        Students.middle_name,        Students.last_name FROM Students JOIN Student_Enrolment JOIN Degree_Programs JOIN Transcripts JOIN Transcript_Contents WHERE Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id   AND Transcripts.transcript_id = Transcript_Contents.transcript_id   AND Student_Enrolment.student_id = Transcript_Contents.student_id   AND Degree_Programs.degree_summary_name = "Bachelor" 
 SELECT Students.first_name,        Students.middle_name,        Students.last_name FROM Students JOIN Student_Enrolment JOIN Degree_Programs JOIN Transcripts JOIN Transcript_Contents WHERE Degree_Programs.degree_summary_name = "Bachelors"   AND Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id   AND Student_Enrolment.transcript_id = Transcripts.transcript_id   AND Transcript_Contents.transcript_id = Transcripts.transcript_id 
;
;
;
;
 SELECT Student_Enrolment.student_id,        Students.first_name,        Students.middle_name,        Students.last_name,        count(*) FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id GROUP BY Student_Enrolment.student_id ORDER BY count(*) DESC LIMIT 1 
 SELECT Students.first_name,        Students.middle_name,        Students.last_name,        Students.student_id,        count(*) FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id JOIN Degree_Programs ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id GROUP BY Students.student_id ORDER BY count(*) DESC LIMIT 1 
 SELECT semester_name FROM Semesters EXCEPT SELECT Semesters.semester_name FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id JOIN Semesters ON Semesters.semester_id = Student_Enrolment.semester_id 
 SELECT semester_name FROM Semesters EXCEPT SELECT Semesters.semester_name FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id JOIN Semesters ON Student_Enrolment.semester_id = Semesters.semester_id 
 SELECT Courses.course_name FROM Courses JOIN Sections ON Courses.course_id = Sections.course_id JOIN Student_Enrolment_Courses ON Sections.student_course_id = Student_Enrolment_Courses.student_course_id 
 SELECT Courses.course_name FROM Courses JOIN Sections ON Courses.course_id = Sections.course_id JOIN Student_Enrolment_Courses ON Sections.section_id = Student_Enrolment_Courses.section_id JOIN Student_Enrolment ON Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id 
 SELECT Courses.course_name FROM Addresses JOIN Courses ON Addresses.address_id = Courses.address_id JOIN Departments ON Departments.department_id = Courses.department_id JOIN Degree_Programs ON Departments.department_id = Degree_Programs.department_id JOIN Sections ON Courses.course_id = Sections.course_id JOIN Semesters ON Semesters.semester_id = Courses.semester_id JOIN Students ON Students.student_id = Student_Enrolment.student_id JOIN Student_Enrolment ON Student_Enrolment.student_id = Students.student_id JOIN Student_Enrolment_Courses ON Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id JOIN Transcripts ON Transcripts.transcript_id = Transcript_Contents.transcript_id GROUP BY Courses.course_name ORDER BY count(*) DESC LIMIT 1 
 SELECT Courses.course_name FROM Addresses JOIN Courses ON Addresses.address_id = Courses.address_id JOIN Departments ON Departments.department_id = Addresses.department_id JOIN Degree_Programs ON Departments.department_id = Degree_Programs.department_id JOIN Sections ON Courses.course_id = Sections.course_id JOIN Semesters ON Semesters.semester_id = Sections.semester_id JOIN Students ON Students.student_id = Student_Enrolment.student_id JOIN Student_Enrolment ON Student_Enrolment.student_id = Students.student_id JOIN Student_Enrolment_Courses ON Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id JOIN Transcripts ON Transcripts.transcript_id = Transcript_Contents.transcript_id GROUP BY Courses.course_name ORDER BY count(*) DESC LIMIT 1 
 SELECT Students.last_name FROM Students JOIN Addresses ON Students.current_address_id = Addresses.address_id WHERE Addresses.state_province_county = "North Carolina" EXCEPT SELECT Students.last_name FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id JOIN Courses ON Student_Enrolment.course_id = Courses.course_id JOIN Transcripts ON Transcripts.transcript_id = Student_Enrolment.transcript_id JOIN Transcript_Contents ON Transcript_Contents.student_course_id = Courses.course_id 
 SELECT Students.last_name FROM Students JOIN Addresses ON Students.current_address_id = Addresses.address_id WHERE Addresses.state_province_county = "North Carolina" EXCEPT SELECT Students.last_name FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id JOIN Courses ON Student_Enrolment.course_id = Courses.course_id JOIN Transcripts ON Transcripts.transcript_id = Student_Enrolment.transcript_id JOIN Transcript_Contents ON Transcript_Contents.student_course_id = Courses.course_id 
 SELECT transcripts.transcript_date,        transcripts.transcript_id FROM addresses JOIN courses ON addresses.address_id = courses.course_id JOIN sections ON courses.course_id = sections.course_id JOIN semesters ON sections.semester_id = semesters.semester_id JOIN students ON students.student_id = transcript_contents.student_enrolment_id JOIN transcripts ON transcripts.transcript_id = transcript_contents.transcript_id GROUP BY transcripts.transcript_id HAVING count(*) >= 2 
 SELECT transcripts.transcript_date,        transcripts.transcript_id FROM addresses JOIN courses ON addresses.address_id = transcripts.current_address_id JOIN transcripts ON addresses.address_id = transcripts.current_address_id GROUP BY transcripts.transcript_id HAVING count(*) >= 2 
;
;
 SELECT Students.first_name,        Students.middle_name,        Students.last_name FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id ORDER BY Student_Enrolment.date_enrolled LIMIT 1 
 SELECT Students.first_name,        Students.middle_name,        Students.last_name FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id ORDER BY Student_Enrolment.date_enrolled ASC LIMIT 1 
 SELECT Students.first_name,        Students.middle_name,        Students.last_name FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id WHERE Student_Enrolment.degree_program_id IN     (SELECT Degree_Programs.degree_program_id      FROM Degree_Programs      JOIN Students ON Degree_Programs.degree_program_id = Students.student_id      WHERE Students.date_left = "9999-01-01") ORDER BY Student_Enrolment.semester_id LIMIT 1 
 SELECT Students.first_name,        Students.middle_name,        Students.last_name FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id WHERE Student_Enrolment.degree_program_id =     (SELECT Degree_Programs.degree_program_id      FROM Degree_Programs      JOIN Students ON Degree_Programs.department_id = Students.student_id      WHERE Degree_Programs.degree_summary_name = "School") ORDER BY Student_Enrolment.date_enrolled ASC LIMIT 1 
 SELECT Students.first_name FROM Addresses JOIN Students ON Addresses.address_id = Students.current_address_id WHERE Addresses.address_id!= Students.permanent_address_id 
 SELECT Students.first_name FROM Addresses JOIN Students ON Addresses.address_id = Students.permanent_address_id WHERE Addresses.address_id!= Students.current_address_id 
 SELECT Addresses.address_id,        Addresses.line_1 FROM Addresses JOIN Students ON Addresses.address_id = Students.current_address_id GROUP BY Addresses.address_id ORDER BY count(*) DESC LIMIT 1 
 SELECT Addresses.address_id,        Addresses.line_1,        Addresses.line_2 FROM Addresses JOIN Students ON Addresses.address_id = Students.current_address_id GROUP BY Addresses.address_id ORDER BY count(*) DESC LIMIT 1 
 SELECT avg(Transcripts.transcript_date) FROM Addresses JOIN Courses ON Addresses.address_id = Courses.address_id JOIN Departments ON Departments.department_id = Courses.department_id JOIN Degree_Programs ON Departments.department_id = Degree_Programs.department_id JOIN Sections ON Courses.course_id = Sections.course_id JOIN Semesters ON Semesters.semester_id = Courses.semester_id JOIN Students ON Students.student_id = Student_Enrolment.student_id JOIN Student_Enrolment ON Student_Enrolment.student_id = Students.student_id JOIN Transcripts ON Transcripts.transcript_id = Transcript_Contents.transcript_id JOIN Transcript_Contents ON Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id 
 SELECT avg(Transcripts.transcript_date) FROM Addresses JOIN Courses ON Addresses.address_id = Courses.address_id JOIN Departments ON Departments.department_id = Courses.department_id JOIN Degree_Programs ON Departments.department_id = Degree_Programs.department_id JOIN Sections ON Courses.course_id = Sections.course_id JOIN Semesters ON Semesters.semester_id = Courses.semester_id JOIN Students ON Students.student_id = Student_Enrolment.student_id JOIN Student_Enrolment ON Student_Enrolment.student_id = Students.student_id JOIN Transcripts ON Transcripts.transcript_id = Transcript_Contents.transcript_id JOIN Transcript_Contents ON Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id 
;
 SELECT transcript_date,        other_details FROM transcripts ORDER BY transcript_date ASC LIMIT 1 
 SELECT count(*) FROM transcripts JOIN transcript_contents ON transcripts.transcript_id = transcript_contents.transcript_id JOIN student_enrolment_courses ON transcript_contents.student_course_id = student_enrolment_courses.student_course_id JOIN courses ON student_enrolment_courses.course_id = courses.course_id WHERE courses.course_name = "Database Management" 
 SELECT count(*) FROM transcripts 
;
 SELECT transcripts.transcript_date FROM addresses JOIN courses ON addresses.address_id = courses.other_details JOIN departments ON departments.department_id = courses.department_id JOIN degree_programs ON degree_programs.department_id = departments.department_id JOIN sections ON courses.course_id = sections.course_id JOIN semesters ON semesters.semester_id = sections.other_details JOIN students ON students.student_id = degree_programs.student_id JOIN student_enrolment ON student_enrolment.student_id = students.student_id JOIN student_enrolment_courses ON student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id JOIN transcripts ON transcripts.transcript_id = student_enrolment_courses.transcript_id ORDER BY transcripts.transcript_date DESC LIMIT 1 
 SELECT course_id,        count(*) FROM Student_Enrolment_Courses JOIN Transcript_Contents ON Student_Enrolment_Courses.student_course_id = Transcript_Contents.student_course_id GROUP BY course_id ORDER BY count(*) DESC LIMIT 1; 
 SELECT course_id,        max(transcripts) FROM (SELECT count(*) AS transcripts,              student_enrolment_id       FROM student_enrolment       JOIN courses ON student_enrolment.course_id = courses.course_id       JOIN transcripts ON student_enrolment.student_enrolment_id = transcripts.transcript_id       GROUP BY student_enrolment_id) GROUP BY course_id 
 SELECT transcripts.transcript_date,        transcripts.transcript_id FROM addresses JOIN courses ON addresses.address_id = courses.other_details JOIN departments ON departments.department_id = courses.department_id JOIN degree_programs ON degree_programs.department_id = departments.department_id JOIN sections ON courses.course_id = sections.course_id JOIN semesters ON semesters.semester_id = sections.semester_id JOIN students ON students.student_id = degree_programs.student_id JOIN student_enrolment ON student_enrolment.student_id = students.student_id JOIN student_enrolment_courses ON student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id JOIN transcripts ON transcripts.transcript_id = student_enrolment_courses.transcript_id GROUP BY transcripts.transcript_id ORDER BY count(*) LIMIT 1; 
 SELECT transcripts.transcript_date,        transcripts.transcript_id FROM addresses JOIN courses ON addresses.address_id = courses.other_details JOIN departments ON departments.department_id = courses.department_id JOIN degree_programs ON degree_programs.department_id = departments.department_id JOIN sections ON courses.course_id = sections.course_id JOIN semesters ON semesters.semester_id = sections.other_details JOIN students ON students.student_id = degree_programs.student_id JOIN student_enrolment ON student_enrolment.student_id = students.student_id JOIN student_enrolment_courses ON student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id JOIN transcripts ON transcripts.transcript_id = student_enrolment_courses.transcript_id GROUP BY transcripts.transcript_id ORDER BY count(*) LIMIT 1; 
;
;
 SELECT count(DISTINCT addresses.address_id) FROM addresses JOIN students ON addresses.address_id = students.current_address_id 
 SELECT DISTINCT Addresses.address_id FROM Addresses JOIN Students ON Addresses.address_id = Students.current_address_id 
 SELECT other_student_details FROM Students ORDER BY other_student_details DESC 
 SELECT other_student_details FROM Students ORDER BY last_name DESC 
 SELECT SECTIONS.section_name FROM Addresses JOIN COURSES ON Addresses.address_id = COURSES.address_id JOIN SECTIONS ON COURSES.course_id = SECTIONS.course_id WHERE Addresses.line_1 = "h" 
 SELECT SECTIONS.section_description FROM SECTIONS JOIN COURSES ON SECTIONS.course_id = COURSES.course_id WHERE COURSES.course_name = "h" 
 SELECT Students.first_name FROM Students JOIN Addresses ON Students.permanent_address_id = Addresses.address_id WHERE Addresses.country = "Haiti"   OR Students.cell_mobile_number = "09700166582" 
 SELECT Students.first_name FROM Addresses JOIN Students ON Addresses.permanent_address_id = Students.permanent_address_id WHERE Addresses.country = "Haiti" UNION SELECT Students.first_name FROM Students WHERE Students.cell_mobile_number = "09700166582" 
 SELECT Title FROM Cartoon ORDER BY Title 
 SELECT Title FROM Cartoon ORDER BY Title 
 SELECT Cartoon.Title FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN cartoon ON TV_channel.id = cartoon.channel WHERE cartoon.Written_by = "Ben Jones" 
 SELECT Cartoon.Title FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Written_by = "Ben Jones" 
 SELECT COUNT (DISTINCT Cartoon.Title) FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.Channel JOIN Cartoon ON TV_channel.id = Cartoon.Channel WHERE Cartoon.Written_by = "Joseph Kuhr" 
 SELECT COUNT (DISTINCT Cartoon.Title) FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN Cartoon ON TV_channel.id = Cartoon.channel WHERE Cartoon.Written_by = "Joseph Kuhr" 
 SELECT Cartoon.Title,        Cartoon.Directed_by FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel ORDER BY TV_series.Air_Date 
 SELECT Cartoon.Title,        Cartoon.Directed_by FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel ORDER BY TV_series.Air_Date 
 SELECT Cartoon.Title FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE TV_series.Directed_by = "Ben Jones"   OR TV_series.Directed_by = "Brandon Vietti" 
 SELECT Cartoon.Title FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE TV_series.Directed_by = "Ben Jones"   OR TV_series.Directed_by = "Brandon Vietti" 
 SELECT TV_channel.country,        COUNT(*) FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN Cartoon ON TV_channel.id = Cartoon.channel GROUP BY TV_channel.country ORDER BY COUNT(*) DESC LIMIT 1; 
 SELECT TV_channel.country,        count(*) FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN Cartoon ON TV_channel.id = Cartoon.channel GROUP BY TV_channel.country ORDER BY count(*) DESC LIMIT 1; 
 SELECT count(DISTINCT series_name),        count(DISTINCT content) FROM TV_channel 
 SELECT count(DISTINCT series_name),        count(DISTINCT content) FROM TV_channel 
 SELECT TV_Channel.Content FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE TV_Channel.series_name = "Sky Radio" 
 SELECT TV_Channel.Content FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel WHERE TV_series.id = "Sky Radio" 
 SELECT TV_Channel.Package_Option FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE TV_Channel.series_name = "Sky Radio" 
 SELECT TV_Channel.Package_Option FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE TV_series.series_name = "Sky Radio" 
 SELECT count(*) FROM TV_channel WHERE LANGUAGE = "English" 
 SELECT count(*) FROM TV_channel WHERE LANGUAGE = "English" 
 SELECT TV_Channel.Language,        COUNT(*) FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel GROUP BY TV_Channel.Language ORDER BY COUNT(*) ASC LIMIT 1; 
 SELECT LANGUAGE,        COUNT(*) FROM TV_channel GROUP BY LANGUAGE ORDER BY COUNT(*) ASC LIMIT 1; 
 SELECT LANGUAGE,        COUNT(*) FROM TV_channel GROUP BY LANGUAGE 
 SELECT LANGUAGE,        COUNT(*) FROM TV_channel GROUP BY LANGUAGE 
 SELECT TV_channel.series_name FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN cartoon ON TV_channel.id = cartoon.channel WHERE cartoon.title = "The Rise of the Blue Beetle!" 
 SELECT TV_Channel.series_name FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Title = "The Rise of the Blue Beetle" 
 SELECT Cartoon.Title FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.Channel JOIN Cartoon ON TV_channel.id = Cartoon.Channel WHERE TV_channel.series_name = "Sky Radio" 
 SELECT Cartoon.Title FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN Cartoon ON TV_channel.id = Cartoon.channel WHERE TV_channel.series_name = "Sky Radio" 
 SELECT TV_series.Episode FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.Channel ORDER BY TV_series.Rating 
 SELECT TV_series.Episode FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN cartoon ON TV_channel.id = cartoon.channel WHERE TV_series.Rating =     (SELECT max(Rating)      FROM TV_series) 
 SELECT TV_series.Episode,        TV_series.Rating FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN Cartoon ON TV_channel.id = Cartoon.channel ORDER BY TV_series.Rating DESC LIMIT 3 
 SELECT TV_series.Rating,        TV_series.Share FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id GROUP BY TV_series.Rating ORDER BY COUNT(*) DESC LIMIT 3 
 SELECT min(TV_series.Share),        max(TV_series.Share) FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id 
 SELECT max(TV_series.Share),        min(TV_series.Share) FROM TV_series 
 SELECT TV_series.Air_Date FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.Channel WHERE TV_series.Episode = "A Love of a Lifetime" 
 SELECT TV_series.Air_Date FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN cartoon ON TV_channel.id = cartoon.channel WHERE cartoon.Title = "A Love of a Lifetime"; 
 SELECT TV_series.Weekly_Rank FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.Channel JOIN cartoon ON TV_channel.id = cartoon.Channel WHERE TV_series.Episode = "A Love of a Lifetime" 
 SELECT TV_series.Weekly_Rank FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN cartoon ON TV_channel.id = cartoon.channel WHERE cartoon.Title = "A Love of a Lifetime" 
 SELECT TV_channel.series_name FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel WHERE TV_series.episode = "A Love of a Lifetime" 
 SELECT TV_series.series_name FROM TV_series JOIN TV_channel ON TV_series.channel = TV_channel.id WHERE TV_series.episode = "A Love of a Lifetime" 
 SELECT TV_series.Episode FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.Channel JOIN Cartoon ON TV_channel.id = Cartoon.Channel WHERE TV_channel.series_name = "Sky Radio" 
 SELECT TV_series.Episode FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.Channel WHERE TV_channel.series_name = "Sky Radio" 
 SELECT directed_by,        count(*) FROM cartoon JOIN TV_channel ON cartoon.channel = TV_channel.id JOIN TV_series ON TV_series.channel = TV_channel.id WHERE TV_series.id = cartoon.id GROUP BY directed_by 
 SELECT COUNT(*),        Written_by FROM cartoon JOIN TV_series ON cartoon.channel = TV_series.channel JOIN TV_channel ON TV_series.channel = TV_channel.id GROUP BY Written_by 
 SELECT Cartoon.Production_code,        TV_Channel.id FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel ORDER BY TV_series.Air_Date DESC LIMIT 1 
 SELECT Cartoon.Production_code,        TV_Channel.id FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel ORDER BY TV_series.Air_Date DESC LIMIT 1 
 SELECT TV_channel.Package_Option,        TV_series.series_name FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel WHERE TV_channel.Hight_definition_TV = 'Yes' 
 SELECT TV_channel.Package_Option,        TV_series.series_name FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel WHERE TV_channel.Hight_definition_TV = 'Yes' 
 SELECT TV_channel.country FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN cartoon ON TV_channel.id = cartoon.channel WHERE cartoon.Written_by = "Todd Casey" 
 SELECT TV_channel.country FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN cartoon ON TV_series.id = cartoon.id WHERE cartoon.Written_by = "Todd Casey" 
 SELECT Country FROM TV_channel WHERE id NOT IN     (SELECT Channel      FROM cartoon      WHERE Written_by = "Todd Casey") 
 SELECT Country FROM TV_channel EXCEPT SELECT TV_channel.Country FROM TV_channel JOIN cartoon ON TV_channel.id = cartoon.channel WHERE cartoon.Written_by = "Todd Casey" 
 SELECT TV_channel.series_name,        TV_channel.country FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN cartoon ON TV_channel.id = cartoon.channel WHERE cartoon.directed_by = "Ben Jones"   AND cartoon.directed_by = "Michael Chang" 
 SELECT TV_channel.series_name,        TV_channel.country FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN cartoon ON TV_channel.id = cartoon.channel WHERE cartoon.directed_by = "Ben Jones" INTERSECT   SELECT TV_channel.series_name,          TV_channel.country   FROM TV_channel   JOIN TV_series ON TV_channel.id = TV_series.channel   JOIN cartoon ON TV_channel.id = cartoon.channel WHERE cartoon.directed_by = "Michael Chang" 
 SELECT TV_channel.Pixel_aspect_ratio_PAR,        TV_channel.Country FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.Channel JOIN Cartoon ON TV_channel.id = Cartoon.Channel WHERE TV_channel.Language!= "English" 
 SELECT TV_channel.Pixel_aspect_ratio_PAR,        TV_channel.Country FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.Channel JOIN Cartoon ON TV_channel.id = Cartoon.Channel WHERE TV_channel.Language!= "English" 
 SELECT TV_channel.id FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN Cartoon ON TV_channel.id = Cartoon.channel GROUP BY TV_channel.id HAVING COUNT (TV_channel.id) > 2 
 SELECT id FROM TV_channel GROUP BY id HAVING count(*) > 2 
 SELECT id FROM TV_channel EXCEPT SELECT TV_channel.id FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN Cartoon ON TV_channel.id = Cartoon.channel WHERE Cartoon.Written_by = "Ben Jones" 
 SELECT id FROM TV_channel EXCEPT SELECT TV_channel.id FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN Cartoon ON TV_series.id = Cartoon.id WHERE Cartoon.Written_by = "Ben Jones" 
 SELECT package_option FROM TV_channel WHERE id NOT IN     (SELECT channel      FROM cartoon      WHERE directed_by = "Ben Jones") 
 SELECT TV_channel.Package_Option FROM TV_channel JOIN TV_series ON TV_channel.id = TV_series.channel JOIN Cartoon ON TV_channel.id = Cartoon.channel WHERE Cartoon.Written_by!= "Ben Jones" 
 SELECT count(*) FROM poker_player 
 SELECT count(*) FROM poker_player 
 SELECT Earnings FROM poker_player ORDER BY Earnings DESC 
 SELECT Earnings FROM poker_player ORDER BY Earnings DESC 
 SELECT poker_player.Final_Table_Made,        poker_player.Best_Finish FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID 
 SELECT poker_player.Final_Table_Made,        poker_player.Best_Finish FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID 
 SELECT avg(Earnings) FROM poker_player 
 SELECT avg(Earnings) FROM poker_player 
 SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1 
 SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1 
 SELECT max(poker_player.Final_Table_Made) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Name = "Player_Name"   AND poker_player.Earnings < 200000 
 SELECT max(poker_player.Final_Table_Made) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Earnings < 200000 
 SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID 
 SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID 
 SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE poker_player.Earnings > 300000 
 SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE poker_player.Earnings > 300000 
 SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY poker_player.Final_Table_Made ASC 
 SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY poker_player.Final_Table_Made ASC 
 SELECT people.Birth_Date FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY poker_player.Earnings LIMIT 1 
 SELECT people.Birth_Date FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY Earnings ASC LIMIT 1 
 SELECT poker_player.Money_Rank FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY people.Height DESC LIMIT 1 
 SELECT poker_player.Money_Rank FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY people.Height DESC LIMIT 1 
 SELECT avg(poker_player.Earnings) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height > 200 
 SELECT avg(poker_player.Earnings) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height > 200 
 SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY poker_player.Earnings DESC 
 SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY poker_player.Earnings DESC 
 SELECT people.Nationality,        COUNT(*) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID GROUP BY people.Nationality 
 SELECT people.Nationality,        COUNT(*) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID GROUP BY people.Nationality 
 SELECT people.Nationality FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID GROUP BY people.Nationality ORDER BY COUNT(*) DESC LIMIT 1 
 SELECT people.Nationality FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID GROUP BY people.Nationality ORDER BY COUNT(*) DESC LIMIT 1 
 SELECT people.Nationality FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID GROUP BY people.Nationality HAVING COUNT(*) >= 2 
 SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*) >= 2 
 SELECT people.Name,        people.Birth_Date FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY people.Name ASC 
 SELECT people.Name,        people.Birth_Date FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY people.Name 
 SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Nationality!= "Russia" 
 SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Nationality!= "Russia" 
 SELECT Name FROM people WHERE People_ID NOT IN     (SELECT People_ID      FROM poker_player) 
 SELECT Name FROM people WHERE People_ID NOT IN     (SELECT People_ID      FROM poker_player) 
 SELECT count(DISTINCT people.Nationality) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID 
 SELECT count(DISTINCT people.Nationality) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID 
 SELECT count(DISTINCT AREA_CODE_STATE.state) FROM AREA_CODE_STATE JOIN CONTESTANTS ON CONTESTANTS.contestant_number = VOTES.contestant_number WHERE VOTES.state = AREA_CODE_STATE.state 
 SELECT contestants.contestant_number,        contestants.contestant_name FROM area_code_state JOIN contestants ON area_code_state.state = area_code_state.state JOIN votes ON area_code_state.area_code = votes.state ORDER BY contestants.contestant_name DESC 
 SELECT VOTES.vote_id,        VOTES.phone_number,        AREA_CODE_STATE.state FROM AREA_CODE_STATE JOIN CONTESTANTS ON AREA_CODE_STATE.area_code = VOTES.area_code JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number 
 SELECT max(area_code),        min(area_code) FROM area_code_state 
 SELECT VOTES.created FROM AREA_CODE_STATE JOIN CONTESTANTS ON AREA_CODE_STATE.state = 'CA' JOIN VOTES ON VOTES.contestant_number = CONTESTANTS.contestant_number ORDER BY VOTES.created DESC LIMIT 1 
 SELECT contestant_name FROM contestants EXCEPT SELECT contestants.contestant_name FROM contestants JOIN area_code_state ON area_code_state.area_code = VOTES.area_code JOIN votes ON contestants.contestant_number = votes.contestant_number WHERE contestants.contestant_name = 'Jessie Alloway' 
 SELECT DISTINCT AREA_CODE_STATE.state,                 VOTES.created FROM AREA_CODE_STATE JOIN CONTESTANTS ON AREA_CODE_STATE.area_code = VOTES.area_code JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number 
 SELECT CONTESTANTS.contestant_number,        CONTESTANTS.contestant_name FROM AREA_CODE_STATE JOIN CONTESTANTS ON AREA_CODE_STATE.state = AREA_CODE_STATE.state JOIN VOTES ON VOTES.contestant_number = CONTESTANTS.contestant_number GROUP BY CONTESTANTS.contestant_number HAVING COUNT(*) >= 2 
 SELECT CONTESTANTS.contestant_number,        CONTESTANTS.contestant_name FROM AREA_CODE_STATE JOIN CONTESTANTS ON AREA_CODE_STATE.state = CONTESTANTS.state JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number GROUP BY CONTESTANTS.contestant_number ORDER BY count(*) ASC LIMIT 1 
 SELECT count(*) FROM area_code_state JOIN contestants ON area_code_state.area_code = contestants.contestant_number JOIN votes ON contestants.contestant_number = votes.contestant_number WHERE area_code_state.state = "NY"   OR area_code_state.state = "CA" 
 SELECT count(*) FROM contestants WHERE contestant_number NOT IN     (SELECT contestant_number      FROM votes) 
 SELECT AREA_CODE_STATE.area_code FROM AREA_CODE_STATE JOIN CONTESTANTS ON CONTESTANTS.contestant_number = VOTES.contestant_number WHERE VOTES.state = AREA_CODE_STATE.state GROUP BY AREA_CODE_STATE.area_code ORDER BY count(*) DESC LIMIT 1 
 SELECT VOTES.created,        AREA_CODE_STATE.state,        VOTES.phone_number FROM AREA_CODE_STATE JOIN CONTESTANTS ON AREA_CODE_STATE.area_code = VOTES.area_code JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number WHERE CONTESTANTS.contestant_name = "Tabbatha Gehling" 
 SELECT AREA_CODE_STATE.area_code FROM AREA_CODE_STATE JOIN CONTESTANTS ON AREA_CODE_STATE.state = CONTESTANTS.state JOIN VOTES ON AREA_CODE_STATE.area_code = VOTES.state WHERE CONTESTANTS.contestant_name = 'Tabatha Gehling' INTERSECT   SELECT AREA_CODE_STATE.area_code   FROM AREA_CODE_STATE   JOIN CONTESTANTS ON AREA_CODE_STATE.state = CONTESTANTS.state   JOIN VOTES ON AREA_CODE_STATE.area_code = VOTES.state WHERE CONTESTANTS.contestant_name = 'Kelly Clauss' 
 SELECT contestants.contestant_name FROM area_code_state JOIN contestants ON area_code_state.area_code = contestants.area_code JOIN votes ON area_code_state.state = votes.state WHERE contestants.contestant_name LIKE '%Al%' 
 SELECT name FROM city WHERE countrycode IN     (SELECT code      FROM country      WHERE indepyear > 1950) 
 SELECT country.name FROM country JOIN city ON country.capital = city.id WHERE city.population > 150000   AND country.indepyear > 1950 
 SELECT COUNT (DISTINCT country.name) FROM city JOIN country ON city.countrycode = country.code WHERE country.governmentform = "Republic"; 
 SELECT COUNT (DISTINCT country.name) FROM city JOIN country ON city.countrycode = country.code WHERE country.governmentform = "Republic"; 
 SELECT SUM (country.SurfaceArea) FROM city JOIN country ON city.CountryCode = country.Code WHERE country.Region = "Caribbean" 
 SELECT SUM (country.SurfaceArea) FROM city JOIN country ON city.CountryCode = country.Code WHERE city.District = "Carribean"; 
 SELECT country.Continent FROM city JOIN country ON city.CountryCode = country.Code WHERE city.Name = "Anguilla"; 
 SELECT country.Continent FROM city JOIN country ON city.CountryCode = country.Code WHERE city.Name = "Anguilla" 
 SELECT country.Region FROM city JOIN country ON city.CountryCode = country.Code WHERE city.Name = "Kabul"; 
 SELECT country.Region FROM city JOIN country ON city.CountryCode = country.Code WHERE city.Name = "Kabul"; 
 SELECT countrylanguage.language FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE city.name = "Aruba" GROUP BY countrylanguage.language ORDER BY COUNT(*) DESC LIMIT 1; 
 SELECT countrylanguage.language FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE city.name = "Aruba"; 
 SELECT country.population,        country.LifeExpectancy FROM country JOIN city ON country.capital = city.id WHERE city.name = "Brasilia" 
 SELECT city.population,        country.LifeExpectancy FROM city JOIN country ON city.CountryCode = country.Code WHERE country.Name = "Brazil"; 
 SELECT country.Region,        country.Population FROM city JOIN country ON city.CountryCode = country.Code WHERE city.Name = "Angola"; 
 SELECT country.Region,        country.Population FROM city JOIN country ON city.CountryCode = country.Code WHERE city.Name = "Angola"; 
 SELECT avg(country.LifeExpectancy) FROM city JOIN country ON city.CountryCode = country.Code WHERE country.Region = "Central Africa" 
 SELECT AVG(country.LifeExpectancy) FROM city JOIN country ON city.CountryCode = country.Code WHERE city.District = "Central Africa"; 
 SELECT country.name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.continent = "Asia"   AND countrylanguage.isofficial = "T" ORDER BY country.lifeexpectancy LIMIT 1 
 SELECT country.name FROM city JOIN country ON city.countrycode = country.code WHERE country.continent = "Asia" ORDER BY country.lifeexpectancy LIMIT 1; 
 SELECT sum(city.Population),        max(country.GNP) FROM city JOIN country ON city.CountryCode = country.Code WHERE country.Continent = "Asia" 
 SELECT city.population,        country.gnp FROM city JOIN country ON city.countrycode = country.code WHERE country.continent = "Asia" ORDER BY country.gnp DESC LIMIT 1 
 SELECT avg(country.LifeExpectancy) FROM city JOIN country ON city.CountryCode = country.Code WHERE country.GovernmentForm = "Republic"   AND country.Continent = "Africa"; 
 SELECT avg(country.LifeExpectancy) FROM city JOIN country ON city.CountryCode = country.Code WHERE country.GovernmentForm = "Republic"   AND country.Continent = "Africa"; 
 SELECT sum(country.SurfaceArea) FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = "English"   AND country.Continent = "Asia"   AND country.Continent = "Europe"; 
 SELECT SUM (country.SurfaceArea) FROM city JOIN country ON city.CountryCode = country.Code WHERE city.District = "Asia"   OR city.District = "Europe" 
 SELECT city.population FROM city JOIN country ON city.countrycode = country.code WHERE country.name = "Gelderland" 
 SELECT SUM (city.Population) FROM city JOIN country ON city.CountryCode = country.Code WHERE city.District = "Gelderland"   AND country.Name = "Netherlands" 
 SELECT avg(country.GNP),        sum(country.Population) FROM city JOIN country ON city.CountryCode = country.Code WHERE country.GovernmentForm = "US territory" 
 SELECT avg(country.GNP),        sum(country.Population) FROM city JOIN country ON city.CountryCode = country.Code WHERE city.Name = "United States of America" 
 SELECT COUNT (DISTINCT countrylanguage.language) FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode 
 SELECT COUNT (DISTINCT countrylanguage.language) FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode 
 SELECT count(DISTINCT country.GovernmentForm) FROM city JOIN country ON city.CountryCode = country.Code WHERE country.Continent = "Africa" 
 SELECT count(DISTINCT country.GovernmentForm) FROM city JOIN country ON city.CountryCode = country.Code WHERE country.Continent = "Africa" 
 SELECT COUNT (DISTINCT countrylanguage.language) FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE city.name = "Aruba"; 
 SELECT COUNT (DISTINCT countrylanguage.language) FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE city.name = "Aruba"; 
 SELECT COUNT (DISTINCT countrylanguage.language) FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.name = "Afghanistan"; 
 SELECT COUNT (DISTINCT countrylanguage.language) FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.name = "Afghanistan"; 
 SELECT country.name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.name ORDER BY count(*) DESC LIMIT 1 
 SELECT country.name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.name ORDER BY count(*) DESC LIMIT 1 
 SELECT country.continent FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.continent ORDER BY COUNT (DISTINCT countrylanguage.language) DESC LIMIT 1; 
 SELECT country.continent FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.continent ORDER BY count(*) DESC LIMIT 1 
 SELECT COUNT (DISTINCT country.name) FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "English" INTERSECT   SELECT COUNT (DISTINCT country.name)   FROM city   JOIN country ON city.countrycode = country.code   JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "Dutch" 
 SELECT COUNT (DISTINCT country.name) FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "English"   AND countrylanguage.language = "Dutch" 
 SELECT country.name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "English" INTERSECT   SELECT country.name   FROM city   JOIN country ON city.countrycode = country.code   JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "French" 
 SELECT country.name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "English" INTERSECT   SELECT country.name   FROM city   JOIN country ON city.countrycode = country.code   JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "French" 
 SELECT country.name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "English" INTERSECT   SELECT country.name   FROM city   JOIN country ON city.countrycode = country.code   JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "French" 
 SELECT country.name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "English" INTERSECT   SELECT country.name   FROM city   JOIN country ON city.countrycode = country.code   JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "French" 
 SELECT COUNT (DISTINCT country.Continent) FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = "Chinese" 
 SELECT COUNT (DISTINCT country.continent) FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "Chinese" 
 SELECT country.Region FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = "English"   OR countrylanguage.Language = "Dutch" 
 SELECT country.Region FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = "Dutch"   OR countrylanguage.Language = "English" 
 SELECT country.name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English'   OR countrylanguage.language = 'Dutch' 
 SELECT country.name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English'   OR countrylanguage.language = 'Dutch' 
 SELECT countrylanguage.language FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.continent = "Asia" GROUP BY countrylanguage.language ORDER BY COUNT(*) DESC LIMIT 1; 
 SELECT countrylanguage.language FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.continent = "Asia" GROUP BY countrylanguage.language ORDER BY COUNT (DISTINCT city.name) DESC LIMIT 1; 
 SELECT countrylanguage.language FROM city JOIN country ON city.id = country.capital JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.governmentform = "Republic" GROUP BY countrylanguage.language HAVING count(*) = 1 
 SELECT countrylanguage.language FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.governmentform = "Republic" GROUP BY countrylanguage.language HAVING count(*) = 1 
 SELECT city.name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "English" GROUP BY city.name ORDER BY city.population DESC LIMIT 1; 
 SELECT city.name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "English" GROUP BY city.name ORDER BY population DESC LIMIT 1; 
 SELECT country.name,        country.population,        country.lifeexpectancy FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "asian"   AND country.surfacearea =     (SELECT MAX (country.surfacearea)      FROM country      JOIN countrylanguage ON country.code = countrylanguage.countrycode      WHERE countrylanguage.language = "asian") 
 SELECT country.name,        country.population,        country.lifeexpectancy FROM city JOIN country ON city.countrycode = country.code WHERE country.continent = "Asia" ORDER BY country.surfacearea DESC LIMIT 1 
 SELECT avg(country.LifeExpectancy) FROM city JOIN country ON city.CountryCode = country.Code WHERE country.Name NOT IN     (SELECT country.Name      FROM country      JOIN countrylanguage ON country.Code = countrylanguage.CountryCode      WHERE countrylanguage.Language = "English") 
 SELECT AVG(country.LifeExpectancy) FROM city JOIN country ON city.CountryCode = country.Code WHERE country.Name NOT IN     (SELECT country.Name      FROM country      JOIN countrylanguage ON country.Code = countrylanguage.CountryCode      WHERE countrylanguage.Language = "English") 
 SELECT SUM (city.Population) FROM city JOIN country ON city.CountryCode = country.Code WHERE country.Name NOT IN     (SELECT country.Name      FROM country      JOIN countrylanguage ON country.Code = countrylanguage.CountryCode      WHERE countrylanguage.Language = "English") 
 SELECT SUM (city.Population) FROM city JOIN country ON city.CountryCode = country.Code WHERE country.Code!=     (SELECT countrycode      FROM countrylanguage      WHERE Language = "English") 
 SELECT countrylanguage.language FROM city JOIN country ON city.id = country.capital JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = "Beatrix" 
 SELECT countrylanguage.language FROM city JOIN country ON city.id = country.capital JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = "Beatrix" 
 SELECT count(DISTINCT countrylanguage.language) FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.indepyear < 1930 
 SELECT count(DISTINCT countrylanguage.language) FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.indepyear < 1930 
 SELECT country.name FROM country JOIN city ON country.capital = city.id WHERE country.surfacearea >     (SELECT max(country.surfacearea)      FROM country      JOIN city ON country.capital = city.id      WHERE city.continent = "Europe") 
 SELECT country.name FROM country JOIN city ON country.capital = city.id WHERE country.surfacearea >     (SELECT max(country.surfacearea)      FROM country      JOIN city ON country.capital = city.id      WHERE city.continent = "Europe") 
 SELECT country.name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.continent = "Africa"   AND country.population <     (SELECT min(population)      FROM country      WHERE continent = "Asia") 
 SELECT country.name FROM country JOIN city ON country.capital = city.id JOIN countrylanguage ON country.countrycode = countrylanguage.countrycode WHERE country.continent = "Africa"   AND city.population <     (SELECT MIN (city.population)      FROM country      JOIN city ON country.capital = city.id      WHERE country.continent = "Asia") 
 SELECT country.name FROM country JOIN city ON country.capital = city.id JOIN countrylanguage ON country.countrycode = countrylanguage.countrycode WHERE city.population >     (SELECT max(city.population)      FROM country      JOIN city ON country.capital = city.id      WHERE country.continent = "Africa")   AND countrylanguage.continent = "Asia"; 
 SELECT country.name FROM country JOIN city ON country.capital = city.id JOIN countrylanguage ON country.countrycode = countrylanguage.countrycode WHERE city.countrycode = "AF"   AND countrylanguage.language = "Asian"   AND country.population >     (SELECT max(population)      FROM country      WHERE continent = "Africa") 
 SELECT countrycode FROM city WHERE countrycode NOT IN     (SELECT countrycode      FROM countrylanguage      WHERE language = "English") 
 SELECT countrycode FROM city WHERE countrycode NOT IN     (SELECT countrycode      FROM countrylanguage      WHERE language = "English") 
 SELECT country.code FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language!= "English" 
 SELECT country.code FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language!= "English" 
 SELECT country.code FROM country JOIN city ON country.capital = city.id JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language!= "English"   AND country.governmentform!= "Republic" 
 SELECT country.code FROM country JOIN city ON country.capital = city.id JOIN countrylanguage ON country.countrycode = countrylanguage.countrycode WHERE countrylanguage.language!= "English"   AND country.governmentform = "Republic" 
 SELECT city.name FROM city JOIN country ON city.countrycode = country.code WHERE country.continent = "Europe"   AND NOT countrylanguage.language = "English" 
 SELECT city.name FROM city JOIN country ON city.countrycode = country.code WHERE country.continent = "Europe" EXCEPT SELECT city.name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "English" 
 SELECT DISTINCT city.name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.continent = "Asia"   AND countrylanguage.language = "Chinese" 
 SELECT DISTINCT city.name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.continent = "Asia"   AND countrylanguage.language = "Chinese" 
 SELECT country.name,        country.indepyear,        country.surfacearea FROM country JOIN city ON country.capital = city.id WHERE city.name = "London" ORDER BY country.population LIMIT 1 
 SELECT country.name,        country.indepyear,        country.surfacearea FROM country JOIN city ON country.capital = city.id WHERE city.name = "London" ORDER BY country.population LIMIT 1 
 SELECT city.population,        country.name,        country.headofstate FROM city JOIN country ON city.countrycode = country.code WHERE country.surfacearea =     (SELECT MAX (surfacearea)      FROM country) 
 SELECT country.name,        country.population,        country.headofstate FROM country JOIN city ON country.capital = city.id WHERE country.surfacearea =     (SELECT MAX(surfacearea)      FROM country) 
 SELECT country.name,        count(*) FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.name HAVING count(*) >= 3 
 SELECT country.name,        count(*) FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.name HAVING count(*) > 2 
 SELECT count(*),        city.district FROM city JOIN country ON city.countrycode = country.code WHERE population >     (SELECT avg(population)      FROM city      JOIN country ON city.countrycode = country.code) GROUP BY city.district 
 SELECT count(*),        city.District FROM city JOIN country ON city.CountryCode = country.Code WHERE population >     (SELECT avg(population)      FROM city      JOIN country ON city.CountryCode = country.Code) GROUP BY city.District 
 SELECT country.GovernmentForm,        SUM(city.Population) FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.IsOfficial = 'T'   AND country.LifeExpectancy > 72 GROUP BY country.GovernmentForm 
 SELECT country.GovernmentForm,        SUM(city.Population) FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.IsOfficial = 'Yes'   AND country.LifeExpectancy > 72 GROUP BY country.GovernmentForm 
 SELECT avg(country.LifeExpectancy),        sum(country.Population) FROM city JOIN country ON city.CountryCode = country.Code WHERE country.LifeExpectancy < 72 GROUP BY country.Continent 
 SELECT country.continent,        SUM(city.population),        avg(country.lifeexpectancy) FROM city JOIN country ON city.countrycode = country.code WHERE country.lifeexpectancy < 72 GROUP BY country.continent 
 SELECT country.name,        country.area FROM country JOIN city ON country.capital = city.id ORDER BY country.area DESC LIMIT 5 
 SELECT country.name,        country.surfacearea FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.isofficial = 'T' GROUP BY country.name ORDER BY country.surfacearea DESC LIMIT 5; 
 SELECT country.name FROM country JOIN city ON country.capital = city.id GROUP BY country.name ORDER BY population DESC LIMIT 3 
 SELECT city.name FROM city JOIN country ON city.countrycode = country.code WHERE country.population =     (SELECT MAX (population)      FROM country) GROUP BY city.name ORDER BY city.population DESC LIMIT 3; 
 SELECT country.name FROM country JOIN city ON country.capital = city.id WHERE city.name = "London" GROUP BY country.name ORDER BY country.population LIMIT 3; 
 SELECT country.name FROM city JOIN country ON city.countrycode = country.code GROUP BY country.name ORDER BY count(*) LIMIT 3; 
 SELECT COUNT (DISTINCT country.name) FROM city JOIN country ON city.countrycode = country.code WHERE country.continent = "Asia"; 
 SELECT COUNT (DISTINCT country.name) FROM city JOIN country ON city.countrycode = country.code WHERE country.continent = "Asia"; 
 SELECT country.name FROM city JOIN country ON city.countrycode = country.code WHERE city.population = 80000   AND country.continent = "Europe"; 
 SELECT country.name FROM city JOIN country ON city.countrycode = country.code WHERE country.continent = "Europe"   AND country.population = 80000; 
 SELECT sum(country.population),        avg(country.surfacearea) FROM city JOIN country ON city.countrycode = country.code WHERE country.continent = "North America"   AND country.surfacearea > 3000 
 SELECT country.name,        country.population,        country.surfacearea FROM city JOIN country ON city.countrycode = country.code WHERE country.continent = "North America"   AND country.surfacearea > 3000 
 SELECT city.name FROM city JOIN country ON city.countrycode = country.code WHERE country.population BETWEEN 160000 AND 900000 
 SELECT city.name FROM city JOIN country ON city.countrycode = country.code WHERE country.population BETWEEN 160000 AND 900000 
 SELECT countrylanguage.language FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY countrylanguage.language ORDER BY COUNT (DISTINCT country.name) DESC LIMIT 1; 
 SELECT language FROM countrylanguage GROUP BY language ORDER BY COUNT(*) DESC LIMIT 1 
 SELECT country.name,        countrylanguage.language FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.name ORDER BY sum(city.population) DESC LIMIT 1 
 SELECT country.code,        countrylanguage.language FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.code ORDER BY SUM(countrylanguage.percentage) DESC LIMIT 1; 
 SELECT COUNT (DISTINCT country.name) FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "Spanish" GROUP BY country.name ORDER BY SUM (countrylanguage.percentage) DESC LIMIT 1; 
 SELECT COUNT (DISTINCT country.name) FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "Spanish"; 
 SELECT country.code FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "Spanish" GROUP BY country.code ORDER BY COUNT(*) DESC LIMIT 1; 
 SELECT country.code FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = "Spanish" GROUP BY country.code ORDER BY COUNT(*) DESC LIMIT 1; 
 SELECT count(*) FROM conductor 
 SELECT count(*) FROM conductor 
 SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID ORDER BY conductor.Age ASC 
 SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID ORDER BY conductor.Age 
 SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID WHERE conductor.Nationality!= "USA" 
 SELECT name FROM conductor WHERE nationality!= "USA" 
 SELECT orchestra.Record_Company FROM orchestra JOIN conductor ON orchestra.Conductor_ID = conductor.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID ORDER BY orchestra.Year_of_Founded DESC 
 SELECT orchestra.Record_Company FROM orchestra JOIN conductor ON orchestra.Conductor_ID = conductor.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID ORDER BY orchestra.Year_of_Founded DESC 
 SELECT avg(show.Attendance) FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID 
 SELECT avg(show.Attendance) FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID 
 SELECT max(performance.Share),        min(performance.Share) FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID WHERE performance.Type!= "Live final" 
 SELECT max(performance.Share),        min(performance.Share) FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID WHERE performance.Type!= "Live final" 
 SELECT count(DISTINCT Nationality) FROM conductor 
 SELECT count(DISTINCT conductor.Nationality) FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID 
 SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID ORDER BY conductor.Year_of_Work DESC 
 SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID GROUP BY conductor.Name ORDER BY conductor.Year_of_Work DESC 
 SELECT conductor.name FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id JOIN performance ON orchestra.orchestra_id = performance.orchestra_id JOIN show ON performance.performance_id = show.performance_id GROUP BY conductor.name ORDER BY count(*) DESC LIMIT 1 
 SELECT conductor.name FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id JOIN performance ON orchestra.orchestra_id = performance.orchestra_id JOIN show ON performance.performance_id = show.performance_id GROUP BY conductor.name ORDER BY count(*) DESC LIMIT 1 
 SELECT conductor.Name,        orchestra.Orchestra FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID 
 SELECT conductor.Name,        orchestra.Orchestra FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID 
 SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY orchestra.Conductor_ID HAVING COUNT(*) > 1 
 SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY orchestra.Conductor_ID HAVING COUNT(*) > 1 
 SELECT conductor.name FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id GROUP BY orchestra.conductor_id ORDER BY count(*) DESC LIMIT 1 
 SELECT conductor.name FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id GROUP BY orchestra.conductor_id ORDER BY count(*) DESC LIMIT 1 
 SELECT conductor.name FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id WHERE orchestra.year_of_founded > 2008 
 SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID WHERE orchestra.Year_of_Founded > 2008 
 SELECT orchestra.Record_Company,        COUNT(*) FROM orchestra JOIN conductor ON orchestra.Conductor_ID = conductor.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID GROUP BY orchestra.Record_Company 
 SELECT orchestra.Record_Company,        COUNT(*) FROM orchestra JOIN conductor ON orchestra.Conductor_ID = conductor.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID GROUP BY orchestra.Record_Company 
 SELECT orchestra.Major_Record_Format FROM orchestra JOIN conductor ON orchestra.Conductor_ID = conductor.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID GROUP BY orchestra.Major_Record_Format ORDER BY count(*) ASC 
 SELECT orchestra.Major_Record_Format FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID GROUP BY orchestra.Major_Record_Format ORDER BY COUNT(*) DESC 
 SELECT orchestra.Record_Company FROM orchestra JOIN conductor ON orchestra.Conductor_ID = conductor.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID GROUP BY orchestra.Record_Company ORDER BY COUNT(*) DESC LIMIT 1 
 SELECT orchestra.Record_Company FROM orchestra JOIN conductor ON orchestra.Conductor_ID = conductor.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID GROUP BY orchestra.Record_Company ORDER BY count(*) DESC LIMIT 1 
 SELECT orchestra FROM orchestra WHERE orchestra_id NOT IN     (SELECT orchestra_id      FROM performance) 
 SELECT orchestra FROM orchestra WHERE orchestra_id NOT IN     (SELECT orchestra_id      FROM performance) 
 SELECT orchestra.Record_Company FROM orchestra JOIN conductor ON orchestra.Conductor_ID = conductor.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID WHERE performance.Year_of_Founded < 2003 INTERSECT   SELECT orchestra.Record_Company   FROM orchestra   JOIN conductor ON orchestra.Conductor_ID = conductor.Conductor_ID   JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID   JOIN show ON show.Performance_ID = performance.Performance_ID WHERE performance.Year_of_Founded > 2003 
 SELECT orchestra.Record_Company FROM orchestra JOIN conductor ON orchestra.Conductor_ID = conductor.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON show.Performance_ID = performance.Performance_ID WHERE performance.Year_of_Founded < 2003 INTERSECT   SELECT orchestra.Record_Company   FROM orchestra   JOIN conductor ON orchestra.Conductor_ID = conductor.Conductor_ID   JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID   JOIN show ON show.Performance_ID = performance.Performance_ID WHERE performance.Year_of_Founded > 2003 
 SELECT count(*) FROM orchestra WHERE major_record_format = "CD"   OR major_record_format = "DVD" 
 SELECT count(*) FROM orchestra WHERE major_record_format = "CD"   OR major_record_format = "DVD" 
 SELECT orchestra.Year_of_founded FROM orchestra JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID GROUP BY performance.Orchestra_ID HAVING COUNT(*) > 1 
 SELECT orchestra.Year_of_Founded FROM orchestra JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID GROUP BY orchestra.Orchestra_ID HAVING COUNT(*) > 1 
 SELECT count(*) FROM highschooler 
 SELECT count(*) FROM highschooler 
 SELECT name,        grade FROM Highschooler 
 SELECT name,        grade FROM Highschooler 
 SELECT DISTINCT grade FROM highschooler 
 SELECT DISTINCT grade FROM highschooler 
 SELECT grade FROM highschooler WHERE name = 'Kyle' 
 SELECT grade FROM highschooler WHERE name = "Kyle" 
 SELECT name FROM highschooler WHERE grade = 10 
 SELECT name FROM highschooler WHERE grade = 10 
 SELECT id FROM highschooler WHERE name = 'Kyle' 
 SELECT id FROM highschooler WHERE name = 'Kyle' 
 SELECT count(*) FROM highschooler WHERE grade = 9   OR grade = 10 
 SELECT count(*) FROM highschooler WHERE grade = 9   OR grade = 10 
 SELECT grade,        count(*) FROM highschooler GROUP BY grade 
 SELECT grade,        count(*) FROM Highschooler GROUP BY grade 
 SELECT grade FROM highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1 
 SELECT grade FROM highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1 
 SELECT grade FROM highschooler GROUP BY grade HAVING count(*) >= 4 
 SELECT grade FROM highschooler GROUP BY grade HAVING count(*) >= 4 
 SELECT Highschooler.id,        count(*) FROM Highschooler JOIN Friend ON Highschooler.id = Friend.friend_id GROUP BY Highschooler.id UNION SELECT Highschooler.id,        count(*) FROM Highschooler JOIN Likes ON Highschooler.id = Likes.liked_id GROUP BY Highschooler.id 
 SELECT count(DISTINCT friend_id),        student_id FROM highschooler JOIN friend ON highschooler.id = friend.student_id GROUP BY student_id 
 SELECT Highschooler.name,        count(*) FROM Highschooler JOIN Friend ON Highschooler.id = Friend.friend_id GROUP BY Highschooler.id 
 SELECT Highschooler.name,        count(*) FROM Highschooler JOIN Friend ON Highschooler.id = Friend.friend_id GROUP BY Highschooler.id 
 SELECT HIGHschooler.name FROM HIGHschooler JOIN Friend ON HIGHschooler.id = Friend.friend_id GROUP BY HIGHschooler.id ORDER BY count(*) DESC LIMIT 1 
 SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.id = Friend.friend_id GROUP BY Highschooler.id ORDER BY count(*) DESC LIMIT 1 
 SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.id = Friend.student_id GROUP BY Highschooler.id HAVING count(*) >= 3 
 SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.id = Friend.student_id GROUP BY Highschooler.id HAVING count(*) >= 3 
 SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.id = Friend.friend_id JOIN Likes ON Likes.student_id = Friend.student_id WHERE Likes.liked_id = (SELECT id                          FROM Highschooler                          WHERE name = 'Kyle') 
 SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.id = Friend.friend_id JOIN Highschooler AS Likes ON Likes.student_id = Friend.student_id WHERE Likes.name = 'Kyle' 
 SELECT count(DISTINCT friend.friend_id) FROM highschooler JOIN friend ON highschooler.id = friend.student_id WHERE highschooler.name = 'Kyle' 
 SELECT count(DISTINCT friend.friend_id) FROM highschooler JOIN friend ON highschooler.id = friend.student_id WHERE highschooler.name = 'Kyle' 
 SELECT id FROM highschooler WHERE id NOT IN     (SELECT student_id      FROM friend) 
 SELECT id FROM highschooler WHERE id NOT IN     (SELECT student_id      FROM friend) 
 SELECT name FROM highschooler WHERE id NOT IN     (SELECT student_id      FROM friend) 
 SELECT name FROM highschooler WHERE id NOT IN     (SELECT student_id      FROM friend) 
 SELECT Highschooler.id FROM Highschooler JOIN Friend ON Highschooler.id = Friend.student_id JOIN Likes ON Likes.student_id = Highschooler.id WHERE Likes.liked_id!= Highschooler.id 
 SELECT id FROM highschooler WHERE id IN     (SELECT friend_id      FROM friend      INTERSECT      SELECT student_id      FROM likes) 
 SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.id = Friend.student_id JOIN Likes ON Likes.student_id = Highschooler.id WHERE Likes.student_id!= Highschooler.id 
 SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.id = Friend.friend_id INTERSECT SELECT Highschooler.name FROM Highschooler JOIN Likes ON Highschooler.id = Likes.liked_id 
 SELECT count(*),        student_id FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON highschooler.id = likes.liked_id GROUP BY student_id 
 SELECT count(*),        student_id FROM likes GROUP BY student_id 
 SELECT Highschooler.name,        count(*) FROM Highschooler JOIN Friend ON Highschooler.id = Friend.friend_id JOIN Likes ON Highschooler.id = Likes.liked_id GROUP BY Likes.student_id 
 SELECT Highschooler.name,        count(*) FROM Highschooler JOIN Friend ON Highschooler.id = Friend.friend_id JOIN Likes ON Highschooler.id = Likes.liked_id GROUP BY Likes.student_id 
 SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.id = Friend.friend_id JOIN Likes ON Highschooler.id = Likes.liked_id GROUP BY Highschooler.id ORDER BY count(*) DESC LIMIT 1 
 SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.id = Friend.friend_id JOIN Likes ON Highschooler.id = Likes.liked_id GROUP BY Likes.student_id ORDER BY count(*) DESC LIMIT 1 
 SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.id = Friend.friend_id JOIN Likes ON Highschooler.id = Likes.student_id GROUP BY Likes.student_id HAVING count(*) >= 2 
 SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.id = Friend.friend_id JOIN Likes ON Highschooler.id = Likes.student_id GROUP BY Likes.student_id HAVING count(*) >= 2 
 SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.id = Friend.student_id GROUP BY Highschooler.id HAVING count(*) >= 2 INTERSECT SELECT Highschooler.name FROM Highschooler JOIN Likes ON Highschooler.id = Likes.liked_id WHERE Highschooler.grade > 5 
 SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.id = Friend.student_id GROUP BY Highschooler.id HAVING count(*) >= 2 INTERSECT SELECT Highschooler.name FROM Highschooler JOIN Likes ON Highschooler.id = Likes.liked_id WHERE Likes.student_id IN     (SELECT id      FROM Highschooler      WHERE grade > 5) 
 SELECT count(*) FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON highschooler.id = likes.liked_id WHERE friend.student_id = (     SELECT id     FROM highschooler     WHERE name = 'Kyle' ) 
 SELECT count(*) FROM highschooler JOIN friend ON highschooler.id = friend.friend_id JOIN likes ON highschooler.id = likes.liked_id WHERE friend.student_id = (     SELECT id     FROM highschooler     WHERE name = 'Kyle' ) 
 SELECT avg(grade) FROM highschooler WHERE id IN     (SELECT friend_id      FROM friend) 
 SELECT avg(grade) FROM highschooler WHERE id IN     (SELECT friend_id      FROM friend) 
 SELECT min(grade) FROM highschooler WHERE id NOT IN     (SELECT student_id      FROM friend) 
 SELECT grade FROM highschooler WHERE id NOT IN     (SELECT student_id      FROM friend) ORDER BY grade LIMIT 1 
 SELECT state FROM Owners INTERSECT SELECT state FROM Professionals 
 SELECT state FROM Owners INTERSECT SELECT state FROM Professionals 
 SELECT avg(dogs.age) FROM breeds JOIN charges ON breeds.breed_code = charges.charge_type JOIN sizes ON sizes.size_code = charges.charge_amount JOIN treatment_types ON treatment_types.treatment_type_code = charges.charge_type JOIN owners ON owners.owner_id = dogs.owner_id JOIN dogs ON dogs.owner_id = owners.owner_id JOIN professionals ON professionals.professional_id = treatment_types.treatment_type_code JOIN treatments ON treatments.dog_id = dogs.dog_id WHERE dogs.breed_code = breeds.breed_code   AND dogs.size_code = sizes.size_code   AND treatment_types.treatment_type_code = treatment_types.treatment_type_code   AND treatments.professional_id = professionals.professional_id 
 SELECT avg(dogs.age) FROM breeds JOIN charges ON breeds.breed_code = charges.charge_type JOIN sizes ON sizes.size_code = charges.charge_amount JOIN treatment_types ON treatment_types.treatment_type_code = charges.charge_type JOIN owners ON owners.owner_id = dogs.owner_id JOIN dogs ON dogs.owner_id = owners.owner_id JOIN professionals ON professionals.professional_id = treatment_types.treatment_type_code JOIN treatments ON treatments.dog_id = dogs.dog_id WHERE dogs.breed_code = breeds.breed_code   AND dogs.size_code = sizes.size_code   AND treatment_types.treatment_type_code = treatment_types.treatment_type_code   AND treatments.professional_id = professionals.professional_id 
 SELECT Professionals.professional_id,        Professionals.first_name,        Professionals.last_name,        Professionals.cell_number FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code JOIN Owners ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Professionals ON Treatments.professional_id = Professionals.professional_id WHERE Owners.state = "Indiana"   OR Treatments.treatment_id IN     (SELECT treatment_id      FROM Treatments      GROUP BY treatment_id      HAVING count(*) > 2) 
 SELECT Professionals.professional_id,        Professionals.last_name,        Professionals.cell_number FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code JOIN Owners ON Dogs.owner_id = Owners.owner_id JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Professionals ON Treatments.professional_id = Professionals.professional_id WHERE Owners.state = "Indiana" GROUP BY Treatments.professional_id HAVING count(*) > 2 
 SELECT Dogs.name FROM Breeds JOIN Charges ON Breeds.breed_code = Dogs.breed_code JOIN Sizes ON Sizes.size_code = Dogs.size_code JOIN Treatment_Types ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code JOIN Owners ON Owners.owner_id = Dogs.owner_id JOIN Professionals ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.cost_of_treatment > 1000 
 SELECT Dogs.name FROM Breeds JOIN Charges ON Breeds.breed_code = Dogs.breed_code JOIN Sizes ON Sizes.size_code = Dogs.size_code JOIN Treatment_Types ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code JOIN Owners ON Owners.owner_id = Dogs.owner_id JOIN Professionals ON Professionals.professional_id = Treatments.professional_id WHERE Owners.zip_code = "90292"   AND Treatments.cost_of_treatment > 1000 
 SELECT first_name FROM Owners UNION SELECT first_name FROM Professionals EXCEPT SELECT Dogs.name FROM Dogs JOIN Breeds ON Dogs.breed_code = Breeds.breed_code JOIN Sizes ON Dogs.size_code = Sizes.size_code JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code JOIN Professionals ON Treatments.professional_id = Professionals.professional_id WHERE Breeds.breed_name = "Labrador Retriever"   AND Sizes.size_description = "Large"   AND Treatment_Types.treatment_description = "Vaccination" 
 SELECT first_name FROM Owners UNION SELECT first_name FROM Professionals EXCEPT SELECT Dogs.name FROM Dogs JOIN Breeds ON Dogs.breed_code = Breeds.breed_code JOIN Sizes ON Dogs.size_code = Sizes.size_code JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code JOIN Professionals ON Treatments.professional_id = Professionals.professional_id WHERE Breeds.breed_name = "Labrador Retriever"   AND Sizes.size_description = "Large"   AND Treatment_Types.treatment_description = "Teeth Cleaning" 
 SELECT professionals.professional_id,        professions.role_code,        professions.email_address FROM Breeds JOIN charges ON Breeds.breed_code = charges.charge_id JOIN sizes ON sizes.size_code = charges.charge_id JOIN treatment_types ON treatment_types.treatment_type_code = charges.charge_id JOIN owners ON owners.owner_id = charges.owner_id JOIN dogs ON dogs.owner_id = owners.owner_id JOIN professionals ON professionals.professional_id = dogs.owner_id WHERE dogs.dog_id NOT IN     (SELECT treatments.dog_id      FROM treatments      JOIN professionals ON treatments.professional_id = professionals.professional_id) 
 SELECT professional_id,        role_code,        email_address FROM professionals EXCEPT SELECT treatments.professional_id,        Treatment_Types.treatment_type_code,        Professionals.email_address FROM treatments JOIN Treatment_Types ON treatments.treatment_type_code = Treatment_Types.treatment_type_code JOIN Professionals ON treatments.professional_id = Professionals.professional_id 
 SELECT owners.owner_id,        owners.first_name,        owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id GROUP BY owners.owner_id ORDER BY count(*) DESC LIMIT 1 
 SELECT owners.owner_id,        owners.first_name,        owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id GROUP BY owners.owner_id ORDER BY count(*) DESC LIMIT 1 
 SELECT Professionals.first_name,        Professionals.role_code,        Treatments.professional_id FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code JOIN Treatments ON Dogs.dog_id = Treatments.dog_id JOIN Professionals ON Treatments.professional_id = Professionals.professional_id GROUP BY Treatments.professional_id HAVING COUNT(*) >= 2 
 SELECT Professionals.first_name,        Professionals.role_code,        Treatments.professional_id FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code JOIN Treatments ON Dogs.dog_id = Treatments.dog_id JOIN Professionals ON Treatments.professional_id = Professionals.professional_id GROUP BY Treatments.professional_id HAVING COUNT(*) >= 2 
 SELECT Breeds.breed_name FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code GROUP BY Breeds.breed_name ORDER BY count(*) DESC LIMIT 1 
 SELECT Breeds.breed_name FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code GROUP BY Breeds.breed_name ORDER BY count(*) DESC LIMIT 1 
 SELECT owners.owner_id,        owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN treatments ON dogs.dog_id = treatments.dog_id JOIN professionals ON treatments.professional_id = professionals.professional_id GROUP BY owners.owner_id ORDER BY sum(treatments.cost_of_treatment) DESC LIMIT 1 
 SELECT owners.owner_id,        owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN treatments ON dogs.dog_id = treatments.dog_id GROUP BY owners.owner_id ORDER BY sum(treatments.cost_of_treatment) DESC LIMIT 1 
 SELECT Treatment_Types.treatment_type_description FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code JOIN Treatments ON Dogs.dog_id = Treatments.dog_id JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code JOIN Professionals ON Treatments.professional_id = Professionals.professional_id GROUP BY Treatments.treatment_type_code ORDER BY sum(Treatments.cost_of_treatment) LIMIT 1 
 SELECT Treatment_Types.treatment_type_description FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code JOIN Treatments ON Dogs.dog_id = Treatments.dog_id JOIN Professionals ON Treatments.professional_id = Professionals.professional_id JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code GROUP BY Treatments.treatment_type_code ORDER BY sum(Treatments.cost_of_treatment) LIMIT 1 
 SELECT owners.owner_id,        owners.zip_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN charges ON dogs.dog_id = charges.dog_id GROUP BY owners.owner_id ORDER BY sum(charges.charge_amount) DESC LIMIT 1 
 SELECT owners.owner_id,        owners.zip_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN charges ON dogs.dog_id = charges.dog_id GROUP BY owners.owner_id ORDER BY sum(charges.charge_amount) DESC LIMIT 1 
 SELECT Professionals.professional_id,        Professionals.cell_number FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Professionals ON Treatments.professional_id = Professionals.professional_id GROUP BY Professionals.professional_id HAVING COUNT(*) >= 2 
 SELECT professionals.professional_id,        professions.cell_number FROM Breeds JOIN dogs ON Breeds.breed_code = dogs.breed_code JOIN owners ON owners.owner_id = dogs.owner_id JOIN Treatments ON Treatments.dog_id = dogs.dog_id JOIN professionals ON Treatments.professional_id = professionals.professional_id GROUP BY professionals.professional_id HAVING count(*) >= 2 
 SELECT Professionals.first_name,        Professionals.last_name FROM Breeds JOIN Charges ON Breeds.breed_code = Dogs.breed_code JOIN Sizes ON Dogs.size_code = Sizes.size_code JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code JOIN Owners ON Dogs.owner_id = Owners.owner_id JOIN Professionals ON Treatments.professional_id = Professionals.professional_id WHERE Treatments.cost_of_treatment <     (SELECT avg(cost_of_treatment)      FROM Treatments) 
 SELECT Professionals.first_name,        Professionals.last_name FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code JOIN Treatments ON Dogs.dog_id = Treatments.dog_id JOIN Professionals ON Treatments.professional_id = Professionals.professional_id WHERE Treatments.cost_of_treatment <     (SELECT avg(cost_of_treatment)      FROM Treatments) 
 SELECT Treatments.date_of_treatment,        Professionals.first_name FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code JOIN Treatments ON Dogs.dog_id = Treatments.dog_id JOIN Professionals ON Treatments.professional_id = Professionals.professional_id WHERE Breeds.breed_name = "Labrador" 
 SELECT Treatments.date_of_treatment,        Professionals.first_name FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code JOIN Treatments ON Dogs.dog_id = Treatments.dog_id JOIN Professionals ON Treatments.professional_id = Professionals.professional_id WHERE Breeds.breed_name = "Labrador" 
 SELECT Treatments.cost_of_treatment,        Treatment_Types.treatment_type_description FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code JOIN Treatments ON Dogs.dog_id = Treatments.dog_id JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code 
 SELECT Treatments.cost_of_treatment,        Treatment_Types.treatment_type_description FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code JOIN Treatments ON Dogs.dog_id = Treatments.dog_id JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code 
 SELECT Owners.first_name,        Owners.last_name,        Sizes.size_description FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code JOIN Sizes ON Sizes.size_code = Dogs.size_code JOIN Owners ON Owners.owner_id = Dogs.owner_id 
 SELECT Owners.first_name,        Owners.last_name,        Sizes.size_description FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code JOIN Sizes ON Sizes.size_code = Dogs.size_code JOIN Owners ON Owners.owner_id = Dogs.owner_id 
 SELECT Owners.first_name,        Dogs.name FROM Breeds JOIN Charges ON Breeds.breed_code = Dogs.breed_code JOIN Sizes ON Sizes.size_code = Dogs.size_code JOIN Treatment_Types ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code JOIN Owners ON Owners.owner_id = Dogs.owner_id JOIN Professionals ON Professionals.professional_id = Treatments.professional_id WHERE Sizes.size_description = "Large"   AND Breeds.breed_name = "Labrador"   AND Treatment_Types.treatment_type_description = "Teeth Cleaning" 
 SELECT Owners.first_name,        Dogs.name FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code JOIN Owners ON Dogs.owner_id = Owners.owner_id 
 SELECT Dogs.name,        Treatments.date_of_treatment FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id WHERE Breeds.breed_name =     (SELECT breed_name      FROM Breeds      GROUP BY breed_name      ORDER BY count(*) ASC      LIMIT 1) 
 SELECT Dogs.name,        Treatments.date_of_treatment FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id WHERE Breeds.breed_name =     (SELECT breed_name      FROM Breeds      GROUP BY breed_name      ORDER BY count(*) ASC      LIMIT 1) 
 SELECT Dogs.name,        Owners.first_name FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code JOIN Owners ON Dogs.owner_id = Owners.owner_id WHERE Owners.state = "Virginia" 
 SELECT Owners.first_name,        Dogs.name FROM Breeds JOIN Charges ON Breeds.breed_code = Dogs.breed_code JOIN Sizes ON Sizes.size_code = Dogs.size_code JOIN Treatment_Types ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code JOIN Professionals ON Professionals.professional_id = Treatments.professional_id JOIN Owners ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = "Virginia" 
 SELECT Dogs.date_arrived,        Dogs.date_departed FROM Breeds JOIN Charges ON Breeds.breed_code = Dogs.breed_code JOIN Sizes ON Sizes.size_code = Dogs.size_code JOIN Treatment_Types ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code JOIN Owners ON Owners.owner_id = Dogs.owner_id JOIN Dogs ON Dogs.owner_id = Owners.owner_id JOIN Professionals ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.cost_of_treatment > Charges.charge_amount 
 SELECT Dogs.date_arrived,        Treatments.date_of_treatment FROM Breeds JOIN Charges ON Breeds.breed_code = Dogs.breed_code JOIN Sizes ON Sizes.size_code = Dogs.size_code JOIN Treatment_Types ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code JOIN Owners ON Owners.owner_id = Dogs.owner_id JOIN Dogs ON Dogs.owner_id = Owners.owner_id JOIN Professionals ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.cost_of_treatment > Charges.charge_amount 
 SELECT Owners.last_name FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code JOIN Owners ON Dogs.owner_id = Owners.owner_id WHERE Dogs.date_of_birth =     (SELECT min(date_of_birth)      FROM Dogs) 
 SELECT Owners.last_name FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code JOIN Owners ON Dogs.owner_id = Owners.owner_id WHERE Dogs.date_of_birth =     (SELECT min(date_of_birth)      FROM Dogs) 
 SELECT professionals.email_address FROM Breeds JOIN charges ON Breeds.breed_code = charges.charge_id JOIN sizes ON sizes.size_code = charges.charge_id JOIN treatment_types ON treatment_types.treatment_type_code = charges.charge_id JOIN owners ON owners.owner_id = dogs.owner_id JOIN dogs ON dogs.dog_id = treatments.dog_id JOIN professionals ON professionals.professional_id = treatments.professional_id WHERE owners.state = "Hawaii"   OR owners.state = "Wisconsin" 
 SELECT professionals.email_address FROM Breeds JOIN charges ON Breeds.breed_code = charges.charge_id JOIN sizes ON sizes.size_code = charges.charge_id JOIN treatment_types ON treatment_types.treatment_type_code = charges.charge_id JOIN owners ON owners.owner_id = dogs.owner_id JOIN dogs ON dogs.dog_id = treatments.dog_id JOIN professionals ON professionals.professional_id = treatments.professional_id WHERE owners.state = "Hawaii"   OR owners.state = "Wisconsin" 
 SELECT date_arrived,        date_departed FROM Dogs 
 SELECT Dogs.date_arrived,        Dogs.date_departed FROM Breeds JOIN Charges ON Breeds.breed_code = Dogs.breed_code JOIN Sizes ON Sizes.size_code = Dogs.size_code JOIN Treatment_Types ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code JOIN Owners ON Owners.owner_id = Dogs.owner_id JOIN Dogs ON Dogs.owner_id = Owners.owner_id JOIN Professionals ON Professionals.professional_id = Treatments.professional_id WHERE Dogs.dog_id = Treatments.dog_id 
 SELECT count(*) FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id 
 SELECT count(*) FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id 
 SELECT count(DISTINCT professionals.first_name) FROM Breeds JOIN charges ON Breeds.breed_code = charges.charge_type JOIN sizes ON sizes.size_code = charges.charge_amount JOIN treatment_types ON treatment_types.treatment_type_code = charges.charge_type JOIN dogs ON dogs.size_code = sizes.size_code JOIN professionals ON dogs.owner_id = professionals.owner_id JOIN treatments ON dogs.dog_id = treatments.dog_id WHERE treatment_types.treatment_type_code = Breeds.breed_code 
 SELECT count(DISTINCT professionals.first_name) FROM Breeds JOIN charges ON Breeds.breed_code = charges.charge_type JOIN sizes ON sizes.size_code = charges.charge_amount JOIN treatment_types ON treatment_types.treatment_type_code = charges.charge_type JOIN owners ON owners.owner_id = dogs.owner_id JOIN dogs ON dogs.dog_id = treatments.dog_id JOIN professionals ON professionals.professional_id = treatments.professional_id WHERE dogs.breed_code = Breeds.breed_code   AND dogs.size_code = sizes.size_code   AND treatments.treatment_type_code = treatment_types.treatment_type_code 
 SELECT Professionals.role_code,        Professionals.street,        Professionals.city,        Professionals.state FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code JOIN Owners ON Dogs.owner_id = Owners.owner_id JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Professionals ON Treatments.professional_id = Professionals.professional_id WHERE Owners.city LIKE '%West%' 
 SELECT role_code,        street,        city,        state FROM professionals WHERE city LIKE '%West%' 
 SELECT Owners.first_name,        Owners.last_name,        Owners.email_address FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code JOIN Owners ON Dogs.owner_id = Owners.owner_id WHERE Breeds.breed_name LIKE '%North%' 
 SELECT Owners.first_name,        Owners.last_name,        Owners.email_address FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code JOIN Owners ON Dogs.owner_id = Owners.owner_id WHERE Breeds.breed_name LIKE '%North%' 
 SELECT count(*) FROM dogs WHERE age <     (SELECT avg(age)      FROM dogs) 
 SELECT count(*) FROM dogs WHERE age <     (SELECT avg(age)      FROM dogs) 
 SELECT charges.charge_amount FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code JOIN Treatments ON Dogs.dog_id = Treatments.dog_id JOIN Professionals ON Treatments.professional_id = Professionals.professional_id JOIN charges ON Treatments.cost_of_treatment = charges.charge_amount WHERE Treatments.date_of_treatment =     (SELECT max(date_of_treatment)      FROM Treatments) 
 SELECT charges.charge_amount FROM breeds JOIN charges ON breeds.breed_code = charges.charge_type JOIN sizes ON sizes.size_code = charges.charge_amount JOIN treatment_types ON treatment_types.treatment_type_code = charges.charge_type JOIN dogs ON dogs.breed_code = breeds.breed_code JOIN professionals ON professionals.professional_id = treatment_types.treatment_type_code JOIN treatments ON treatments.dog_id = dogs.dog_id WHERE dogs.date_of_birth =     (SELECT date_of_birth      FROM dogs      ORDER BY dogs.date_of_birth DESC      LIMIT 1) 
 SELECT count(*) FROM dogs WHERE dog_id NOT IN     (SELECT dog_id      FROM treatments) 
 SELECT count(*) FROM dogs WHERE dog_id NOT IN     (SELECT dog_id      FROM treatments) 
 SELECT count(*) FROM Owners WHERE home_phone = ''   AND cell_number = ''   AND state = "TX"   AND zip_code = "78704"   AND email_address = "temporary_email@example.com" 
 SELECT count(*) FROM Owners WHERE owner_id NOT IN     (SELECT owner_id      FROM Dogs) 
 SELECT count(*) FROM professionals WHERE professional_id NOT IN     (SELECT professional_id      FROM treatments) 
 SELECT count(*) FROM professionals WHERE professional_id NOT IN     (SELECT professional_id      FROM treatments) 
 SELECT Dogs.name,        Dogs.age,        Dogs.weight FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code WHERE Dogs.abandoned_yn = 1 
 SELECT Dogs.name,        Dogs.age,        Dogs.weight FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code WHERE Dogs.abandoned_yn = 1 
 SELECT avg(dogs.age) FROM breeds JOIN charges ON breeds.breed_code = charges.charge_type JOIN sizes ON sizes.size_code = charges.charge_amount JOIN treatment_types ON treatment_types.treatment_type_code = charges.charge_type JOIN owners ON owners.owner_id = dogs.owner_id JOIN dogs ON dogs.dog_id = treatment_types.treatment_type_code WHERE dogs.abandoned_yn = 'N' 
 SELECT avg(dogs.age) FROM breeds JOIN charges ON breeds.breed_code = charges.charge_type JOIN sizes ON sizes.size_code = charges.charge_amount JOIN treatment_types ON treatment_types.treatment_type_code = charges.charge_type JOIN owners ON owners.owner_id = dogs.owner_id JOIN dogs ON dogs.dog_id = treatment_types.treatment_type_code WHERE dogs.abandoned_yn = 'N' 
 SELECT age FROM Dogs ORDER BY date_of_birth LIMIT 1 
 SELECT age FROM Dogs ORDER BY date_of_birth LIMIT 1 
 SELECT CHARGE_TYPES.charge_type,        CHARGES.charge_amount FROM CHARGES JOIN CHARGE_TYPES ON CHARGES.charge_type = CHARGE_TYPES.charge_type 
 SELECT charge_type,        charge_amount FROM charges 
 SELECT charge_amount FROM charges ORDER BY charge_amount DESC LIMIT 1 
 SELECT charges.charge_amount FROM breeds JOIN charges ON breeds.breed_code = charges.charge_type GROUP BY charges.charge_type ORDER BY sum(charge_amount) DESC LIMIT 1 
 SELECT email_address,        cell_number,        home_phone FROM professionals 
 SELECT email_address,        cell_number,        home_phone FROM professionals 
 SELECT Breeds.breed_name,        Sizes.size_description FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code JOIN Sizes ON Dogs.size_code = Sizes.size_code 
 SELECT DISTINCT Breeds.breed_name,                 Sizes.size_description FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code JOIN Sizes ON Dogs.size_code = Sizes.size_code 
 SELECT Professionals.first_name,        Treatment_Types.treatment_type_description FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code JOIN Treatments ON Dogs.dog_id = Treatments.dog_id JOIN Professionals ON Treatments.professional_id = Professionals.professional_id JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code 
 SELECT Professionals.first_name,        Treatment_Types.treatment_type_description FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code JOIN Treatments ON Dogs.dog_id = Treatments.dog_id JOIN Professionals ON Treatments.professional_id = Professionals.professional_id JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code 
 SELECT count(*) FROM singer 
 SELECT count(*) FROM singer 
 SELECT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID ORDER BY singer.Net_Worth_Millions ASC 
 SELECT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID ORDER BY singer.Net_Worth_Millions ASC 
 SELECT singer.birth_year,        singer.citizenship FROM singer JOIN song ON singer.singer_id = song.singer_id 
 SELECT singer.birth_year,        singer.citizenship FROM singer JOIN song ON singer.singer_id = song.singer_id 
 SELECT singer.Name FROM singer WHERE singer.Citizenship!= "France" 
 SELECT name FROM singer WHERE citizenship!= "French" 
 SELECT singer.name FROM singer JOIN song ON singer.singer_id = song.singer_id WHERE singer.birth_year = 1948   OR singer.birth_year = 1949 
 SELECT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE singer.Birth_Year = 1948   OR singer.Birth_Year = 1949 
 SELECT singer.name FROM singer JOIN song ON singer.singer_id = song.singer_id ORDER BY singer.net_worth_millions DESC LIMIT 1 
 SELECT singer.name FROM singer JOIN song ON singer.singer_id = song.singer_id ORDER BY singer.net_worth_millions DESC LIMIT 1 
 SELECT Citizenship,        COUNT(*) FROM singer GROUP BY Citizenship 
 SELECT Citizenship,        COUNT(*) FROM singer GROUP BY Citizenship 
 SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1 
 SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1 
 SELECT Citizenship,        max(Net_Worth_Millions) FROM singer GROUP BY Citizenship 
 SELECT singer.citizenship,        max(singer.net_worth_millions) FROM singer JOIN song ON singer.singer_id = song.singer_id GROUP BY singer.citizenship 
 SELECT song.Title,        singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID 
 SELECT song.Title,        singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID 
 SELECT DISTINCT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000 
 SELECT DISTINCT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000 
 SELECT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY song.Singer_ID HAVING COUNT(*) > 1 
 SELECT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY song.Singer_ID HAVING COUNT(*) > 1 
 SELECT singer.Name,        sum(song.Sales) FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Name 
 SELECT singer.name,        sum(song.sales) FROM singer JOIN song ON singer.singer_id = song.singer_id GROUP BY singer.name 
 SELECT Name FROM singer WHERE Singer_ID NOT IN     (SELECT Singer_ID      FROM song) 
 SELECT Name FROM singer WHERE Singer_ID NOT IN     (SELECT Singer_ID      FROM song) 
 SELECT Citizenship FROM singer WHERE Birth_Year < 1945 INTERSECT   SELECT Citizenship   FROM singer WHERE Birth_Year > 1955 
 SELECT Citizenship FROM singer WHERE Birth_Year < 1945 INTERSECT   SELECT Citizenship   FROM singer WHERE Birth_Year > 1955 
 SELECT count(*) FROM Ref_Feature_Types 
 SELECT Ref_Feature_Types.feature_type_name FROM Ref_Feature_Types JOIN Other_Available_Features ON Ref_Feature_Types.feature_type_code = Other_Available_Features.feature_type_code WHERE Other_Available_Features.feature_name = "AirCon" 
 SELECT Ref_Property_Types.property_type_description FROM Ref_Property_Types JOIN Properties ON Ref_Property_Types.property_type_code = Properties.property_type_code JOIN Other_Property_Features ON Other_Property_Features.property_id = Properties.property_id JOIN Other_Available_Features ON Other_Property_Features.feature_id = Other_Available_Features.feature_id WHERE Other_Available_Features.feature_type_code = "Pool" 
 SELECT Properties.property_name FROM Ref_Feature_Types JOIN Ref_Property_Types ON Ref_Feature_Types.feature_type_code = Ref_Property_Types.property_type_code JOIN Other_Available_Features ON Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code JOIN Properties ON Properties.property_type_code = Ref_Property_Types.property_type_code WHERE Ref_Property_Types.property_type_name = "House"   OR Ref_Property_Types.property_type_name = "Apartment"   AND Properties.room_count > 1 
